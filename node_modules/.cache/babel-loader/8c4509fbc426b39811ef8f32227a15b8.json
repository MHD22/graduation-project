{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/graduation-project/graduation-project/src/components/TeacherRegister.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { Redirect } from \"react-router-dom\";\n\nclass TeacherRegister extends Component {\n  constructor() {\n    super();\n\n    this.newTeacher = e => {\n      e.preventDefault();\n      let formTeacher = document.getElementById('formTeacher');\n      let teacherData = {\n        firstName: formTeacher.fname.value,\n        lastName: formTeacher.lname.value,\n        email: formTeacher.email.value,\n        password: formTeacher.tpassword.value,\n        id_number: formTeacher.t_id.value\n      };\n      this.setState({\n        teacherData\n      }); // this.clearForm() ;\n\n      if (teacherData.firstName && teacherData.lastName && teacherData.password && teacherData.id_number && teacherData.email) {\n        this.storeTeacherDataInDB(teacherData);\n      } else {\n        alert(\"you should enter all the fields.\");\n      }\n    };\n\n    this.storeTeacherDataInDB = teacherData => {\n      let {\n        email,\n        id_number\n      } = teacherData;\n      let bodyData = {\n        email,\n        id_number\n      };\n      fetch('http://localhost:3000/teachers', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyData)\n      }).then(res => res.json()).then(res => {\n        if (res === 'Teacher Is Already Exist.') {\n          // mazen \n          alert(\"teacher is exist\");\n        } else {\n          let start = res.indexOf('token:'); //5\n\n          if (start !== -1) {\n            let hashedToken = res.slice(6);\n            this.setState({\n              hashedToken,\n              verified: true\n            });\n            document.getElementsByClassName('registerAsButton')[0].style.display = 'none';\n            document.getElementsByClassName('registerAsButton')[1].style.display = 'none';\n          } else {// mazen : something wrong , try again, please.\n          }\n        }\n      }).catch(\"error during send Teacher data to backend\");\n    };\n\n    this.clearForm = () => {\n      document.getElementById('fname').value = \"\";\n      document.getElementById('lname').value = \"\";\n      document.getElementById('t_id').value = \"\";\n      document.getElementById('tpassword').value = \"\";\n    };\n\n    this.handleClose = e => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.done = e => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.saveTeacher = e => {\n      e.preventDefault();\n      let token = document.getElementById('token').value;\n\n      if (token) {\n        let teacherData = Object.assign({}, this.state.teacherData);\n        let {\n          hashedToken\n        } = this.state;\n        teacherData.hashedToken = hashedToken;\n        teacherData.token = token;\n        console.log(teacherData, \" <= teacher data.  \");\n        fetch('http://localhost:3000/teacherRegister', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(teacherData)\n        }).then(res => res.json()).then(res => {\n          if (res === 'Teacher Added Successfully') {\n            // mazen added success \n            alert(\"hooooooo, mazen.\");\n            this.storedUserInSession(this.state.teacherData);\n            this.goToHomePage();\n          } else {\n            // mazen  wrong token \n            alert(\"ooops, not mazen., token is wrong\");\n          }\n        }).catch(e => {\n          console.log(\"error when storing teacher data with the tokens.\", e);\n        });\n      }\n    };\n\n    this.storedUserInSession = userData => {\n      const {\n        firstName,\n        lastName,\n        id_number\n      } = userData;\n      const storedData = {\n        firstName,\n        lastName,\n        id_number\n      };\n      sessionStorage.setItem('teacher', JSON.stringify(storedData));\n    };\n\n    this.goToHomePage = () => {\n      window.location.replace(\"http://localhost:3001\");\n    };\n\n    this.state = {\n      verified: false,\n      teacherData: {},\n      hashedToken: '',\n      route: null\n    };\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.route ? /*#__PURE__*/React.createElement(Redirect, {\n      to: this.state.route,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 32\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"formTeacher\",\n      hidden: this.state.verified,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"fname\",\n      placeholder: \"First Name ..\",\n      className: \"form-input mt-4\",\n      name: \"fname\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Last Name ..\",\n      className: \"form-input mt-4\",\n      id: \"lname\",\n      name: \"lname\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"Email ..\",\n      className: \"form-input mt-4\",\n      id: \"email\",\n      name: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"t_id\",\n      placeholder: \"Teacher ID ..\",\n      className: \"form-input mt-4\",\n      name: \"t_id\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password ..\",\n      className: \"form-input mt-4\",\n      name: \"tpassword\",\n      id: \"tpassword\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success btn-submit mt-4\",\n      onClick: this.newTeacher,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, \"Register\")), /*#__PURE__*/React.createElement(\"form\", {\n      hidden: !this.state.verified,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, \"Verification\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"token\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, \"Enter your access token Which sent on your email:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"token\",\n      placeholder: \"Access token\",\n      className: \"form-input mt-4\",\n      name: \"token\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-success btn-submit mt-4\",\n      onClick: this.saveTeacher,\n      value: \"OK!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default TeacherRegister;","map":{"version":3,"sources":["/Users/mhd.sad22/graduation-project/graduation-project/src/components/TeacherRegister.js"],"names":["React","Component","Modal","Button","Redirect","TeacherRegister","constructor","newTeacher","e","preventDefault","formTeacher","document","getElementById","teacherData","firstName","fname","value","lastName","lname","email","password","tpassword","id_number","t_id","setState","storeTeacherDataInDB","alert","bodyData","fetch","method","headers","body","JSON","stringify","then","res","json","start","indexOf","hashedToken","slice","verified","getElementsByClassName","style","display","catch","clearForm","handleClose","show","done","redirect","saveTeacher","token","Object","assign","state","console","log","storedUserInSession","goToHomePage","userData","storedData","sessionStorage","setItem","window","location","replace","route","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react' ;\nimport {Modal , Button} from 'react-bootstrap' ;\nimport { Redirect } from \"react-router-dom\";\n\nclass TeacherRegister extends Component{\n    constructor(){\n        super();\n        this.state={\n            verified: false,\n            teacherData:{},\n            hashedToken:'',\n            route:null,\n            \n        }\n    }\n    newTeacher=(e)=> {\n        e.preventDefault();\n        let formTeacher = document.getElementById('formTeacher');\n        let teacherData ={\n        firstName : formTeacher.fname.value,\n        lastName : formTeacher.lname.value,\n        email    : formTeacher.email.value,\n        password : formTeacher.tpassword.value,\n        id_number : formTeacher.t_id.value,\n        }\n        this.setState({teacherData});\n\n        // this.clearForm() ;\n        \n        if(teacherData.firstName && teacherData.lastName && teacherData.password && teacherData.id_number && teacherData.email){\n                this.storeTeacherDataInDB(teacherData);    \n        }\n        else {\n            alert(\"you should enter all the fields.\");\n        }\n    }\n\n    storeTeacherDataInDB=(teacherData) => {\n        let {email , id_number }=teacherData;\n        let bodyData = {email,id_number};\n        fetch('http://localhost:3000/teachers',{\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(bodyData),\n        })\n        .then(res => res.json())\n        .then(res=>{\n           \n            if(res === 'Teacher Is Already Exist.'){\n               // mazen \n               alert(\"teacher is exist\");\n            }\n            else {\n                let start = res.indexOf('token:'); //5\n                if(start !== -1){\n                    let hashedToken = res.slice(6);\n                    this.setState({hashedToken,verified:true})\n                    document.getElementsByClassName('registerAsButton')[0].style.display='none';\n                    document.getElementsByClassName('registerAsButton')[1].style.display='none';\n\n                }\n                else{\n                    // mazen : something wrong , try again, please.\n                }\n            }\n\n        })\n        .catch(\"error during send Teacher data to backend\");\n    }; \n\n    clearForm = () => {\n        document.getElementById('fname').value = \"\" ;\n        document.getElementById('lname').value = \"\" ;\n        document.getElementById('t_id').value = \"\" ;\n        document.getElementById('tpassword').value = \"\" ;\n    }\n\n    handleClose = (e) => {\n        this.setState({\n            show : false \n        }) ;\n    }\n\n    done = (e) => {\n        this.setState({\n            redirect : true\n        }) ;\n    }\n    saveTeacher=(e)=>{\n        e.preventDefault();\n        let token = document.getElementById('token').value;\n        if(token){\n            let teacherData =Object.assign({},this.state.teacherData);\n            let {hashedToken} = this.state;\n            teacherData.hashedToken=hashedToken;\n            teacherData.token=token;\n            console.log(teacherData , \" <= teacher data.  \");\n            \n            fetch('http://localhost:3000/teacherRegister',{\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(teacherData),\n        })\n        .then(res => res.json())\n        .then(res=>{\n            if(res === 'Teacher Added Successfully'){\n\n                // mazen added success \n                alert(\"hooooooo, mazen.\");\n                this.storedUserInSession(this.state.teacherData);\n                this.goToHomePage();\n\n            }\n            else{\n                // mazen  wrong token \n                alert(\"ooops, not mazen., token is wrong\")\n            }\n        })\n        .catch(e=>{console.log(\"error when storing teacher data with the tokens.\",e)});\n        }\n    }\n    storedUserInSession = (userData)=>{\n        const {firstName,lastName,id_number} = userData;\n        const storedData = {firstName,lastName,id_number};\n        sessionStorage.setItem('teacher',JSON.stringify(storedData));\n    }\n    goToHomePage=()=>{\n        window.location.replace(\"http://localhost:3001\");\n    }\n\n    render(){\n\n        if(this.state.redirect){\n            return <Redirect to='/'/>;\n        }\n\n        return(\n            <>\n            {this.state.route? <Redirect to={this.state.route}/> : null}\n            <form id=\"formTeacher\" hidden={this.state.verified}>\n                <input type=\"text\" id=\"fname\" placeholder=\"First Name ..\" className=\"form-input mt-4\" name=\"fname\" required />\n                <br />\n                <input type=\"text\" placeholder=\"Last Name ..\" className=\"form-input mt-4\" id=\"lname\" name=\"lname\" required/>\n                <br />\n                <input type=\"email\" placeholder=\"Email ..\" className=\"form-input mt-4\" id=\"email\" name=\"email\" required/>\n                <br />\n                <input type=\"text\" id=\"t_id\" placeholder=\"Teacher ID ..\" className=\"form-input mt-4\" name=\"t_id\" required/>\n                <br />\n                <input type=\"password\" placeholder=\"Password ..\" className=\"form-input mt-4\" name=\"tpassword\" id=\"tpassword\" required/>\n                <br /> \n                <button type=\"submit\" className=\"btn btn-success btn-submit mt-4\" onClick={this.newTeacher} >\n                Register\n                </button>\n            </form>\n            <form hidden={! this.state.verified} >\n                <fieldset >\n                    <legend>Verification</legend>\n                    <label htmlFor=\"token\">Enter your access token Which sent on your email:</label>\n                    <br/>\n                    <input type=\"text\" id=\"token\" placeholder=\"Access token\" className=\"form-input mt-4\" name=\"token\" required />\n                    <br/>\n                    <input type=\"submit\" className=\"btn btn-success btn-submit mt-4\" onClick={this.saveTeacher} value=\"OK!\"/>     \n                </fieldset>\n            </form>\n            \n            </>\n        );}\n}\nexport default TeacherRegister ;"]},"metadata":{},"sourceType":"module"}