{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/graduation-project/graduation-project/src/components/MyClasses.js\";\nimport { Button } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport noImage from '../noImage.png';\nimport StudentsTable from './StudentsTable';\nimport Details from './Details';\nimport History from './History';\nimport { storage } from '../firebase/index';\nimport EditClass from './EditClass';\nimport { BrowserRouter, Link, Redirect, Route, Switch, useParams, useRouteMatch } from 'react-router-dom';\n\nclass MyClasses extends Component {\n  constructor() {\n    super();\n\n    this.checkLoggedIn = () => {\n      const data = sessionStorage.getItem('teacher');\n\n      if (!data) {\n        window.location.replace('http://localhost:3001/login');\n      } else {\n        this.setState({\n          hidePage: false\n        });\n      }\n    };\n\n    this.checkAttendence = e => {\n      this.setState({\n        load: true,\n        doneDisable: true\n      }); //Create a reader to read an uploaded file .\n\n      let reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n\n      reader.onload = event => {\n        //Get the uploaded image and store it in let image .\n        let image = new Image();\n        image.src = event.target.result; //Create to letiable to store image width and height .\n\n        let imgHeight, imgWidth;\n\n        image.onload = async function () {\n          imgHeight = this.height;\n          imgWidth = this.width; //The function will store width and height values in State . \n\n          setData();\n        };\n\n        let setData = () => {\n          this.setState({\n            width: imgWidth,\n            height: imgHeight\n          });\n        };\n      };\n\n      const img = e.target;\n\n      if (img) {\n        this.setState({\n          file2: e.target.files[0],\n          file: URL.createObjectURL(e.target.files[0])\n        });\n        this.faceRecognition(img.files[0]);\n      }\n\n      e.target.value = null;\n    };\n\n    this.setShowBtn = () => {\n      this.setState({\n        showUploadBtn: true\n      });\n    };\n\n    this.sendHistoryData = () => {\n      let requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'ids': this.state.ids,\n          'imgs': this.state.imgs\n        })\n      };\n      fetch(`http://localhost:3000/history/${this.state.selected_class}`, requestOptions).then(res => res.json()).then(console.log).catch(e => {\n        console.log(\"An Error occured while sending history Data ..\", e);\n      });\n      let date = new Date();\n      let fullDate = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n      let historyData = {\n        students: this.state.ids,\n        allStudents: this.state.students,\n        imgs: this.state.imgs,\n        className: this.state.selected_class,\n        date: fullDate\n      };\n      this.setState({\n        ids: [],\n        imgs: [],\n        selected_class: [],\n        historyData: historyData,\n        disableButton: true,\n        route: 'show/details'\n      });\n    };\n\n    this.faceRecognition = img => {\n      let formdata = new FormData();\n      formdata.append(\"photo\", img, \"file\");\n      let requestOptions = {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n      };\n      fetch('http://localhost:3000/checkImage', requestOptions).then(response => response.json()).then(result => {\n        console.log(result); //Define canvas to draw rectangle .\n\n        let canvas = document.getElementById('canvas');\n        let ctx = canvas.getContext('2d'); //Canvas properties .\n\n        ctx.strokeStyle = 'yellow';\n        ctx.fillStyle = 'yellow';\n        ctx.lineWidth = '5'; //Change the background of context to the uploaded image .\n\n        let image = document.getElementById('person');\n        ctx.drawImage(image, 0, 0);\n        let studetnsIDs = this.state.students.map(std => {\n          return std.id;\n        });\n        let {\n          ids\n        } = this.state;\n\n        for (let i in result) {\n          let name = result[i].name.substring(0, result[i].name.indexOf('|'));\n          let id = result[i].name.substring(result[i].name.indexOf('|') + 2);\n\n          if (!studetnsIDs.includes(id)) {\n            continue;\n          }\n\n          if (result[i].probability * 100 < 90) {\n            continue;\n          }\n\n          if (!ids.includes(id)) {\n            ids.push(id);\n          } //Get the values of Rectangle .\n\n\n          let {\n            left,\n            right,\n            bottom,\n            top\n          } = result[i].rectangle; //Determine the width and hight for rectangle .\n\n          let Dim = right - left; //Determine font size and the space between rectangle and text .\n\n          let space = parseInt(Dim / 3),\n              text = `${space}px Lobster`;\n          ctx.font = text; //Draw the rectangle .\n\n          ctx.strokeRect(left, top, Dim, Dim); //Type the name of person .\n\n          ctx.fillText(name, left, bottom + space);\n        }\n\n        this.setState({\n          ids: ids // imgs : [imagesLink]\n\n        });\n        let space = this.state.width / 20;\n        ctx.fillStyle = 'black';\n        let text = `${space}px serif`;\n        ctx.font = text;\n        ctx.fillText(new Date().toLocaleString(), this.state.width / 2 - 5 * space, 50);\n        this.setState({\n          showImage: false\n        }); // Store image in firebase ........\n\n        let dataURL = canvas.toDataURL(\"image/png\");\n        console.log(ids);\n        this.setState({\n          file: dataURL\n        });\n        let formdata = this.getImageURL(dataURL);\n        this.convertImageToURL(formdata.get('image'));\n        console.log(\"Imgs : \", this.state.imgs);\n        this.colorTable(result);\n        this.setState({\n          load: false\n        });\n      }).catch(error => console.log('error', error));\n    };\n\n    this.colorTable = result => {\n      let {\n        ids\n      } = this.state;\n\n      for (let i of ids) {\n        document.getElementById(i + \"\").className = 'bg-success text-light';\n      }\n    };\n\n    this.clear = () => {\n      this.setState({\n        showImage: true,\n        showUploadBtn: false\n      });\n      let {\n        students\n      } = this.state;\n\n      for (let student of students) {\n        document.getElementById(student.id).className = '';\n      }\n    };\n\n    this.CheckClass = e => {\n      const name = e.target.getAttribute('data-class');\n      this.setState({\n        selected_class: name\n      });\n      let arr = [];\n      this.state.classes.forEach(element => {\n        if (element.className === name) {\n          element.students.forEach(std => {\n            arr.push({\n              id: std.id_number,\n              name: std.firstName + \" \" + std.lastName\n            });\n          });\n        }\n      });\n      this.setState({\n        ids: [],\n        imgs: [],\n        students: arr,\n        hidePage: true\n      });\n    };\n\n    this.editClass = () => {\n      this.setState({\n        direction: 'edit',\n        route: 'show/editClass'\n      });\n    };\n\n    this.back = () => {\n      this.setState({\n        hidePage: false\n      });\n      this.clear();\n    };\n\n    this.showHistoryPage = () => {\n      this.setState({\n        route: '/show/classHistory'\n      });\n    };\n\n    this.state = {\n      file: null,\n      width: 0,\n      height: 0,\n      ids: [],\n      students: [],\n      absenceStudents: [],\n      attendStudents: [],\n      showImage: true,\n      showUploadBtn: false,\n      load: false,\n      hidePage: false,\n      classes: [],\n      selected_class: '',\n      imgs: [],\n      faces: [],\n      disableButton: false,\n      direction: 'check',\n      // OR history , details , edit\n      historyData: {},\n      route: null,\n      doneDisable: true\n    };\n  } // Get all the classes for the logged in teacher .\n\n\n  componentDidMount() {\n    this.checkLoggedIn();\n    fetch('http://localhost:3000/teacherClasses?id=' + JSON.parse(sessionStorage.getItem('teacher')).id_number).then(res => res.json()).then(data => {\n      this.setState({\n        classes: data,\n        route: '/show'\n      });\n    }).catch(e => console.log(e));\n  } //To Check if LoggedIn .\n\n\n  getImageURL(dataURL) {\n    let blobBin = atob(dataURL.split(',')[1]);\n    let array = [];\n\n    for (let i = 0; i < blobBin.length; i++) {\n      array.push(blobBin.charCodeAt(i));\n    }\n\n    let file = new Blob([new Uint8Array(array)], {\n      type: 'image/png'\n    });\n    let formdata = new FormData();\n    formdata.append(\"image\", file);\n    return formdata;\n  }\n\n  convertImageToURL(image) {\n    if (image) {\n      let imageName = \"studentsImage\" + new Date().getTime();\n      const upload = storage.ref(`images/${imageName}`).put(image);\n      upload.on('state_changed', snapshot => {}, err => {\n        console.log(\"error while getting data from firebase.\\n\", err);\n        return '';\n      }, () => {\n        storage.ref('images').child(imageName).getDownloadURL().then(urll => {\n          console.log(urll);\n          let imgs = [].concat(this.state.imgs);\n          imgs.push(urll);\n          this.setState({\n            imgs: imgs,\n            doneDisable: false\n          });\n          return urll;\n        });\n      });\n    }\n  } // To change the row color according to the attendence .\n\n\n  render() {\n    let {\n      url,\n      path\n    } = this.props.match;\n    let classInfo = {\n      'students': this.state.students,\n      'className': this.state.selected_class\n    };\n    let bgColors = ['bg-dark', 'bg-primary', 'bg-info', 'bg-success', 'bg-secondary'];\n    let rows = this.state.classes.map(cs => {\n      const num = parseInt(Math.random() * bgColors.length);\n      const classNames = `${bgColors[num]} col-md-5 ml-1 class rounded mt-1 text-center text-light cursor`;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: this.CheckClass,\n        key: cs._id,\n        \"data-class\": cs.className,\n        \"data-student\": cs.students,\n        id: cs._id,\n        className: classNames,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        \"data-class\": cs.className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }\n      }, cs.className), /*#__PURE__*/React.createElement(\"p\", {\n        \"data-class\": cs.className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }\n      }, \"Students : \", cs.students.length));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.route ? /*#__PURE__*/React.createElement(Redirect, {\n      to: this.state.route,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 36\n      }\n    }) : null, /*#__PURE__*/React.createElement(Route, {\n      path: `${path}/editClass`,\n      component: () => /*#__PURE__*/React.createElement(EditClass, {\n        classInfo: classInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 68\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${path}/classHistory`,\n      component: () => /*#__PURE__*/React.createElement(History, {\n        selected_class: this.state.selected_class,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 70\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${path}/details`,\n      component: () => /*#__PURE__*/React.createElement(Details, {\n        historyData: this.state.historyData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 65\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${path}`,\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      hidden: !this.state.hidePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      hidden: !this.state.load,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      hidden: this.state.load,\n      onClick: this.editClass,\n      className: \" mt4 btn btn-info shadow grow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 33\n      }\n    }, \"Edit Students\"), /*#__PURE__*/React.createElement(\"button\", {\n      hidden: this.state.load,\n      onClick: this.showHistoryPage,\n      className: \" mt4 btn btn-warning shadow grow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 33\n      }\n    }, \"History\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      hidden: this.state.load,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mt-2\",\n      style: {\n        fontFamily: 'Lobster',\n        color: '#343a40'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 37\n      }\n    }, \"Student of the course\"), /*#__PURE__*/React.createElement(StudentsTable, {\n      students: this.state.students,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-dark br4 grow shadow dim\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 41\n      }\n    }, \"All Students\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success br4 grow shadow dim\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 41\n      }\n    }, \"Attendance Students\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger  br4 grow shadow dim\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 41\n      }\n    }, \"Absence Students\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 align-self-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"mt-2\",\n      onClick: this.back,\n      src: \"https://img.icons8.com/fluent/48/000000/circled-left.png\",\n      alt: \"go back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      hidden: this.state.showUploadBtn,\n      onClick: this.setShowBtn,\n      style: {\n        width: '100%'\n      },\n      className: \"btn f3 grow btn-dark btn-submit mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 37\n      }\n    }, \"Check Attendence\"), /*#__PURE__*/React.createElement(\"div\", {\n      hidden: !this.state.showUploadBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"file2\",\n      style: {\n        width: '50%',\n        backgroundColor: 'darkcyan'\n      },\n      className: \"mt-3 grow f4 btn text-light btn-submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 41\n      }\n    }, this.state.ids.length === 0 ? 'Check Image' : 'Check another Image'), /*#__PURE__*/React.createElement(\"input\", {\n      hidden: true,\n      onChange: this.checkAttendence,\n      type: \"file\",\n      accept: \"image/*\",\n      id: \"file2\",\n      className: \"form-file mt-4\",\n      required: true,\n      disabled: this.state.disableButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      hidden: !this.state.showImage,\n      className: \"mt-5\",\n      style: {\n        fontFamily: 'Acme'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 41\n      }\n    }, \"To Check Attendence Upload an image for class student , then the system will check it .\"), /*#__PURE__*/React.createElement(\"p\", {\n      hidden: !this.state.showImage,\n      style: {\n        fontFamily: 'Acme'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bg-success p-1 text-light rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 106\n      }\n    }, \"Green\"), \" rows on table represents the Attendees student , and the \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bg-dark p-1 text-light rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 228\n      }\n    }, \"white\"), \" rows for Absence students . \"), /*#__PURE__*/React.createElement(\"img\", {\n      hidden: true,\n      id: \"person\",\n      src: this.state.file,\n      alt: \"Person\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"canvas\",\n      width: this.state.width,\n      height: this.state.height,\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-thumbnail mt-4\",\n      src: this.state.file || noImage,\n      alt: \"Person\",\n      width: \"300\",\n      height: \"300\",\n      hidden: this.state.showImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      hidden: this.state.showImage,\n      onClick: this.clear,\n      style: {\n        width: '30%'\n      },\n      className: \"btn f3 grow btn-warning btn-submit mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 41\n      }\n    }, \"Clear\"), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btn f3 grow btn-info btn-submit mt-4\",\n      style: {\n        width: '30%'\n      },\n      hidden: this.state.showImage,\n      href: `${this.state.file}`,\n      download: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 41\n      }\n    }, \"Download\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      hidden: this.state.showImage,\n      onClick: this.sendHistoryData,\n      style: {\n        width: '30%'\n      },\n      className: \"btn f3 grow btn-success btn-submit mt-4 mb-4\",\n      disabled: !this.state.ids.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 41\n      }\n    }, \"Done\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container text-center\",\n      hidden: this.state.hidePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"main-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 29\n      }\n    }, \"Select A Class\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 29\n      }\n    }, rows)))));\n  }\n\n}\n\nexport default MyClasses;","map":{"version":3,"sources":["/Users/mhd.sad22/graduation-project/graduation-project/src/components/MyClasses.js"],"names":["Button","React","Component","noImage","StudentsTable","Details","History","storage","EditClass","BrowserRouter","Link","Redirect","Route","Switch","useParams","useRouteMatch","MyClasses","constructor","checkLoggedIn","data","sessionStorage","getItem","window","location","replace","setState","hidePage","checkAttendence","e","load","doneDisable","reader","FileReader","readAsDataURL","target","files","onload","event","image","Image","src","result","imgHeight","imgWidth","height","width","setData","img","file2","file","URL","createObjectURL","faceRecognition","value","setShowBtn","showUploadBtn","sendHistoryData","requestOptions","method","headers","body","JSON","stringify","state","ids","imgs","fetch","selected_class","then","res","json","console","log","catch","date","Date","fullDate","getDate","getMonth","getFullYear","historyData","students","allStudents","className","disableButton","route","formdata","FormData","append","redirect","response","canvas","document","getElementById","ctx","getContext","strokeStyle","fillStyle","lineWidth","drawImage","studetnsIDs","map","std","id","i","name","substring","indexOf","includes","probability","push","left","right","bottom","top","rectangle","Dim","space","parseInt","text","font","strokeRect","fillText","toLocaleString","showImage","dataURL","toDataURL","getImageURL","convertImageToURL","get","colorTable","error","clear","student","CheckClass","getAttribute","arr","classes","forEach","element","id_number","firstName","lastName","editClass","direction","back","showHistoryPage","absenceStudents","attendStudents","faces","componentDidMount","parse","blobBin","atob","split","array","length","charCodeAt","Blob","Uint8Array","type","imageName","getTime","upload","ref","put","on","snapshot","err","child","getDownloadURL","urll","concat","render","url","path","props","match","classInfo","bgColors","rows","cs","num","Math","random","classNames","_id","fontFamily","color","backgroundColor"],"mappings":"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","sourcesContent":["import { Button } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport noImage from '../noImage.png';\nimport StudentsTable from './StudentsTable';\nimport Details from './Details';\nimport History from './History';\nimport { storage } from '../firebase/index';\nimport EditClass from './EditClass';\nimport { BrowserRouter, Link, Redirect, Route, Switch, useParams, useRouteMatch } from 'react-router-dom';\n\nclass MyClasses extends Component {\n    constructor() {\n        super();\n        this.state = {\n            file: null,\n            width: 0,\n            height: 0,\n            ids: [],\n            students: [],\n            absenceStudents: [],\n            attendStudents: [],\n            showImage: true,\n            showUploadBtn: false,\n            load: false,\n            hidePage: false,\n            classes: [],\n            selected_class: '',\n            imgs: [],\n            faces: [],\n            disableButton: false,\n            direction: 'check', // OR history , details , edit\n            historyData: {},\n            route: null,\n            doneDisable: true\n        }\n    }\n\n    // Get all the classes for the logged in teacher .\n    componentDidMount() {\n       \n        this.checkLoggedIn();\n        fetch('http://localhost:3000/teacherClasses?id=' + JSON.parse(sessionStorage.getItem('teacher')).id_number)\n            .then(res => res.json()).then(data => {\n                this.setState({\n                    classes: data,\n                    route:'/show'\n\n                })\n            })\n            .catch(e => console.log(e));\n    }\n\n    //To Check if LoggedIn .\n    checkLoggedIn = () => {\n        const data = sessionStorage.getItem('teacher');\n        if (!data) {\n            window.location.replace('http://localhost:3001/login');\n        }\n        else {\n            this.setState({\n                hidePage: false\n            })\n        }\n    }\n\n    // Will check the faces from the uploaded image .\n    checkAttendence = (e) => {\n        this.setState({\n            load: true,\n            doneDisable:true\n        });\n\n        //Create a reader to read an uploaded file .\n        let reader = new FileReader();\n        reader.readAsDataURL(e.target.files[0]);\n\n        reader.onload = (event) => {\n            //Get the uploaded image and store it in let image .\n            let image = new Image();\n            image.src = event.target.result;\n\n            //Create to letiable to store image width and height .\n            let imgHeight, imgWidth;\n            image.onload = async function () {\n                imgHeight = this.height;\n                imgWidth = this.width;\n\n                //The function will store width and height values in State . \n                setData();\n            }\n            let setData = () => {\n                this.setState({\n                    width: imgWidth,\n                    height: imgHeight\n                });\n            }\n        };\n\n        const img = e.target;\n        if (img) {\n            this.setState({\n                file2: e.target.files[0],\n                file: URL.createObjectURL(e.target.files[0])\n            })\n            this.faceRecognition(img.files[0]);\n        }\n        e.target.value = null;\n    }\n\n    // To show checkAttendence page .\n    setShowBtn = () => {\n        this.setState({\n            showUploadBtn: true\n        });\n    }\n\n    sendHistoryData = () => {\n        let requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                'ids': this.state.ids,\n                'imgs': this.state.imgs\n            }),\n        };\n\n        fetch(`http://localhost:3000/history/${this.state.selected_class}`, requestOptions)\n            .then(res => res.json())\n            .then(console.log)\n            .catch(e => { console.log(\"An Error occured while sending history Data ..\", e) });\n        let date = new Date();\n        let fullDate = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n        let historyData = {\n            students: this.state.ids,\n            allStudents: this.state.students,\n            imgs: this.state.imgs,\n            className: this.state.selected_class,\n            date: fullDate\n        };\n\n        this.setState({\n            ids: [],\n            imgs: [],\n            selected_class: [],\n            historyData: historyData,\n            disableButton: true,\n            route: 'show/details',\n        })\n    }\n\n    // To detect faces from an image .\n    faceRecognition = (img) => {\n\n        let formdata = new FormData();\n        formdata.append(\"photo\", img, \"file\");\n\n        let requestOptions = {\n            method: 'POST',\n            body: formdata,\n            redirect: 'follow'\n        };\n\n\n\n        fetch('http://localhost:3000/checkImage', requestOptions)\n            .then(response => response.json())\n            .then(result => {\n\n                console.log(result);\n                //Define canvas to draw rectangle .\n                let canvas = document.getElementById('canvas');\n                let ctx = canvas.getContext('2d');\n\n                //Canvas properties .\n                ctx.strokeStyle = 'yellow';\n                ctx.fillStyle = 'yellow';\n                ctx.lineWidth = '5';\n\n                //Change the background of context to the uploaded image .\n                let image = document.getElementById('person');\n                ctx.drawImage(image, 0, 0);\n                let studetnsIDs = this.state.students.map(std => {\n                    return std.id\n                });\n                let { ids } = this.state;\n                for (let i in result) {\n                    let name = result[i].name.substring(0, result[i].name.indexOf('|'));\n                    let id = result[i].name.substring(result[i].name.indexOf('|') + 2);\n                    if (!studetnsIDs.includes(id)) {\n                        continue;\n                    }\n                    if (result[i].probability * 100 < 90) {\n                        continue;\n                    }\n\n                    if (!ids.includes(id)) {\n                        ids.push(id);\n                    }\n\n                    //Get the values of Rectangle .\n                    let { left, right, bottom, top } = result[i].rectangle;\n\n                    //Determine the width and hight for rectangle .\n                    let Dim = (right - left);\n\n                    //Determine font size and the space between rectangle and text .\n                    let space = parseInt(Dim / 3),\n                        text = `${space}px Lobster`;\n                    ctx.font = text;\n\n                    //Draw the rectangle .\n                    ctx.strokeRect(left, top, Dim, Dim);\n\n                    //Type the name of person .\n                    ctx.fillText(name, left, bottom + space);\n                }\n                this.setState({\n                    ids: ids,\n                    // imgs : [imagesLink]\n                });\n                let space = this.state.width / 20;\n                ctx.fillStyle = 'black';\n                let text = `${space}px serif`;\n                ctx.font = text;\n                ctx.fillText(new Date().toLocaleString(), (this.state.width / 2) - 5 * space, 50);\n                this.setState({ showImage: false });\n                // Store image in firebase ........\n                let dataURL = canvas.toDataURL(\"image/png\");\n                console.log(ids);\n                this.setState({\n                    file: dataURL\n                });\n\n                let formdata = this.getImageURL(dataURL);\n                this.convertImageToURL(formdata.get('image'));\n\n                console.log(\"Imgs : \", this.state.imgs);\n                this.colorTable(result);\n                this.setState({\n                    load: false\n                });\n\n            })\n            .catch(error => console.log('error', error));\n    };\n\n    getImageURL(dataURL) {\n        let blobBin = atob(dataURL.split(',')[1]);\n        let array = [];\n        for (let i = 0; i < blobBin.length; i++) {\n            array.push(blobBin.charCodeAt(i));\n        }\n        let file = new Blob([new Uint8Array(array)], { type: 'image/png' });\n        let formdata = new FormData();\n        formdata.append(\"image\", file);\n        return formdata;\n    }\n\n    convertImageToURL(image) {\n        if (image) {\n            let imageName = \"studentsImage\" + new Date().getTime();\n            const upload = storage.ref(`images/${imageName}`).put(image);\n            upload.on('state_changed',\n                (snapshot) => { },\n                (err) => {\n                    console.log(\"error while getting data from firebase.\\n\", err);\n                    return '';\n                },\n                () => {\n                    storage.ref('images').child(imageName).getDownloadURL().then(urll => {\n                        console.log(urll);\n\n                        let imgs = [].concat(this.state.imgs);\n                        imgs.push(urll);\n                        this.setState({\n                            imgs: imgs,\n                            doneDisable:false\n                        })\n                        return urll;\n                    })\n\n                })\n        }\n    }\n\n    // To change the row color according to the attendence .\n    colorTable = (result) => {\n        let { ids } = this.state;\n        for (let i of ids) {\n            document.getElementById(i + \"\").className = 'bg-success text-light';\n        }\n    }\n\n    // Clear data from upload image and recolor the table .\n    clear = () => {\n        this.setState({\n            showImage: true,\n            showUploadBtn: false\n        });\n        let { students } = this.state;\n        for (let student of students) {\n            document.getElementById(student.id).className = '';\n        }\n    }\n\n    // Get the student of each class .\n    CheckClass = (e) => {\n        const name = e.target.getAttribute('data-class');\n        this.setState({\n            selected_class: name\n        })\n        let arr = []\n        this.state.classes.forEach(element => {\n            if (element.className === name) {\n                element.students.forEach((std) => {\n                    arr.push({ id: std.id_number, name: std.firstName + \" \" + std.lastName })\n                })\n            }\n        });\n        this.setState({\n            ids: [],\n            imgs: [],\n            students: arr,\n            hidePage: true,\n        })\n    }\n\n    editClass = () => {\n        this.setState({\n            direction: 'edit',\n            route:'show/editClass'\n        });\n    }\n\n\n    // Back to the classes page .\n    back = () => {\n        this.setState({\n            hidePage: false\n        });\n        this.clear();\n    }\n\n    showHistoryPage = () => {\n        this.setState({\n            route: '/show/classHistory'\n        });\n    }\n\n    render() {\n        let { url, path } = this.props.match;\n        let classInfo = {\n            'students': this.state.students,\n            'className': this.state.selected_class\n        };\n        let bgColors = ['bg-dark', 'bg-primary', 'bg-info', 'bg-success', 'bg-secondary'];\n        let rows = this.state.classes.map((cs) => {\n            const num = parseInt(Math.random() * bgColors.length);\n            const classNames = `${bgColors[num]} col-md-5 ml-1 class rounded mt-1 text-center text-light cursor`;\n            return (\n                <div onClick={this.CheckClass} key={cs._id} data-class={cs.className} data-student={cs.students} id={cs._id} className={classNames}>\n                    <h1 data-class={cs.className}>{cs.className}</h1>\n                    <p data-class={cs.className}>Students : {cs.students.length}</p>\n                </div>\n            )\n        });\n\n\n        return (\n\n\n            <>\n                {this.state.route? <Redirect to={this.state.route}/> : null}\n                <Route path={`${path}/editClass`} component={() => <EditClass classInfo={classInfo} />} />\n                <Route path={`${path}/classHistory`} component={() =><History selected_class={this.state.selected_class} /> } />\n                <Route path={`${path}/details`} component={()=> <Details historyData={this.state.historyData} /> }/>\n                <Route path={`${path}`} exact >\n                    <>\n                        <div className=\"container\" hidden={!this.state.hidePage}>\n                            {/* Spinner when get the result */}\n                            <div className=\"loading\" hidden={!this.state.load}>\n                                <div className=\"circle\"></div>\n                                <div className=\"circle\"></div>\n                                <div className=\"circle\"></div>\n                                <div className=\"circle\"></div>\n                            </div>\n                            <div className=\"d-flex justify-content-between\">\n                                <button hidden={this.state.load} onClick={this.editClass} className=\" mt4 btn btn-info shadow grow\" >Edit Students</button>\n                                <button hidden={this.state.load} onClick={this.showHistoryPage} className=\" mt4 btn btn-warning shadow grow\" >History</button>\n                            </div>\n                            <div className=\"row\" hidden={this.state.load}>\n\n                                {/* Student table */}\n\n                                <div className=\"col-md-6\">\n                                    <h3 className=\"mt-2\" style={{ fontFamily: 'Lobster', color: '#343a40' }}>Student of the course</h3>\n                                    <StudentsTable students={this.state.students} />\n                                    <div className=\"d-flex justify-content-around\">\n                                        <button className=\"btn btn-dark br4 grow shadow dim\">All Students</button>\n                                        <button className=\"btn btn-success br4 grow shadow dim\">Attendance Students</button>\n                                        <button className=\"btn btn-danger  br4 grow shadow dim\">Absence Students</button>\n                                    </div>\n                                </div>\n                                {/* Face recognition */}\n                                <div className=\"col-md-6 align-self-center\">\n                                    <img className=\"mt-2\" onClick={this.back} src=\"https://img.icons8.com/fluent/48/000000/circled-left.png\" alt=\"go back\" />\n                                    <Button hidden={this.state.showUploadBtn} onClick={this.setShowBtn} style={{ width: '100%' }} className=\"btn f3 grow btn-dark btn-submit mt-4\">Check Attendence</Button>\n                                    <div hidden={!this.state.showUploadBtn}>\n                                        <label htmlFor=\"file2\" style={{ width: '50%', backgroundColor: 'darkcyan' }} className=\"mt-3 grow f4 btn text-light btn-submit\">{(this.state.ids.length === 0) ? 'Check Image' : 'Check another Image'}</label>\n                                        <input hidden onChange={this.checkAttendence} type=\"file\" accept=\"image/*\" id=\"file2\" className=\"form-file mt-4\" required disabled={this.state.disableButton} />\n                                        <br />\n                                        <p hidden={!this.state.showImage} className=\"mt-5\" style={{ fontFamily: 'Acme' }}>To Check Attendence Upload an image for class student , then the system will check it .</p>\n                                        <p hidden={!this.state.showImage} style={{ fontFamily: 'Acme' }}><span className=\"bg-success p-1 text-light rounded\">Green</span> rows on table represents the Attendees student , and the <span className=\"bg-dark p-1 text-light rounded\">white</span> rows for Absence students . </p>\n\n                                        {/* Image will display the uploaded image , we use it to draw it on canvas . */}\n                                        <img hidden id=\"person\" src={this.state.file} alt=\"Person\" />\n\n                                        {/* Canvas will draw the image , rectangles and names . */}\n                                        <canvas id=\"canvas\" width={this.state.width} height={this.state.height} hidden></canvas>\n\n                                        {/* The final result will be shown on the img below , that we can edit it's width and height . */}\n                                        <img className=\"img-thumbnail mt-4\" src={this.state.file || noImage} alt=\"Person\" width=\"300\" height='300' hidden={this.state.showImage} />\n                                        <br />\n                                        <Button hidden={this.state.showImage} onClick={this.clear} style={{ width: '30%' }} className=\"btn f3 grow btn-warning btn-submit mt-4\">Clear</Button>\n                                        <a className=\"btn f3 grow btn-info btn-submit mt-4\" style={{ width: '30%' }} hidden={this.state.showImage} href={`${this.state.file}`} download>Download</a>\n                                        <br />\n                                        <Button hidden={this.state.showImage} onClick={this.sendHistoryData} style={{ width: '30%' }} className=\"btn f3 grow btn-success btn-submit mt-4 mb-4\" disabled={!this.state.ids.length}>Done</Button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"container text-center\" hidden={this.state.hidePage}>\n                            <h1 className=\"main-title\">Select A Class</h1>\n                            <div className=\"row d-flex justify-content-center\">\n                                {rows}\n                            </div>\n                        </div>\n\n                    </>\n                </Route>\n\n\n            </>);\n    }\n}\nexport default MyClasses;\n"]},"metadata":{},"sourceType":"module"}