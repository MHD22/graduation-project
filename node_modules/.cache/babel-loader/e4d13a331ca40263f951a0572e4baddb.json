{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/graduation-project/graduation-project/src/components/MyClasses.js\";\nimport { Button } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport noImage from '../noImage.png';\nimport StudentsTable from './StudentsTable';\nimport Details from './Details';\nimport History from './History';\nimport { storage } from '../firebase/index';\nimport EditClass from './EditClass';\nimport { Redirect, Route } from 'react-router-dom';\nconst initialState = {\n  file: null,\n  width: 0,\n  height: 0,\n  ids: [],\n  students: [],\n  absenceStudents: [],\n  attendStudents: [],\n  showImage: true,\n  showUploadBtn: false,\n  load: false,\n  hidePage: false,\n  classes: [],\n  selected_class: '',\n  imgs: [],\n  faces: [],\n  disableButton: false,\n  direction: 'check',\n  // OR history , details , edit\n  historyData: {},\n  route: null,\n  doneDisable: true,\n  showStudents: [],\n  flag: 0\n};\n\nclass MyClasses extends Component {\n  constructor() {\n    super();\n\n    this.checkLoggedIn = () => {\n      const data = sessionStorage.getItem('teacher');\n\n      if (!data) {\n        this.setState({\n          route: '/login'\n        });\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.checkAttendence = e => {\n      this.setState({\n        load: true,\n        doneDisable: true\n      }); //Create a reader to read an uploaded file .\n\n      let reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n\n      reader.onload = event => {\n        //Get the uploaded image and store it in let image .\n        let image = new Image();\n        image.src = event.target.result; //Create to letiable to store image width and height .\n\n        let imgHeight, imgWidth;\n\n        image.onload = async function () {\n          imgHeight = this.height;\n          imgWidth = this.width; //The function will store width and height values in State . \n\n          setData();\n        };\n\n        let setData = () => {\n          this.setState({\n            width: imgWidth,\n            height: imgHeight\n          });\n        };\n      };\n\n      const img = e.target;\n\n      if (img) {\n        this.setState({\n          file2: e.target.files[0],\n          file: URL.createObjectURL(e.target.files[0])\n        });\n        this.faceRecognition(img.files[0]);\n      }\n\n      e.target.value = null;\n    };\n\n    this.setShowBtn = () => {\n      this.setState({\n        showUploadBtn: true\n      });\n    };\n\n    this.sendHistoryData = () => {\n      let requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'ids': this.state.ids,\n          'imgs': this.state.imgs\n        })\n      };\n      let baseUrl = document.getElementById('baseUrl').value;\n      fetch(`${baseUrl}/history/${this.state.selected_class}`, requestOptions).then(res => res.json()).then(console.log).catch(e => {\n        console.log(\"An Error occured while sending history Data ..\", e);\n      });\n      let date = new Date();\n      let fullDate = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n      let historyData = {\n        students: this.state.ids,\n        allStudents: this.state.students,\n        imgs: this.state.imgs,\n        className: this.state.selected_class,\n        date: fullDate\n      };\n      this.clear();\n      this.setState({\n        ids: [],\n        imgs: [],\n        selected_class: [],\n        historyData: historyData,\n        disableButton: true,\n        route: '/show/details'\n      });\n    };\n\n    this.faceRecognition = img => {\n      let formdata = new FormData();\n      formdata.append(\"photo\", img, \"file\");\n      let requestOptions = {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n      };\n      let baseUrl = document.getElementById('baseUrl').value;\n      fetch(`${baseUrl}/checkImage`, requestOptions).then(response => response.json()).then(result => {\n        console.log(result); //Define canvas to draw rectangle .\n\n        let canvas = document.getElementById('canvas');\n        let ctx = canvas.getContext('2d'); //Canvas properties .\n\n        ctx.strokeStyle = 'yellow';\n        ctx.fillStyle = 'yellow';\n        ctx.lineWidth = '5'; //Change the background of context to the uploaded image .\n\n        let image = document.getElementById('person');\n        ctx.drawImage(image, 0, 0);\n        let studetnsIDs = this.state.students.map(std => {\n          return std.id;\n        });\n        let {\n          ids\n        } = this.state;\n\n        for (let i in result) {\n          let name = result[i].name.substring(0, result[i].name.indexOf('|'));\n          let id = result[i].name.substring(result[i].name.indexOf('|') + 2);\n\n          if (!studetnsIDs.includes(id)) {\n            continue;\n          }\n\n          if (result[i].probability * 100 < 90) {\n            continue;\n          }\n\n          if (!ids.includes(id)) {\n            ids.push(id);\n          } //Get the values of Rectangle .\n\n\n          let {\n            left,\n            right,\n            bottom,\n            top\n          } = result[i].rectangle; //Determine the width and hight for rectangle .\n\n          let Dim = right - left; //Determine font size and the space between rectangle and text .\n\n          let space = parseInt(Dim / 3),\n              text = `${space}px Lobster`;\n          ctx.font = text; //Draw the rectangle .\n\n          ctx.strokeRect(left, top, Dim, Dim); //Type the name of person .\n\n          ctx.fillText(name, left, bottom + space);\n        }\n\n        let attendStudents = [];\n        let absenceStudents = [];\n\n        for (let i of this.state.students) {\n          let flag = false;\n\n          for (let j of this.state.ids) {\n            if (i.id === j) {\n              flag = true;\n            }\n          }\n\n          if (flag) {\n            attendStudents.push({\n              id: i.id,\n              name: i.name\n            });\n          } else {\n            absenceStudents.push({\n              id: i.id,\n              name: i.name\n            });\n          }\n        }\n\n        this.setState({\n          ids: ids,\n          attendStudents,\n          absenceStudents // imgs : [imagesLink]\n\n        });\n        let space = this.state.width / 20;\n        ctx.fillStyle = 'black';\n        let text = `${space}px serif`;\n        ctx.font = text;\n        ctx.fillText(new Date().toLocaleString(), this.state.width / 2 - 5 * space, 50);\n        this.setState({\n          showImage: false\n        }); // Store image in firebase ........\n\n        let dataURL = canvas.toDataURL(\"image/png\");\n        console.log(ids);\n        this.setState({\n          file: dataURL\n        });\n        let formdata = this.getImageURL(dataURL);\n        this.convertImageToURL(formdata.get('image'));\n        console.log(\"Imgs : \", this.state.imgs);\n        this.colorTable(result);\n        this.setState({\n          load: false\n        });\n      }).catch(error => console.log('error', error));\n    };\n\n    this.colorTable = () => {\n      let {\n        ids\n      } = this.state;\n\n      for (let i of ids) {\n        let row = document.getElementById(i + \"\");\n\n        if (row) {\n          row.className = 'bg-success text-light';\n        }\n      }\n    };\n\n    this.clear = () => {\n      this.setState({\n        showImage: true,\n        showUploadBtn: false,\n        ids: [],\n        imgs: []\n      });\n      document.getElementById(\"file2\").value = '';\n      let {\n        students\n      } = this.state;\n\n      for (let student of students) {\n        document.getElementById(student.id).className = '';\n      }\n    };\n\n    this.CheckClass = e => {\n      const name = e.target.getAttribute('data-class');\n      this.setState({\n        selected_class: name\n      });\n      let arr = [];\n      this.state.classes.forEach(element => {\n        if (element.className === name) {\n          element.students.forEach(std => {\n            arr.push({\n              id: std.id_number,\n              name: std.firstName + \" \" + std.lastName\n            });\n          });\n        }\n      });\n      this.setState({\n        ids: [],\n        imgs: [],\n        students: arr,\n        hidePage: true,\n        showStudents: arr,\n        route: '/show/classData'\n      });\n    };\n\n    this.editClass = () => {\n      this.setState({\n        direction: 'edit',\n        route: '/show/editClass'\n      });\n    };\n\n    this.back = () => {\n      this.setState({\n        hidePage: false,\n        route: '/show'\n      });\n      this.clear();\n    };\n\n    this.showHistoryPage = () => {\n      this.setState({\n        route: '/show/classHistory'\n      });\n    };\n\n    this.showAllStudents = () => {\n      let showStudents = this.state.students;\n      this.setState({\n        showStudents\n      });\n      this.colorTable();\n    };\n\n    this.showAttendStudents = () => {\n      let showStudents = this.state.attendStudents;\n      this.setState({\n        showStudents\n      });\n    };\n\n    this.showAbcentStudents = () => {\n      let showStudents = this.state.absenceStudents;\n      this.setState({\n        showStudents\n      });\n    };\n\n    this.onChangeRoute = (route, timer) => {\n      setTimeout(() => {\n        console.log(route, \"clicked\");\n\n        if (this.checkLoggedIn()) {\n          let baseUrl = document.getElementById('baseUrl').value;\n          fetch(`${baseUrl}/teacherClasses?id=` + JSON.parse(sessionStorage.getItem('teacher')).id_number).then(res => res.json()).then(data => {\n            this.setState({\n              classes: data,\n              route\n            });\n          }).catch(e => console.log(e));\n        }\n      }, timer);\n    };\n\n    this.state = initialState;\n  } // Get all the classes for the logged in teacher .\n\n\n  componentDidMount() {\n    if (this.checkLoggedIn()) {\n      let baseUrl = document.getElementById('baseUrl').value;\n      fetch(`${baseUrl}/teacherClasses?id=` + JSON.parse(sessionStorage.getItem('teacher')).id_number).then(res => res.json()).then(data => {\n        this.setState({\n          classes: data\n        });\n      }).catch(e => console.log(e));\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(prevState.classes, \"\\n current: \\n\", this.state.classes);\n\n    if (prevState.flag !== 1) {\n      if (this.checkLoggedIn()) {\n        let baseUrl = document.getElementById('baseUrl').value;\n        fetch(`${baseUrl}/teacherClasses?id=` + JSON.parse(sessionStorage.getItem('teacher')).id_number).then(res => res.json()).then(data => {\n          this.setState({\n            classes: data,\n            flag: 1\n          });\n        }).catch(e => console.log(e));\n      }\n    }\n  } //To Check if LoggedIn .\n\n\n  getImageURL(dataURL) {\n    let blobBin = atob(dataURL.split(',')[1]);\n    let array = [];\n\n    for (let i = 0; i < blobBin.length; i++) {\n      array.push(blobBin.charCodeAt(i));\n    }\n\n    let file = new Blob([new Uint8Array(array)], {\n      type: 'image/png'\n    });\n    let formdata = new FormData();\n    formdata.append(\"image\", file);\n    return formdata;\n  }\n\n  convertImageToURL(image) {\n    if (image) {\n      let imageName = \"studentsImage\" + new Date().getTime();\n      const upload = storage.ref(`images/${imageName}`).put(image);\n      upload.on('state_changed', snapshot => {}, err => {\n        console.log(\"error while getting data from firebase.\\n\", err);\n        return '';\n      }, () => {\n        storage.ref('images').child(imageName).getDownloadURL().then(urll => {\n          console.log(urll);\n          let imgs = [].concat(this.state.imgs);\n          imgs.push(urll);\n          this.setState({\n            imgs: imgs,\n            doneDisable: false\n          });\n          return urll;\n        });\n      });\n    }\n  } // To change the row color according to the attendence .\n\n\n  render() {\n    let {\n      path\n    } = this.props.match;\n    let classInfo = {\n      'students': this.state.students,\n      'className': this.state.selected_class\n    };\n    let bgColors = ['bg-dark', 'bg-primary', 'bg-info', 'bg-success', 'bg-secondary'];\n    let rows = this.state.classes.map(cs => {\n      const num = parseInt(Math.random() * bgColors.length);\n      const classNames = `${bgColors[num]} col-md-5 ml-1 class rounded mt-1 text-center text-light cursor`;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: this.CheckClass,\n        key: cs._id,\n        \"data-class\": cs.className,\n        \"data-student\": cs.students,\n        id: cs._id,\n        className: classNames,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        \"data-class\": cs.className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 21\n        }\n      }, cs.className), /*#__PURE__*/React.createElement(\"p\", {\n        \"data-class\": cs.className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 21\n        }\n      }, \"Students : \", cs.students.length));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.route ? /*#__PURE__*/React.createElement(Redirect, {\n      to: this.state.route,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 37\n      }\n    }) : null, /*#__PURE__*/React.createElement(Route, {\n      path: `${path}/editClass`,\n      component: () => /*#__PURE__*/React.createElement(EditClass, {\n        classInfo: classInfo,\n        onChangeRoute: this.onChangeRoute,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 68\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${path}/classHistory`,\n      component: () => /*#__PURE__*/React.createElement(History, {\n        selected_class: this.state.selected_class,\n        onChangeRoute: this.onChangeRoute,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 71\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${path}/details`,\n      component: () => /*#__PURE__*/React.createElement(Details, {\n        historyData: this.state.historyData,\n        onChangeRoute: this.onChangeRoute,\n        backToHistory: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 66\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${path}`,\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"main-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 25\n      }\n    }, \"Select A Class\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 25\n      }\n    }, rows))), /*#__PURE__*/React.createElement(Route, {\n      path: `${path}/classData`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      hidden: !this.state.load,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      hidden: this.state.load,\n      onClick: this.editClass,\n      className: \" mt4 btn btn-info shadow grow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 29\n      }\n    }, \"Edit Students\"), /*#__PURE__*/React.createElement(\"button\", {\n      hidden: this.state.load,\n      onClick: this.showHistoryPage,\n      className: \" mt4 btn btn-warning shadow grow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 29\n      }\n    }, \"History\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      hidden: this.state.load,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mt-2\",\n      style: {\n        fontFamily: 'Lobster',\n        color: '#343a40'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 33\n      }\n    }, \"Student of the course\"), /*#__PURE__*/React.createElement(StudentsTable, {\n      students: this.state.showStudents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.showAllStudents,\n      className: \"btn btn-dark br4 grow shadow dim\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 37\n      }\n    }, \"All Students\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.showAttendStudents,\n      className: \"btn btn-success br4 grow shadow dim\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 37\n      }\n    }, \"Attendance Students\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.showAbcentStudents,\n      className: \"btn btn-danger  br4 grow shadow dim\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 37\n      }\n    }, \"Absence Students\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 align-self-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"mt-2 grow pointer\",\n      onClick: this.back,\n      src: \"https://img.icons8.com/fluent/48/000000/circled-left.png\",\n      alt: \"go back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      hidden: this.state.showUploadBtn,\n      onClick: this.setShowBtn,\n      style: {\n        width: '100%'\n      },\n      className: \"btn f3 grow btn-dark btn-submit mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 33\n      }\n    }, \"Check Attendence\"), /*#__PURE__*/React.createElement(\"div\", {\n      hidden: !this.state.showUploadBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"file2\",\n      style: {\n        width: '50%',\n        backgroundColor: 'darkcyan'\n      },\n      className: \"mt-3 grow f4 btn text-light btn-submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 37\n      }\n    }, this.state.ids.length === 0 ? 'Check Image' : 'Check another Image'), /*#__PURE__*/React.createElement(\"input\", {\n      hidden: true,\n      onChange: this.checkAttendence,\n      type: \"file\",\n      accept: \"image/*\",\n      id: \"file2\",\n      className: \"form-file mt-4\",\n      required: true,\n      disabled: this.state.disableButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      hidden: !this.state.showImage,\n      className: \"mt-5\",\n      style: {\n        fontFamily: 'Acme'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 37\n      }\n    }, \"To Check Attendence Upload an image for class student , then the system will check it .\"), /*#__PURE__*/React.createElement(\"p\", {\n      hidden: !this.state.showImage,\n      style: {\n        fontFamily: 'Acme'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bg-success p-1 text-light rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 102\n      }\n    }, \"Green\"), \" rows on table represents the Attendees student , and the \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bg-dark p-1 text-light rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 224\n      }\n    }, \"white\"), \" rows for Absence students . \"), /*#__PURE__*/React.createElement(\"img\", {\n      hidden: true,\n      id: \"person\",\n      src: this.state.file,\n      alt: \"Person\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"canvas\",\n      width: this.state.width,\n      height: this.state.height,\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-thumbnail mt-4\",\n      src: this.state.file || noImage,\n      alt: \"Person\",\n      width: \"300\",\n      height: \"300\",\n      hidden: this.state.showImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      hidden: this.state.showImage,\n      onClick: this.clear,\n      style: {\n        width: '30%'\n      },\n      className: \"btn f3 grow btn-warning btn-submit mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 37\n      }\n    }, \"Clear\"), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btn f3 grow btn-info btn-submit mt-4\",\n      style: {\n        width: '30%'\n      },\n      hidden: this.state.showImage,\n      href: `${this.state.file}`,\n      download: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 37\n      }\n    }, \"Download\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      hidden: this.state.showImage,\n      onClick: this.sendHistoryData,\n      style: {\n        width: '30%'\n      },\n      className: \"btn f3 grow btn-success btn-submit mt-4 mb-4\",\n      disabled: this.state.doneDisable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 37\n      }\n    }, \"Done\")))))));\n  }\n\n}\n\nexport default MyClasses;","map":{"version":3,"sources":["/Users/mhd.sad22/graduation-project/graduation-project/src/components/MyClasses.js"],"names":["Button","React","Component","noImage","StudentsTable","Details","History","storage","EditClass","Redirect","Route","initialState","file","width","height","ids","students","absenceStudents","attendStudents","showImage","showUploadBtn","load","hidePage","classes","selected_class","imgs","faces","disableButton","direction","historyData","route","doneDisable","showStudents","flag","MyClasses","constructor","checkLoggedIn","data","sessionStorage","getItem","setState","checkAttendence","e","reader","FileReader","readAsDataURL","target","files","onload","event","image","Image","src","result","imgHeight","imgWidth","setData","img","file2","URL","createObjectURL","faceRecognition","value","setShowBtn","sendHistoryData","requestOptions","method","headers","body","JSON","stringify","state","baseUrl","document","getElementById","fetch","then","res","json","console","log","catch","date","Date","fullDate","getDate","getMonth","getFullYear","allStudents","className","clear","formdata","FormData","append","redirect","response","canvas","ctx","getContext","strokeStyle","fillStyle","lineWidth","drawImage","studetnsIDs","map","std","id","i","name","substring","indexOf","includes","probability","push","left","right","bottom","top","rectangle","Dim","space","parseInt","text","font","strokeRect","fillText","j","toLocaleString","dataURL","toDataURL","getImageURL","convertImageToURL","get","colorTable","error","row","student","CheckClass","getAttribute","arr","forEach","element","id_number","firstName","lastName","editClass","back","showHistoryPage","showAllStudents","showAttendStudents","showAbcentStudents","onChangeRoute","timer","setTimeout","parse","componentDidMount","componentDidUpdate","prevProps","prevState","blobBin","atob","split","array","length","charCodeAt","Blob","Uint8Array","type","imageName","getTime","upload","ref","put","on","snapshot","err","child","getDownloadURL","urll","concat","render","path","props","match","classInfo","bgColors","rows","cs","num","Math","random","classNames","_id","fontFamily","color","backgroundColor"],"mappings":"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","sourcesContent":["import { Button } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport noImage from '../noImage.png';\nimport StudentsTable from './StudentsTable';\nimport Details from './Details';\nimport History from './History';\nimport { storage } from '../firebase/index';\nimport EditClass from './EditClass';\nimport { Redirect, Route} from 'react-router-dom';\n\nconst initialState ={\n    file: null,\n    width: 0,\n    height: 0,\n    ids: [],\n    students: [],\n    absenceStudents: [],\n    attendStudents: [],\n    showImage: true,\n    showUploadBtn: false,\n    load: false,\n    hidePage: false,\n    classes: [],\n    selected_class: '',\n    imgs: [],\n    faces: [],\n    disableButton: false,\n    direction: 'check', // OR history , details , edit\n    historyData: {},\n    route: null,\n    doneDisable: true ,\n    showStudents : [] ,\n    flag:0\n}\nclass MyClasses extends Component {\n    constructor() {\n        super();\n        this.state = initialState\n    }\n\n    // Get all the classes for the logged in teacher .\n    componentDidMount() {\n        if(this.checkLoggedIn()){\n            let baseUrl= document.getElementById('baseUrl').value;\n            fetch(`${baseUrl}/teacherClasses?id=` + JSON.parse(sessionStorage.getItem('teacher')).id_number)\n                .then(res => res.json()).then(data => {\n                    this.setState({\n                        classes: data,\n    \n                    })\n                })\n                .catch(e => console.log(e));\n        }\n    }\n\n    componentDidUpdate(prevProps,prevState) {\n        console.log(prevState.classes,\"\\n current: \\n\",this.state.classes);\n        if(prevState.flag !== 1 ){\n            if(this.checkLoggedIn()){\n                let baseUrl= document.getElementById('baseUrl').value;\n                fetch(`${baseUrl}/teacherClasses?id=` + JSON.parse(sessionStorage.getItem('teacher')).id_number)\n                    .then(res => res.json()).then(data => {\n                        this.setState({\n                            classes: data,\n                            flag:1\n        \n                        })\n                    })\n                    .catch(e => console.log(e));\n            }\n        }\n    }\n\n    //To Check if LoggedIn .\n    checkLoggedIn = () => {\n        const data = sessionStorage.getItem('teacher');\n        if (!data) {\n           this.setState({\n               route:'/login'\n           })\n           return false;\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Will check the faces from the uploaded image .\n    checkAttendence = (e) => {\n        this.setState({\n            load: true,\n            doneDisable: true\n        });\n\n        //Create a reader to read an uploaded file .\n        let reader = new FileReader();\n        reader.readAsDataURL(e.target.files[0]);\n\n        reader.onload = (event) => {\n            //Get the uploaded image and store it in let image .\n            let image = new Image();\n            image.src = event.target.result;\n\n            //Create to letiable to store image width and height .\n            let imgHeight, imgWidth;\n            image.onload = async function () {\n                imgHeight = this.height;\n                imgWidth = this.width;\n\n                //The function will store width and height values in State . \n                setData();\n            }\n            let setData = () => {\n                this.setState({\n                    width: imgWidth,\n                    height: imgHeight\n                });\n            }\n        };\n\n        const img = e.target;\n        if (img) {\n            this.setState({\n                file2: e.target.files[0],\n                file: URL.createObjectURL(e.target.files[0])\n            })\n            this.faceRecognition(img.files[0]);\n        }\n        e.target.value = null;\n    }\n\n    // To show checkAttendence page .\n    setShowBtn = () => {\n        this.setState({\n            showUploadBtn: true\n        });\n    }\n\n    sendHistoryData = () => {\n        let requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                'ids': this.state.ids,\n                'imgs': this.state.imgs\n            }),\n        };\n        let baseUrl= document.getElementById('baseUrl').value;\n        fetch(`${baseUrl}/history/${this.state.selected_class}`, requestOptions)\n            .then(res => res.json())\n            .then(console.log)\n            .catch(e => { console.log(\"An Error occured while sending history Data ..\", e) });\n        let date = new Date();\n        let fullDate = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n        let historyData = {\n            students: this.state.ids,\n            allStudents: this.state.students,\n            imgs: this.state.imgs,\n            className: this.state.selected_class,\n            date: fullDate\n        };\n        this.clear() ;\n        this.setState({\n            ids: [],\n            imgs: [],\n            selected_class: [],\n            historyData: historyData,\n            disableButton: true,\n            route: '/show/details',\n        })\n    }\n\n    // To detect faces from an image .\n    faceRecognition = (img) => {\n\n        let formdata = new FormData();\n        formdata.append(\"photo\", img, \"file\");\n\n        let requestOptions = {\n            method: 'POST',\n            body: formdata,\n            redirect: 'follow'\n        };\n\n\n        let baseUrl= document.getElementById('baseUrl').value;\n        fetch(`${baseUrl}/checkImage`, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n\n                console.log(result);\n                //Define canvas to draw rectangle .\n                let canvas = document.getElementById('canvas');\n                let ctx = canvas.getContext('2d');\n\n                //Canvas properties .\n                ctx.strokeStyle = 'yellow';\n                ctx.fillStyle = 'yellow';\n                ctx.lineWidth = '5';\n\n                //Change the background of context to the uploaded image .\n                let image = document.getElementById('person');\n                ctx.drawImage(image, 0, 0);\n                let studetnsIDs = this.state.students.map(std => {\n                    return std.id\n                });\n                let { ids } = this.state;\n                for (let i in result) {\n                    let name = result[i].name.substring(0, result[i].name.indexOf('|'));\n                    let id = result[i].name.substring(result[i].name.indexOf('|') + 2);\n                    if (!studetnsIDs.includes(id)) {\n                        continue;\n                    }\n                    if (result[i].probability * 100 < 90) {\n                        continue;\n                    }\n\n                    if (!ids.includes(id)) {\n                        ids.push(id);\n                    }\n\n                    //Get the values of Rectangle .\n                    let { left, right, bottom, top } = result[i].rectangle;\n\n                    //Determine the width and hight for rectangle .\n                    let Dim = (right - left);\n\n                    //Determine font size and the space between rectangle and text .\n                    let space = parseInt(Dim / 3),\n                        text = `${space}px Lobster`;\n                    ctx.font = text;\n\n                    //Draw the rectangle .\n                    ctx.strokeRect(left, top, Dim, Dim);\n\n                    //Type the name of person .\n                    ctx.fillText(name, left, bottom + space);\n                }\n\n                let attendStudents = [] ;\n                let absenceStudents = [] ;\n                for(let i of this.state.students){\n                    let flag = false ;\n                    for(let j of this.state.ids){\n                        if(i.id === j){\n                            flag = true ;\n                        }\n                    }\n                    if(flag){\n                        attendStudents.push({\n                            id : i.id ,\n                            name : i.name\n                        }) ;\n                    }\n                    else {\n                        absenceStudents.push({\n                            id : i.id ,\n                            name : i.name\n                        }) ;\n                    }\n                }\n\n                this.setState({\n                    ids: ids,\n                    attendStudents ,\n                    absenceStudents\n                    // imgs : [imagesLink]\n                });\n                let space = this.state.width / 20;\n                ctx.fillStyle = 'black';\n                let text = `${space}px serif`;\n                ctx.font = text;\n                ctx.fillText(new Date().toLocaleString(), (this.state.width / 2) - 5 * space, 50);\n                this.setState({ showImage: false });\n                // Store image in firebase ........\n                let dataURL = canvas.toDataURL(\"image/png\");\n                console.log(ids);\n                this.setState({\n                    file: dataURL\n                });\n\n                let formdata = this.getImageURL(dataURL);\n                this.convertImageToURL(formdata.get('image'));\n\n                console.log(\"Imgs : \", this.state.imgs);\n                this.colorTable(result);\n                this.setState({\n                    load: false\n                });\n\n            })\n            .catch(error => console.log('error', error));\n    };\n\n    getImageURL(dataURL) {\n        let blobBin = atob(dataURL.split(',')[1]);\n        let array = [];\n        for (let i = 0; i < blobBin.length; i++) {\n            array.push(blobBin.charCodeAt(i));\n        }\n        let file = new Blob([new Uint8Array(array)], { type: 'image/png' });\n        let formdata = new FormData();\n        formdata.append(\"image\", file);\n        return formdata;\n    }\n\n    convertImageToURL(image) {\n        if (image) {\n            let imageName = \"studentsImage\" + new Date().getTime();\n            const upload = storage.ref(`images/${imageName}`).put(image);\n            upload.on('state_changed',\n                (snapshot) => { },\n                (err) => {\n                    console.log(\"error while getting data from firebase.\\n\", err);\n                    return '';\n                },\n                () => {\n                    storage.ref('images').child(imageName).getDownloadURL().then(urll => {\n                        console.log(urll);\n\n                        let imgs = [].concat(this.state.imgs);\n                        imgs.push(urll);\n                        this.setState({\n                            imgs: imgs,\n                            doneDisable: false\n                        })\n                        return urll;\n                    })\n\n                })\n        }\n    }\n\n    // To change the row color according to the attendence .\n    colorTable = () => {\n        let { ids } = this.state;\n        for (let i of ids) {\n            let row = document.getElementById(i + \"\") ;\n            if(row){\n                row.className = 'bg-success text-light';\n            }\n        }\n    }\n\n    // Clear data from upload image and recolor the table .\n    clear = () => {\n        this.setState({\n            showImage: true,\n            showUploadBtn: false,\n            ids:[],\n            imgs:[]\n        });\n        document.getElementById(\"file2\").value = '' ;\n        let { students } = this.state;\n        for (let student of students) {\n            document.getElementById(student.id).className = '';\n        }\n    }\n\n    // Get the student of each class .\n    CheckClass = (e) => {\n        const name = e.target.getAttribute('data-class');\n        this.setState({\n            selected_class: name\n        })\n        let arr = []\n        this.state.classes.forEach(element => {\n            if (element.className === name) {\n                element.students.forEach((std) => {\n                    arr.push({ id: std.id_number, name: std.firstName + \" \" + std.lastName })\n                })\n            }\n        });\n        this.setState({\n            ids: [],\n            imgs: [],\n            students: arr,\n            hidePage: true,\n            showStudents : arr ,\n            route: '/show/classData'\n        })\n    }\n\n    editClass = () => {\n        this.setState({\n            direction: 'edit',\n            route: '/show/editClass'\n        });\n    }\n\n\n    // Back to the classes page .\n    back = () => {\n        this.setState({\n            hidePage: false,\n            route:'/show'\n        });\n        this.clear();\n    }\n\n    showHistoryPage = () => {\n        this.setState({\n            route: '/show/classHistory'\n        });\n    }\n\n    showAllStudents = () => {\n        let showStudents = this.state.students ;\n        this.setState({\n            showStudents\n        }) ;\n        this.colorTable() ;\n    }\n\n    showAttendStudents = () => {\n        let showStudents = this.state.attendStudents ;\n        this.setState({\n            showStudents\n        }) ;\n    }\n\n    showAbcentStudents = () => {\n        let showStudents = this.state.absenceStudents ;\n        this.setState({\n            showStudents\n        }) ;\n    }\n\n    onChangeRoute=(route,timer)=>{\n        setTimeout(() => {\n            console.log(route , \"clicked\");\n            if(this.checkLoggedIn()){\n                let baseUrl= document.getElementById('baseUrl').value;\n                fetch(`${baseUrl}/teacherClasses?id=` + JSON.parse(sessionStorage.getItem('teacher')).id_number)\n                    .then(res => res.json()).then(data => {\n                        this.setState({\n                            classes: data,\n                            route\n                        })\n                    })\n                    .catch(e => console.log(e));\n            }\n        }, timer);\n    }\n\n    render() {\n        let {path} = this.props.match;\n        let classInfo = {\n            'students': this.state.students,\n            'className': this.state.selected_class\n        };\n        let bgColors = ['bg-dark', 'bg-primary', 'bg-info', 'bg-success', 'bg-secondary'];\n        let rows = this.state.classes.map((cs) => {\n            const num = parseInt(Math.random() * bgColors.length);\n            const classNames = `${bgColors[num]} col-md-5 ml-1 class rounded mt-1 text-center text-light cursor`;\n            return (\n                <div onClick={this.CheckClass} key={cs._id} data-class={cs.className} data-student={cs.students} id={cs._id} className={classNames}>\n                    <h1 data-class={cs.className}>{cs.className}</h1>\n                    <p data-class={cs.className}>Students : {cs.students.length}</p>\n                </div>\n            )\n        });\n\n        \n\n\n        return (\n\n\n            <>\n                {this.state.route ? <Redirect to={this.state.route} /> : null}\n                <Route path={`${path}/editClass`} component={() => <EditClass classInfo={classInfo} onChangeRoute={this.onChangeRoute} />} />\n                <Route path={`${path}/classHistory`} component={() => <History selected_class={this.state.selected_class} onChangeRoute={this.onChangeRoute} />} />\n                <Route path={`${path}/details`} component={() => <Details historyData={this.state.historyData} onChangeRoute={this.onChangeRoute} backToHistory={false} />} />\n                <Route path={`${path}`} exact >\n                    <div className=\"container text-center\" >\n                        <h1 className=\"main-title\">Select A Class</h1>\n                        <div className=\"row d-flex justify-content-center\">\n                            {rows}\n                        </div>\n                    </div>\n                </Route>\n                <Route path={`${path}/classData`}>\n\n                    <div className=\"container\">\n                        {/* Spinner when get the result */}\n                        <div className=\"loading\" hidden={!this.state.load}>\n                            <div className=\"circle\"></div>\n                            <div className=\"circle\"></div>\n                            <div className=\"circle\"></div>\n                            <div className=\"circle\"></div>\n                        </div>\n                        <div className=\"d-flex justify-content-between\">\n                            <button hidden={this.state.load} onClick={this.editClass} className=\" mt4 btn btn-info shadow grow\" >Edit Students</button>\n                            <button hidden={this.state.load} onClick={this.showHistoryPage} className=\" mt4 btn btn-warning shadow grow\" >History</button>\n                        </div>\n                        <div className=\"row\" hidden={this.state.load}>\n\n                            {/* Student table */}\n\n                            <div className=\"col-md-6\">\n                                <h3 className=\"mt-2\" style={{ fontFamily: 'Lobster', color: '#343a40' }}>Student of the course</h3>\n                                <StudentsTable students={this.state.showStudents} />\n                                <div className=\"d-flex justify-content-around\">\n                                    <button onClick={this.showAllStudents} className=\"btn btn-dark br4 grow shadow dim\">All Students</button>\n                                    <button onClick={this.showAttendStudents} className=\"btn btn-success br4 grow shadow dim\">Attendance Students</button>\n                                    <button onClick={this.showAbcentStudents} className=\"btn btn-danger  br4 grow shadow dim\">Absence Students</button>\n                                </div>\n                            </div>\n                            {/* Face recognition */}\n                            <div className=\"col-md-6 align-self-center\">\n                                <img className=\"mt-2 grow pointer\" onClick={this.back} src=\"https://img.icons8.com/fluent/48/000000/circled-left.png\" alt=\"go back\" />\n                                <Button hidden={this.state.showUploadBtn} onClick={this.setShowBtn} style={{ width: '100%' }} className=\"btn f3 grow btn-dark btn-submit mt-4\">Check Attendence</Button>\n                                <div hidden={!this.state.showUploadBtn}>\n                                    <label htmlFor=\"file2\" style={{ width: '50%', backgroundColor: 'darkcyan' }} className=\"mt-3 grow f4 btn text-light btn-submit\">{(this.state.ids.length === 0) ? 'Check Image' : 'Check another Image'}</label>\n                                    <input hidden onChange={this.checkAttendence} type=\"file\" accept=\"image/*\" id=\"file2\" className=\"form-file mt-4\" required disabled={this.state.disableButton} />\n                                    <br />\n                                    <p hidden={!this.state.showImage} className=\"mt-5\" style={{ fontFamily: 'Acme' }}>To Check Attendence Upload an image for class student , then the system will check it .</p>\n                                    <p hidden={!this.state.showImage} style={{ fontFamily: 'Acme' }}><span className=\"bg-success p-1 text-light rounded\">Green</span> rows on table represents the Attendees student , and the <span className=\"bg-dark p-1 text-light rounded\">white</span> rows for Absence students . </p>\n\n                                    {/* Image will display the uploaded image , we use it to draw it on canvas . */}\n                                    <img hidden id=\"person\" src={this.state.file} alt=\"Person\" />\n\n                                    {/* Canvas will draw the image , rectangles and names . */}\n                                    <canvas id=\"canvas\" width={this.state.width} height={this.state.height} hidden></canvas>\n\n                                    {/* The final result will be shown on the img below , that we can edit it's width and height . */}\n                                    <img className=\"img-thumbnail mt-4\" src={this.state.file || noImage} alt=\"Person\" width=\"300\" height='300' hidden={this.state.showImage} />\n                                    <br />\n                                    <Button hidden={this.state.showImage} onClick={this.clear} style={{ width: '30%' }} className=\"btn f3 grow btn-warning btn-submit mt-4\">Clear</Button>\n                                    <a className=\"btn f3 grow btn-info btn-submit mt-4\" style={{ width: '30%' }} hidden={this.state.showImage} href={`${this.state.file}`} download>Download</a>\n                                    <br />\n                                    <Button hidden={this.state.showImage} onClick={this.sendHistoryData} style={{ width: '30%' }} className=\"btn f3 grow btn-success btn-submit mt-4 mb-4\" disabled={this.state.doneDisable}>Done</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Route>\n\n\n            </>);\n    }\n}\nexport default MyClasses;\n"]},"metadata":{},"sourceType":"module"}