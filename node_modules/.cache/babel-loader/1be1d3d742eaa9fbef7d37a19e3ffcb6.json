{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/graduation-project/graduation-project/src/components/MyClasses.js\";\nimport { Button } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport noImage from '../noImage.png';\nimport StudentsTable from './StudentsTable';\n\nclass MyClasses extends Component {\n  constructor() {\n    super();\n\n    this.checkLoggedIn = () => {\n      const data = sessionStorage.getItem('teacher');\n\n      if (!data) {\n        window.location.replace('http://localhost:3001/login');\n      } else {\n        this.setState({\n          hidePage: false\n        });\n      }\n    };\n\n    this.checkAttendence = e => {\n      this.setState({\n        load: true\n      }); //Create a reader to read an uploaded file .\n\n      var reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n\n      reader.onload = event => {\n        //Get the uploaded image and store it in var image .\n        var image = new Image();\n        image.src = event.target.result; //Create to variable to store image width and height .\n\n        var imgHeight, imgWidth;\n\n        image.onload = async function () {\n          imgHeight = this.height;\n          imgWidth = this.width; //The function will store width and height values in State . \n\n          setData();\n        };\n\n        let setData = () => {\n          this.setState({\n            width: imgWidth,\n            height: imgHeight\n          });\n        };\n      };\n\n      const img = e.target;\n\n      if (img) {\n        this.setState({\n          file: URL.createObjectURL(e.target.files[0])\n        });\n        this.faceRecognition(img.files[0]);\n      }\n\n      e.target.value = null;\n    };\n\n    this.setShowBtn = () => {\n      this.setState({\n        showUploadBtn: true\n      });\n    };\n\n    this.faceRecognition = img => {\n      var formdata = new FormData();\n      formdata.append(\"photo\", img, \"file\");\n      var requestOptions = {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n      };\n      fetch('http://localhost:3000/checkImage', requestOptions).then(response => response.json()).then(result => {\n        //Define canvas to draw rectangle .\n        let canvas = document.getElementById('canvas');\n        let ctx = canvas.getContext('2d'); //Canvas properties .\n\n        ctx.strokeStyle = 'yellow';\n        ctx.fillStyle = 'yellow';\n        ctx.lineWidth = '5'; //Change the background of context to the uploaded image .\n\n        var image = document.getElementById('person');\n        ctx.drawImage(image, 0, 0);\n        let studetnsIDs = this.state.students.map(std => {\n          return std.id;\n        });\n\n        for (var i in result) {\n          let name = result[i].name.substring(0, result[i].name.indexOf('|'));\n          let id = result[i].name.substring(result[i].name.indexOf('|') + 2);\n\n          if (!studetnsIDs.includes(id)) {\n            continue;\n          }\n\n          if (result[i].probability * 100 < 90) {\n            continue;\n          } //Get the values of Rectangle .\n\n\n          let {\n            left\n          } = result[i].rectangle,\n              {\n            right\n          } = result[i].rectangle,\n              {\n            bottom\n          } = result[i].rectangle,\n              {\n            top\n          } = result[i].rectangle; //Determine the width and hight for rectangle .\n\n          let Dim = right - left; //Determine font size and the space between rectangle and text .\n\n          let space = parseInt(Dim / 3),\n              text = `${space}px Lobster`;\n          ctx.font = text; //Draw the rectangle .\n\n          ctx.strokeRect(left, top, Dim, Dim); //Type the name of person .\n\n          ctx.fillText(name, left, bottom + space);\n        }\n\n        let space = this.state.width / 20;\n        ctx.fillStyle = 'black';\n        let text = `${space}px serif`;\n        ctx.font = text;\n        ctx.fillText(new Date().toLocaleString(), this.state.width / 2 - 5 * space, 50);\n        this.setState({\n          showImage: false\n        });\n        var final_image = canvas.toDataURL(\"image/png\");\n        this.setState({\n          file: final_image\n        });\n        console.log(result);\n        this.colorTable(result);\n        this.setState({\n          load: false\n        });\n      }).catch(error => console.log('error', error));\n    };\n\n    this.colorTable = result => {\n      var {\n        students\n      } = this.state;\n\n      for (var student of students) {\n        document.getElementById(student.id).className = '';\n        var stID = student.id;\n\n        for (var res of result) {\n          var resName = res.name.substring(res.name.indexOf('|') + 2);\n\n          if (stID === resName && res.probability * 100 > 90) {\n            console.log(student.id);\n            document.getElementById(student.id + \"\").className = 'bg-success text-light';\n          }\n        }\n      }\n    };\n\n    this.clear = () => {\n      this.setState({\n        showImage: true,\n        showUploadBtn: false\n      });\n      var {\n        students\n      } = this.state;\n\n      for (var student of students) {\n        document.getElementById(student.id).className = '';\n      }\n    };\n\n    this.CheckClass = e => {\n      const name = e.target.getAttribute('data-class');\n      var arr = [];\n      this.state.classes.forEach(element => {\n        if (element.className === name) {\n          element.students.forEach(std => {\n            arr.push({\n              id: std.id_number,\n              name: std.firstName + \" \" + std.lastName\n            });\n          });\n        }\n      });\n      this.setState({\n        students: arr,\n        hidePage: true\n      });\n    };\n\n    this.back = () => {\n      this.setState({\n        hidePage: false\n      });\n      this.clear();\n    };\n\n    this.state = {\n      file: null,\n      width: 0,\n      height: 0,\n      faces: [],\n      students: [],\n      showImage: true,\n      showUploadBtn: false,\n      load: false,\n      hidePage: false,\n      classes: []\n    };\n  } // Get all the classes for the logged in teacher .\n\n\n  componentDidMount() {\n    this.checkLoggedIn();\n    fetch('http://localhost:3000/teacherClasses?id=' + JSON.parse(sessionStorage.getItem('teacher')).id_number).then(res => res.json()).then(data => {\n      this.setState({\n        classes: data\n      });\n    }).catch(e => console.log(e));\n  } //To Check if LoggedIn .\n\n\n  render() {\n    let bgColors = ['bg-dark', 'bg-primary', 'bg-info', 'bg-success', 'bg-secondary'];\n    let rows = this.state.classes.map(cs => {\n      const num = parseInt(Math.random() * bgColors.length);\n      const classNames = `${bgColors[num]} col-md-5 ml-1 class rounded mt-1 text-center text-light cursor`;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: this.CheckClass,\n        key: cs._id,\n        \"data-class\": cs.className,\n        \"data-student\": cs.students,\n        id: cs._id,\n        className: classNames,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        \"data-class\": cs.className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }\n      }, cs.className), /*#__PURE__*/React.createElement(\"p\", {\n        \"data-class\": cs.className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }\n      }, \"Students : \", cs.students.length));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      hidden: !this.state.hidePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      hidden: !this.state.load,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      hidden: this.state.load,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mt-2\",\n      style: {\n        fontFamily: 'Lobster',\n        color: '#343a40'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 29\n      }\n    }, \"Student of the course\"), /*#__PURE__*/React.createElement(StudentsTable, {\n      students: this.state.students,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 align-self-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"mt-2\",\n      onClick: this.back,\n      src: \"https://img.icons8.com/fluent/48/000000/circled-left.png\",\n      alt: \"go back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      hidden: this.state.showUploadBtn,\n      onClick: this.setShowBtn,\n      style: {\n        width: '100%'\n      },\n      className: \"btn f3 grow btn-dark btn-submit mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 29\n      }\n    }, \"Check Attendence\"), /*#__PURE__*/React.createElement(\"div\", {\n      hidden: !this.state.showUploadBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"file2\",\n      style: {\n        width: '50%',\n        backgroundColor: 'darkcyan'\n      },\n      className: \"mt-3 grow f4 btn text-light btn-submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 33\n      }\n    }, \"Upload Image\"), /*#__PURE__*/React.createElement(\"input\", {\n      hidden: true,\n      onChange: this.checkAttendence,\n      type: \"file\",\n      accept: \"image/*\",\n      id: \"file2\",\n      className: \"form-file mt-4\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      hidden: !this.state.showImage,\n      className: \"mt-5\",\n      style: {\n        fontFamily: 'Acme'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 33\n      }\n    }, \"To Check Attendence Upload an image for class student , then the system will check it .\"), /*#__PURE__*/React.createElement(\"p\", {\n      hidden: !this.state.showImage,\n      style: {\n        fontFamily: 'Acme'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bg-success p-1 text-light rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 99\n      }\n    }, \"Green\"), \" rows on table represents the Attendees student , and the \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bg-dark p-1 text-light rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 221\n      }\n    }, \"white\"), \" rows for Absence students . \"), /*#__PURE__*/React.createElement(\"img\", {\n      hidden: true,\n      id: \"person\",\n      src: this.state.file,\n      alt: \"Person\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"canvas\",\n      width: this.state.width,\n      height: this.state.height,\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-thumbnail mt-4\",\n      src: this.state.file || noImage,\n      alt: \"Person\",\n      width: \"300\",\n      height: \"300\",\n      hidden: this.state.showImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      hidden: this.state.showImage,\n      onClick: this.clear,\n      style: {\n        width: '30%'\n      },\n      className: \"btn f3 grow btn-warning btn-submit mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 33\n      }\n    }, \"Clear\"), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btn f3 grow btn-info btn-submit mt-4\",\n      style: {\n        width: '30%'\n      },\n      hidden: this.state.showImage,\n      href: `${this.state.file}`,\n      download: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 33\n      }\n    }, \"Download\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container text-center\",\n      hidden: this.state.hidePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"main-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }\n    }, \"Select A Class\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }\n    }, rows)));\n  }\n\n}\n\nexport default MyClasses;","map":{"version":3,"sources":["/Users/mhd.sad22/graduation-project/graduation-project/src/components/MyClasses.js"],"names":["Button","React","Component","noImage","StudentsTable","MyClasses","constructor","checkLoggedIn","data","sessionStorage","getItem","window","location","replace","setState","hidePage","checkAttendence","e","load","reader","FileReader","readAsDataURL","target","files","onload","event","image","Image","src","result","imgHeight","imgWidth","height","width","setData","img","file","URL","createObjectURL","faceRecognition","value","setShowBtn","showUploadBtn","formdata","FormData","append","requestOptions","method","body","redirect","fetch","then","response","json","canvas","document","getElementById","ctx","getContext","strokeStyle","fillStyle","lineWidth","drawImage","studetnsIDs","state","students","map","std","id","i","name","substring","indexOf","includes","probability","left","rectangle","right","bottom","top","Dim","space","parseInt","text","font","strokeRect","fillText","Date","toLocaleString","showImage","final_image","toDataURL","console","log","colorTable","catch","error","student","className","stID","res","resName","clear","CheckClass","getAttribute","arr","classes","forEach","element","push","id_number","firstName","lastName","back","faces","componentDidMount","JSON","parse","render","bgColors","rows","cs","num","Math","random","length","classNames","_id","fontFamily","color","backgroundColor"],"mappings":"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","sourcesContent":["import { Button } from 'react-bootstrap';\nimport React, { Component } from 'react' ;\nimport noImage from '../noImage.png' ;\nimport StudentsTable from './StudentsTable';\n\nclass MyClasses extends Component{\n    constructor(){\n        super() ;\n        this.state = {\n            file: null , \n            width : 0 ,\n            height : 0,\n            faces:[],\n            students:[] ,\n            showImage : true ,\n            showUploadBtn : false ,\n            load : false ,\n            hidePage : false ,\n            classes : [] \n        }\n    }\n\n    // Get all the classes for the logged in teacher .\n    componentDidMount(){\n        this.checkLoggedIn() ;\n        fetch('http://localhost:3000/teacherClasses?id=' + JSON.parse(sessionStorage.getItem('teacher')).id_number)\n        .then(res=> res.json()).then(data=>{\n            this.setState({\n                classes : data\n            })\n        })\n        .catch(e=>console.log(e));\n    }\n\n    //To Check if LoggedIn .\n    checkLoggedIn = () => {\n        const data = sessionStorage.getItem('teacher') ;\n        if(!data){\n            window.location.replace('http://localhost:3001/login') ;\n        }\n        else {\n            this.setState({\n                hidePage : false\n            })\n        }\n    }\n\n    // Will check the faces from the uploaded image .\n    checkAttendence = (e) => {\n        this.setState({\n            load : true\n        });\n\n        //Create a reader to read an uploaded file .\n        var reader = new FileReader();\n        reader.readAsDataURL(e.target.files[0]);\n        \n        reader.onload = (event) => {\n        //Get the uploaded image and store it in var image .\n        var image = new Image();\n        image.src = event.target.result;\n\n        //Create to variable to store image width and height .\n        var imgHeight , imgWidth ;\n        image.onload = async function () {\n            imgHeight = this.height ;\n            imgWidth = this.width ;\n\n            //The function will store width and height values in State . \n            setData() ;\n        }\n        let setData = () => {\n            this.setState({\n                width : imgWidth ,\n                height : imgHeight\n            }) ;\n        }\n    };\n\n        const img = e.target ;\n        if(img){\n            this.setState({\n                file: URL.createObjectURL(e.target.files[0])\n            })\n            this.faceRecognition(img.files[0]) ;\n        }\n        e.target.value = null;\n    }\n\n    // To show checkAttendence page .\n    setShowBtn = () => {\n        this.setState({\n            showUploadBtn : true \n        });\n    }\n\n    // To detect faces from an image .\n    faceRecognition = (img) => {\n\n        var formdata = new FormData();\n        formdata.append(\"photo\", img, \"file\");\n\n        var requestOptions = {\n            method: 'POST',\n            body: formdata,\n            redirect: 'follow'\n          };\n          \n\n\n        fetch('http://localhost:3000/checkImage',requestOptions)\n        .then(response => response.json())\n        .then(result => {\n            //Define canvas to draw rectangle .\n            let canvas = document.getElementById('canvas') ;\n            let ctx = canvas.getContext('2d') ;\n\n            //Canvas properties .\n            ctx.strokeStyle = 'yellow' ;\n            ctx.fillStyle = 'yellow' ;\n            ctx.lineWidth = '5' ;\n\n            //Change the background of context to the uploaded image .\n            var image = document.getElementById('person') ;\n            ctx.drawImage(image , 0 , 0) ;\n            let studetnsIDs = this.state.students.map(std => {\n                return std.id \n            });\n            for(var i in result){\n            let name = result[i].name.substring(0 , result[i].name.indexOf('|')) ;\n            let id = result[i].name.substring(result[i].name.indexOf('|') + 2) ;\n            if(!studetnsIDs.includes(id)){\n                continue ;\n            }\n            if(result[i].probability*100 < 90){\n                continue;\n            }\n            \n            \n            //Get the values of Rectangle .\n            let {left} = result[i].rectangle ,\n            {right} = result[i].rectangle ,\n            {bottom} = result[i].rectangle ,\n            {top} = result[i].rectangle ;\n\n            //Determine the width and hight for rectangle .\n            let Dim = (right - left) ;\n\n            //Determine font size and the space between rectangle and text .\n            let space = parseInt(Dim / 3) ,\n            text = `${space}px Lobster`  ;\n            ctx.font = text ;\n\n            //Draw the rectangle .\n            ctx.strokeRect(left,top,Dim,Dim) ;\n\n            //Type the name of person .\n            ctx.fillText(name , left, bottom + space) ;\n            }\n            let space = this.state.width / 20 ;\n            ctx.fillStyle = 'black' ;\n            let text = `${space}px serif`  ;\n            ctx.font = text ;\n            ctx.fillText(new Date().toLocaleString() , (this.state.width / 2) - 5 * space , 50) ;\n            this.setState({showImage : false});\n            var final_image = canvas.toDataURL(\"image/png\");\n            this.setState({\n                file : final_image\n            });\n            console.log(result) ;\n            this.colorTable(result) ;\n            this.setState({\n                load : false\n            });\n            \n        })\n        .catch(error => console.log('error', error));\n    };\n\n    // To change the row color according to the attendence .\n    colorTable = (result) => {\n        var {students} = this.state ;\n        for(var student of students){\n            document.getElementById(student.id).className = '' ;\n            var stID = student.id ;\n            for(var res of result){\n                var resName = res.name.substring(res.name.indexOf('|') + 2) ;\n                if(stID === resName && res.probability * 100 > 90){\n                    console.log(student.id) ;\n                    document.getElementById(student.id + \"\").className = 'bg-success text-light' ;\n                }\n            }\n        }\n    }\n\n    // Clear data from upload image and recolor the table .\n    clear = () => {\n        this.setState({\n            showImage : true ,\n            showUploadBtn : false \n        }) ;\n        var {students} = this.state ;\n        for(var student of students){\n            document.getElementById(student.id).className = '' ;\n        }\n    }\n\n    // Get the student of each class .\n    CheckClass = (e) => {\n        const name = e.target.getAttribute('data-class') ;\n        var arr = []\n        this.state.classes.forEach(element => {\n            if(element.className === name){\n                element.students.forEach((std)=>{\n                    arr.push({id:std.id_number , name:std.firstName +\" \"+ std.lastName})\n                })\n            }\n        });\n        this.setState({\n            students:arr ,\n            hidePage : true \n        })       \n    }\n\n    // Back to the classes page .\n    back = () => {\n        this.setState({\n            hidePage : false \n        });\n        this.clear() ;\n    }\n\n    render() {\n        let bgColors = ['bg-dark' , 'bg-primary' , 'bg-info' , 'bg-success' , 'bg-secondary'] ;\n        let rows = this.state.classes.map((cs)=>{\n            const num = parseInt(Math.random() * bgColors.length) ;\n            const classNames = `${bgColors[num]} col-md-5 ml-1 class rounded mt-1 text-center text-light cursor` ;\n            return( \n                <div onClick={this.CheckClass} key={cs._id} data-class={cs.className} data-student={cs.students} id={cs._id} className={classNames}>\n                    <h1 data-class={cs.className}>{cs.className}</h1>\n                    <p data-class={cs.className}>Students : {cs.students.length}</p>\n                </div>\n            )\n         });\n\n        return (\n            <>  \n                <div className=\"container\" hidden={!this.state.hidePage}>\n                    {/* Spinner when get the result */}\n                    <div className=\"loading\" hidden={!this.state.load}>\n                        <div className=\"circle\"></div>\n                        <div className=\"circle\"></div>\n                        <div className=\"circle\"></div>\n                        <div className=\"circle\"></div>\n                    </div>\n\n                    <div className=\"row\" hidden={this.state.load}>\n\n                        {/* Student table */}\n                        <div className=\"col-md-6\">\n                            <h3 className=\"mt-2\" style={{ fontFamily : 'Lobster' , color : '#343a40' }}>Student of the course</h3>\n                            <StudentsTable students={this.state.students}/>\n                        </div>\n                        {/* Face recognition */}\n                        <div className=\"col-md-6 align-self-center\">\n                        <img className=\"mt-2\" onClick={this.back} src=\"https://img.icons8.com/fluent/48/000000/circled-left.png\" alt=\"go back\"/>\n                            <Button hidden = {this.state.showUploadBtn} onClick={this.setShowBtn} style={{ width : '100%' }} className=\"btn f3 grow btn-dark btn-submit mt-4\">Check Attendence</Button>\n                            <div hidden = {!this.state.showUploadBtn}>\n                                <label htmlFor=\"file2\" style={{ width : '50%' , backgroundColor : 'darkcyan' }} className=\"mt-3 grow f4 btn text-light btn-submit\">Upload Image</label>\n                                <input hidden onChange={this.checkAttendence} type=\"file\" accept=\"image/*\" id=\"file2\" className=\"form-file mt-4\" required />\n                                <br />\n                                <p hidden={!this.state.showImage} className=\"mt-5\" style={{ fontFamily : 'Acme' }}>To Check Attendence Upload an image for class student , then the system will check it .</p>\n                                <p hidden={!this.state.showImage} style={{ fontFamily : 'Acme' }}><span className=\"bg-success p-1 text-light rounded\">Green</span> rows on table represents the Attendees student , and the <span className=\"bg-dark p-1 text-light rounded\">white</span> rows for Absence students . </p>\n\n                                {/* Image will display the uploaded image , we use it to draw it on canvas . */}\n                                <img hidden id=\"person\" src={this.state.file} alt=\"Person\" />\n\n                                {/* Canvas will draw the image , rectangles and names . */}\n                                <canvas id=\"canvas\" width={this.state.width} height={this.state.height} hidden></canvas>\n\n                                {/* The final result will be shown on the img below , that we can edit it's width and height . */}\n                                <img className=\"img-thumbnail mt-4\" src={this.state.file || noImage} alt=\"Person\" width=\"300\" height='300' hidden = {this.state.showImage} />\n                                <br />\n                                <Button hidden = {this.state.showImage} onClick={this.clear} style={{ width : '30%' }} className=\"btn f3 grow btn-warning btn-submit mt-4\">Clear</Button>\n                                <a className=\"btn f3 grow btn-info btn-submit mt-4\" style={{ width : '30%' }} hidden = {this.state.showImage} href={`${this.state.file}`} download>Download</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"container text-center\" hidden={this.state.hidePage}>\n                    <h1 className=\"main-title\">Select A Class</h1>\n                    <div className=\"row d-flex justify-content-center\">\n                        {rows}\n                    </div>\n                </div>\n            </>);\n    }\n}\nexport default MyClasses ;\n"]},"metadata":{},"sourceType":"module"}