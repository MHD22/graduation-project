{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/graduation-project/graduation-project/src/components/StudentRegister.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { Redirect } from \"react-router-dom\";\nimport Swal from 'sweetalert2';\n\nclass StudentRegister extends Component {\n  constructor() {\n    super();\n\n    this.checkInputData = e => {\n      e.preventDefault();\n      let formStudent = document.getElementById('formStudent');\n      let firstName = formStudent.firstName.value;\n      let lastName = formStudent.lastName.value;\n      let id_number = formStudent.id_number.value;\n      let studentData = {\n        firstName,\n        lastName,\n        id_number\n      };\n      const file = document.getElementById(\"file\");\n\n      if (firstName && lastName && id_number && this.checkThreeImages(file)) {\n        var formdata = new FormData();\n        formdata.append(\"image\", file.files[0], \"file\");\n        formdata.append(\"image\", file.files[1], \"file\");\n        formdata.append(\"image\", file.files[2], \"file\");\n        this.sendToken(id_number).then(response => {\n          if (response === 'This ID Is Already Exist') {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops ...',\n              html: `<h5 class=\"text-danger font-lobster mt-2\">${response}</h5>`\n            });\n          } else {\n            let hashedToken = response;\n            Swal.fire({\n              title: '<h3 class=\"font-acme\">Enter the verification code sent to your email :</3>',\n              icon: 'question',\n              iconHtml: '?',\n              html: '<input type=\"text\" id=\"studentToken\" class=\"form-control text-center\" placeholder=\"Verification Code\" name=\"token\"/>'\n            }).then(() => {\n              this.createPerson(formdata, studentData, hashedToken);\n            });\n          }\n        });\n      } else {\n        Swal.fire({\n          icon: 'warning',\n          title: 'Hmmm ..',\n          html: '<h5 class=\"text-warning font-lobster mt-2\">All fields are required<br>And you should enter three images.</h5>'\n        });\n      }\n    };\n\n    this.sendToken = id => {\n      let baseUrl = document.getElementById('baseUrl').defaultValue;\n      let url = `${baseUrl}/sendTokenStd`;\n      let requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id\n        })\n      };\n      return fetch(url, requestOptions).then(response => response.json());\n    };\n\n    this.createPerson = (file, studentData, hashedToken) => {\n      // check if the name is exist or not ?\n      let token = document.getElementById('studentToken').value;\n      studentData.token = token;\n      studentData.hashedToken = hashedToken;\n      studentData = JSON.stringify(studentData);\n      file.append(\"studentData\", studentData);\n      var requestOptions = {\n        method: 'POST',\n        body: file,\n        redirect: 'follow'\n      };\n      let baseUrl = document.getElementById('baseUrl').defaultValue;\n      fetch(`${baseUrl}/createPerson`, requestOptions).then(response => response.json()).then(responseStudentData => {\n        if (responseStudentData === 'Student Is Added Successfuly') {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success',\n            html: '<h5 class=\"text-success font-lobster mt-2\">Student Added Successfully</h5>'\n          }).then(() => {\n            this.setState({\n              route: '/'\n            });\n          });\n        } else if (responseStudentData === \"Token is wrong.\") {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops ...',\n            html: '<h5 class=\"text-danger font-lobster mt-2\">Token is wrong! <br> Try again..</h5>'\n          });\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops ...',\n            html: `<h5 class=\"text-danger font-lobster mt-2\">Something wrong, try again later, please.</h5>`\n          });\n          console.log(responseStudentData);\n        }\n      }).catch(e => {\n        console.log(\"error while create the person..\", e);\n      });\n    };\n\n    this.handleClose = e => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.done = e => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.state = {\n      show: false,\n      title: '',\n      body: '',\n      redirect: false,\n      route: null\n    };\n  }\n\n  checkThreeImages(file) {\n    return file.files.length === 3;\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.route ? /*#__PURE__*/React.createElement(Redirect, {\n      to: this.state.route,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 32\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"formStudent\",\n      hidden: this.state.hideform,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"firstName\",\n      placeholder: \"First Name ..\",\n      className: \"form-input mt-4\",\n      name: \"firstName\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Last Name ..\",\n      className: \"form-input mt-4\",\n      name: \"lastName\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"id_number\",\n      placeholder: \"Student ID ..\",\n      className: \"form-input mt-4\",\n      name: \"id_number\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"file\",\n      className: \"form-input mt-4 pointer dim\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, \"Upload your Image\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      className: \"form-file mt-4\",\n      multiple: true,\n      accept: \"image/*\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"submit\",\n      className: \"btn btn-success btn-submit mt-4\",\n      onClick: this.checkInputData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, \"Register\")), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.show,\n      onHide: this.handleClose,\n      backdrop: \"static\",\n      keyboard: false,\n      size: \"lg\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      className: \"text-info text-center p-5 font-lobster\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, this.state.title), /*#__PURE__*/React.createElement(Modal.Body, {\n      className: \"text-center  font-acme\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, this.state.body), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      className: \"text-center grow\",\n      onClick: this.done,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, \"Done\"))));\n  }\n\n}\n\nexport default StudentRegister;","map":{"version":3,"sources":["/Users/mhd.sad22/graduation-project/graduation-project/src/components/StudentRegister.js"],"names":["React","Component","Modal","Button","Redirect","Swal","StudentRegister","constructor","checkInputData","e","preventDefault","formStudent","document","getElementById","firstName","value","lastName","id_number","studentData","file","checkThreeImages","formdata","FormData","append","files","sendToken","then","response","fire","icon","title","html","hashedToken","iconHtml","createPerson","id","baseUrl","defaultValue","url","requestOptions","method","headers","body","JSON","stringify","fetch","json","token","redirect","responseStudentData","setState","route","console","log","catch","handleClose","show","done","state","length","render","hideform"],"mappings":"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","sourcesContent":["import React, { Component } from 'react' ;\nimport {Modal , Button} from 'react-bootstrap' ;\nimport { Redirect } from \"react-router-dom\";\nimport Swal from 'sweetalert2';\n\nclass StudentRegister extends Component{\n    constructor(){\n        super();\n        this.state={\n            show : false ,\n            title : '' ,\n            body : '' ,\n            redirect : false,\n            route: null\n        }\n    }\n    checkThreeImages(file) {\n        return file.files.length === 3;\n    };\n\n    checkInputData=(e)=> { \n        e.preventDefault();\n        let formStudent = document.getElementById('formStudent');\n        let firstName= formStudent.firstName.value;\n        let lastName= formStudent.lastName.value;\n        let id_number= formStudent.id_number.value;\n\n        let studentData={firstName,lastName,id_number}\n\n        const file=document.getElementById(\"file\");\n        \n        \n        if(firstName && lastName  && id_number&& this.checkThreeImages(file) ){\n        \n            var formdata = new FormData();\n            formdata.append(\"image\", file.files[0], \"file\");\n            formdata.append(\"image\", file.files[1], \"file\");\n            formdata.append(\"image\", file.files[2], \"file\");\n            this.sendToken(id_number)\n            .then(response=>{\n                if(response === 'This ID Is Already Exist'){\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Oops ...',\n                        html: `<h5 class=\"text-danger font-lobster mt-2\">${response}</h5>`,\n                    })\n                }\n                else{\n                    let hashedToken = response;\n                    Swal.fire({\n                        title: '<h3 class=\"font-acme\">Enter the verification code sent to your email :</3>',\n                        icon: 'question',\n                        iconHtml: '?',\n                        html: '<input type=\"text\" id=\"studentToken\" class=\"form-control text-center\" placeholder=\"Verification Code\" name=\"token\"/>',\n                    }).then(() => {\n                        this.createPerson(formdata, studentData, hashedToken);\n                    });\n                }\n   \n            })\n            \n        }\n        else{\n            Swal.fire({\n                icon: 'warning',\n                title: 'Hmmm ..',\n                html: '<h5 class=\"text-warning font-lobster mt-2\">All fields are required<br>And you should enter three images.</h5>',\n            })\n        }\n    }\n\n    sendToken=(id)=>{\n        let baseUrl= document.getElementById('baseUrl').defaultValue;\n        let url =`${baseUrl}/sendTokenStd`;\n        let requestOptions = \n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({id}),\n        };\n        return fetch(url,requestOptions)\n        .then(response => response.json())\n\n    }\n\n    createPerson=(file,studentData,hashedToken)=>{\n        // check if the name is exist or not ?\n        let token = document.getElementById('studentToken').value;\n        studentData.token = token;\n        studentData.hashedToken = hashedToken;\n        studentData=JSON.stringify(studentData);\n        file.append(\"studentData\",studentData);\n        var requestOptions = {\n            method: 'POST',\n            body: file,\n            redirect: 'follow'\n            };\n        let baseUrl= document.getElementById('baseUrl').defaultValue;\n        fetch(`${baseUrl}/createPerson`, requestOptions)\n        .then(response => response.json())\n        .then(responseStudentData=>{\n\n            if(responseStudentData === 'Student Is Added Successfuly'){\n                \n                Swal.fire({\n                    icon: 'success',\n                    title: 'Success',\n                    html: '<h5 class=\"text-success font-lobster mt-2\">Student Added Successfully</h5>',\n                }).then(()=>{\n                    this.setState({route:'/'});\n                })\n            }\n            else if(responseStudentData === \"Token is wrong.\") {\n                \n                Swal.fire({\n                    icon: 'error',\n                    title: 'Oops ...',\n                    html: '<h5 class=\"text-danger font-lobster mt-2\">Token is wrong! <br> Try again..</h5>',\n                })  \n            }\n            else{\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Oops ...',\n                    html: `<h5 class=\"text-danger font-lobster mt-2\">Something wrong, try again later, please.</h5>`,\n                })\n                console.log(responseStudentData);\n            }\n        })\n        .catch(e=>{console.log(\"error while create the person..\",e)});   \n    }\n\n    handleClose = (e) => {\n        this.setState({\n            show : false \n        }) ;\n    }\n\n    done = (e) => {\n        this.setState({\n            redirect : true\n        }) ;\n    }\n\n    render(){\n\n        if(this.state.redirect){\n            return <Redirect to='/'/>;\n        }\n\n        return(\n            <>\n            {this.state.route? <Redirect to={this.state.route}/> : null}\n            <form id=\"formStudent\" hidden={this.state.hideform}>\n                <input type=\"text\" id=\"firstName\" placeholder=\"First Name ..\" className=\"form-input mt-4\" name=\"firstName\" required />\n                <br />\n                <input type=\"text\" placeholder=\"Last Name ..\" className=\"form-input mt-4\" name=\"lastName\" required/>\n                <br />\n                <input type=\"text\" id=\"id_number\" placeholder=\"Student ID ..\" className=\"form-input mt-4\" name=\"id_number\" required/>\n                <br />\n                <label htmlFor=\"file\" className=\"form-input mt-4 pointer dim\">Upload your Image</label>\n                <input type=\"file\" id=\"file\" className=\"form-file mt-4\" multiple accept=\"image/*\"  required/>\n                <br />\n                <button type=\"submit\" id='submit'  className=\"btn btn-success btn-submit mt-4\" onClick={this.checkInputData} >\n                Register\n                </button>\n            </form>\n            \n            <Modal\n                show={this.state.show}\n                onHide={this.handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                size = \"lg\"\n                centered\n            >\n\n                <Modal.Title className=\"text-info text-center p-5 font-lobster\">{this.state.title}</Modal.Title>\n\n                <Modal.Body className=\"text-center  font-acme\">{this.state.body}</Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"primary\" className=\"text-center grow\" onClick={this.done}>Done</Button>\n                </Modal.Footer>\n            </Modal>\n\n            </>\n        );}\n}\nexport default StudentRegister ;"]},"metadata":{},"sourceType":"module"}