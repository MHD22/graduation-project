{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/graduation-project/graduation-project/src/components/AddStudents.js\";\nimport React, { Component } from 'react';\n\nclass AddStudents extends Component {\n  constructor() {\n    super();\n\n    this.addNewClass = e => {\n      let teacherID = JSON.parse(sessionStorage.getItem('teacher')).id_number;\n      let classData = {\n        teacherID,\n        className: this.state.courseName,\n        ids: this.state.addedStdID,\n        fnames: this.state.addedStdFName,\n        lnames: this.state.addedStdLName\n      };\n      fetch('http://localhost:3000/classes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(classData)\n      }).then(res => res.json()).then(this.setState({\n        title: 'Done',\n        body: 'Class Created Successfully ..',\n        show: true\n      })).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.addStudent = e => {\n      let id = e.target.value;\n      let fname = e.target.getAttribute('data-fname');\n      let lname = e.target.getAttribute('data-lname');\n      let arrIDS = this.state.addedStdID;\n      let arrFN = this.state.addedStdFName;\n      let arrLN = this.state.addedStdLName;\n      let found = arrIDS.indexOf(id);\n\n      if (found === -1) {\n        arrIDS.push(id);\n        arrFN.push(fname);\n        arrLN.push(lname); // document.getElementById(id + 'label').style.background = \"#004d1a\";\n\n        this.setState({\n          addedStdID: arrIDS,\n          addedStdFName: arrFN,\n          addedStdLName: arrLN\n        });\n      } else {\n        arrIDS.splice(found, 1);\n        arrFN.splice(found, 1);\n        arrLN.splice(found, 1);\n        this.setState({\n          addStudent: arrIDS,\n          addedStdFName: arrFN,\n          addedStdLName: arrLN\n        });\n        document.getElementById(id + 'label').style.background = \"#343a40\";\n      }\n\n      console.log(this.state.addedStdID, this.state.addedStdFName, this.state.addedStdLName);\n    };\n\n    this.handleFilter = event => {\n      this.setState({\n        search: event.target.value\n      });\n    };\n\n    this.state = {\n      students: [],\n      addedStdID: [],\n      addedStdFName: [],\n      addedStdLName: [],\n      search: ''\n    };\n  }\n\n  componentDidMount() {\n    let url = 'http://localhost:3000/students';\n    fetch(url).then(response => response.json()).then(data => {\n      this.setState({\n        students: data\n      });\n    });\n  }\n\n  render() {\n    let filteredArray = this.state.students.filter(std => {\n      return `${std.fname} ${std.lname} ${std.id}`.toLowerCase().includes(this.state.search.toLowerCase());\n    });\n\n    if (this.state.addedStdID.length !== 0) {\n      this.state.addedStdID.forEach(id => {\n        let name = document.getElementById(id + 'label');\n\n        if (name !== null) {\n          name.style.background = \"#004d1a\";\n        }\n      });\n    }\n\n    filteredArray = filteredArray.map((std, i) => {\n      return /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: std.id,\n        id: std.id + 'label',\n        key: std.id,\n        \"data-name\": std.fname,\n        className: \"student\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 20\n        }\n      }, std.fname + ' ' + std.lname + ' | ' + std.id, \" \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        \"data-fname\": std.fname,\n        \"data-lname\": std.lname,\n        value: std.id,\n        id: std.id,\n        onChange: this.addStudent,\n        className: \"check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 168\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"main-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, \"Add Student\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-students\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"search\",\n      onChange: this.handleFilter,\n      type: \"search\",\n      placeholder: \"search on students\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cont-cont\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"students p-3\",\n      id: \"students\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, filteredArray))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"submit\",\n      className: \"btn f3 grow btn-success btn-submit\",\n      onClick: this.addNewClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"Done\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 124\n      }\n    }));\n  }\n\n}\n\nexport default AddStudents;","map":{"version":3,"sources":["/Users/mhd.sad22/graduation-project/graduation-project/src/components/AddStudents.js"],"names":["React","Component","AddStudents","constructor","addNewClass","e","teacherID","JSON","parse","sessionStorage","getItem","id_number","classData","className","state","courseName","ids","addedStdID","fnames","addedStdFName","lnames","addedStdLName","fetch","method","headers","body","stringify","then","res","json","setState","title","show","catch","console","log","addStudent","id","target","value","fname","getAttribute","lname","arrIDS","arrFN","arrLN","found","indexOf","push","splice","document","getElementById","style","background","handleFilter","event","search","students","componentDidMount","url","response","data","render","filteredArray","filter","std","toLowerCase","includes","length","forEach","name","map","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass AddStudents extends Component {\n    constructor() {\n        super();\n        this.state = {\n            students: [],\n            addedStdID: [],\n            addedStdFName: [],\n            addedStdLName: [],\n            search: ''\n        }\n    }\n    componentDidMount() {\n        let url = 'http://localhost:3000/students';\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({ students: data });\n            })\n\n    }\n\n    addNewClass = (e) => {\n        let teacherID = JSON.parse(sessionStorage.getItem('teacher')).id_number;\n        let classData = {\n            teacherID,\n            className: this.state.courseName,\n            ids: this.state.addedStdID,\n            fnames: this.state.addedStdFName,\n            lnames: this.state.addedStdLName\n        };\n\n        fetch('http://localhost:3000/classes', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(classData),\n        })\n            .then(res => res.json())\n            .then(\n                this.setState({\n                    title: 'Done',\n                    body: 'Class Created Successfully ..',\n                    show: true\n                })\n            ).catch(e => { console.log(e) });\n    }\n\n    addStudent = (e) => {\n        let id = e.target.value;\n        let fname = e.target.getAttribute('data-fname');\n        let lname = e.target.getAttribute('data-lname');\n        let arrIDS = this.state.addedStdID;\n        let arrFN = this.state.addedStdFName;\n        let arrLN = this.state.addedStdLName;\n        let found = arrIDS.indexOf(id);\n        if (found === -1) {\n            arrIDS.push(id);\n            arrFN.push(fname);\n            arrLN.push(lname);\n            // document.getElementById(id + 'label').style.background = \"#004d1a\";\n            this.setState({\n                addedStdID: arrIDS,\n                addedStdFName: arrFN,\n                addedStdLName: arrLN,\n            });\n        }\n        else {\n            arrIDS.splice(found, 1);\n            arrFN.splice(found, 1);\n            arrLN.splice(found, 1);\n            this.setState({\n                addStudent: arrIDS,\n                addedStdFName: arrFN,\n                addedStdLName: arrLN\n            });\n\n            document.getElementById(id + 'label').style.background = \"#343a40\";\n        }\n        console.log(this.state.addedStdID, this.state.addedStdFName, this.state.addedStdLName);\n    }\n\n    handleFilter = (event) => {\n        this.setState({ search: event.target.value });\n    }\n\n    render() {\n\n        let filteredArray = this.state.students.filter((std) => {\n            return (`${std.fname} ${std.lname} ${std.id}`).toLowerCase().includes(this.state.search.toLowerCase());\n        });\n        if (this.state.addedStdID.length !== 0) {\n\n            this.state.addedStdID.forEach((id) => {\n                let name = document.getElementById(id + 'label');\n                if (name !== null) {\n                    name.style.background = \"#004d1a\";\n                }\n\n            })\n        }\n        filteredArray = filteredArray.map((std, i) => {\n            return <label htmlFor={std.id} id={std.id + 'label'} key={std.id} data-name={std.fname} className=\"student\">{std.fname + ' ' + std.lname + ' | ' + std.id} <input type=\"checkbox\" data-fname={std.fname} data-lname={std.lname} value={std.id} id={std.id} onChange={this.addStudent} className=\"check\" /></label>\n        })\n\n\n\n        return (\n            <>\n                <h1 className=\"main-title\">Add Student</h1>\n                <div className=\"container-students\">\n                    <input className=\"search\" onChange={this.handleFilter} type=\"search\" placeholder=\"search on students\" />\n                    <div className=\"cont-cont\">\n                        <div className=\"students p-3\" id=\"students\">\n                            {filteredArray}\n                        </div>\n                    </div>\n                </div>\n                <br />\n                <button id='submit' className=\"btn f3 grow btn-success btn-submit\" onClick={this.addNewClass}>Done</button><br />\n            </>\n        )\n    }\n}\nexport default AddStudents;"]},"metadata":{},"sourceType":"module"}