{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/graduation-project/graduation-project/src/components/Register.js\";\nimport React from 'react';\n\nfunction Register() {\n  // \n  function setImage(e) {\n    // triggers when select images\n    e.preventDefault();\n    const file = document.getElementById(\"file\");\n\n    if (file.files.length === 3) {\n      createPerson(file); //create the first image and add to it the 2 other images \n    } else {\n      alert(\"you should entere three images ..\");\n    }\n  } //add faces to exist person\n\n\n  function addFace(file, id) {\n    var myHeaders = new Headers();\n    myHeaders.append(\"token\", \"0ed0d51e90cc4f3ab510a564cfb94b60\");\n    var formdata = new FormData();\n    formdata.append(\"photo\", file, \"file\");\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: formdata,\n      redirect: 'follow'\n    };\n    fetch(`https://api.luxand.cloud/subject/${id}`, requestOptions) // id of the person ..\n    .then(response => response.json()).then(result => console.log(result)).catch(error => console.log('error add face fetch', error));\n  } //create new person\n\n\n  function createPerson(file) {\n    // check if the name is exist or not ?\n    let id_number = document.getElementById('id_number').value; // for check if the student is already registered.\n\n    let stName = document.getElementById('firstName').value;\n\n    if (id_number) {\n      //check the id in database.\n      var myHeaders = new Headers();\n      myHeaders.append(\"token\", '0ed0d51e90cc4f3ab510a564cfb94b60');\n      var formdata = new FormData();\n      formdata.append(\"name\", stName);\n      formdata.append(\"photo\", file.files[0], \"file\"); //first image\n\n      formdata.append(\"store\", \"1\");\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: formdata,\n        redirect: 'follow'\n      };\n      fetch(\"https://api.luxand.cloud/subject/v2\", requestOptions).then(response => response.json()).then(result => {\n        let id = result.id; // get the id for add faces to the same person.\n\n        addFace(file.files[1], id); //add second and third images to the same person\n\n        addFace(file.files[2], id); //add second and third images to the same person\n\n        console.log(result, id); //alert .. added successfully\n      }).catch(error => console.log('error fetching', error));\n    }\n  } //\n\n\n  function sendData(event) {\n    if (event.target.id === 'formStudent') {\n      console.log(event.target.lastName);\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"main-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Register Page\"), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"formStudent\",\n    onClick: sendData,\n    className: \"mt-3 bg-black-10 shadow-5 p-5 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"firstName\",\n    placeholder: \"First Name ..\",\n    className: \"form-input mt-4\",\n    name: \"firstName\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Last Name ..\",\n    className: \"form-input mt-4\",\n    name: \"lastName\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"id_number\",\n    placeholder: \"Student ID ..\",\n    className: \"form-input mt-4\",\n    name: \"id_number\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password ..\",\n    className: \"form-input mt-4\",\n    name: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"file\",\n    className: \"form-input mt-4 pointer dim\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Upload your Image\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"file\",\n    className: \"form-file mt-4\",\n    multiple: true,\n    accept: \"image/*\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    id: \"submit\",\n    className: \"btn btn-success btn-submit mt-4\",\n    onClick: setImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Register\")));\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/mhd.sad22/graduation-project/graduation-project/src/components/Register.js"],"names":["React","Register","setImage","e","preventDefault","file","document","getElementById","files","length","createPerson","alert","addFace","id","myHeaders","Headers","append","formdata","FormData","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","console","log","catch","error","id_number","value","stName","sendData","event","target","lastName"],"mappings":"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","sourcesContent":["import React from 'react' ;\n\nfunction Register(){\n    \n    // \n    function setImage(e) { // triggers when select images\n        e.preventDefault();\n        const file=document.getElementById(\"file\");\n        if (file.files.length === 3) {\n            createPerson(file); //create the first image and add to it the 2 other images \n        }\n        else{\n            alert(\"you should entere three images ..\");\n        }\n    }\n\n\n\n    //add faces to exist person\n    function addFace(file,id){\n        var myHeaders = new Headers();\n        myHeaders.append(\"token\", \"0ed0d51e90cc4f3ab510a564cfb94b60\");\n\n        var formdata = new FormData();\n        formdata.append(\"photo\", file, \"file\");\n\n        var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: formdata,\n            redirect: 'follow'\n        };\n\n        fetch(`https://api.luxand.cloud/subject/${id}`, requestOptions) // id of the person ..\n            .then(response => response.json())\n            .then(result => console.log(result))\n            .catch(error => console.log('error add face fetch', error));\n    }\n\n    //create new person\n    function createPerson(file){\n        // check if the name is exist or not ?\n        let id_number=document.getElementById('id_number').value; // for check if the student is already registered.\n        let stName = document.getElementById('firstName').value;\n\n        if(id_number){ //check the id in database.\n\n\n        \n        var myHeaders = new Headers();\n        myHeaders.append(\"token\", '0ed0d51e90cc4f3ab510a564cfb94b60');\n\n        var formdata = new FormData();\n        formdata.append(\"name\", stName);\n        formdata.append(\"photo\", file.files[0], \"file\");//first image\n        formdata.append(\"store\", \"1\");\n\n        var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: formdata,\n            redirect: 'follow'\n        };\n\n        fetch(\"https://api.luxand.cloud/subject/v2\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                let id = result.id; // get the id for add faces to the same person.\n                addFace(file.files[1],id); //add second and third images to the same person\n                addFace(file.files[2],id);//add second and third images to the same person\n                console.log(result , id);\n                //alert .. added successfully\n            })\n            .catch(error => console.log('error fetching', error));\n        }\n    }\n    //\n    function sendData(event){\n        if(event.target.id === 'formStudent'){\n            \n            console.log(event.target.lastName);\n        }\n    };  \n\n\n\n\n    return(\n        <>\n        <h1 className=\"main-title\">Register Page</h1>\n        <form id=\"formStudent\" onClick={sendData} className=\"mt-3 bg-black-10 shadow-5 p-5 \">\n            <input type=\"text\" id=\"firstName\" placeholder=\"First Name ..\" className=\"form-input mt-4\" name=\"firstName\" required />\n            <br />\n            <input type=\"text\" placeholder=\"Last Name ..\" className=\"form-input mt-4\" name=\"lastName\" required/>\n            <br />\n            <input type=\"text\" id=\"id_number\" placeholder=\"Student ID ..\" className=\"form-input mt-4\" name=\"id_number\" required/>\n            <br />\n            {/* for now it's not used */}\n            <input type=\"password\" placeholder=\"Password ..\" className=\"form-input mt-4\" name=\"password\" required/>\n            <br /> \n            <label for=\"file\" className=\"form-input mt-4 pointer dim\">Upload your Image</label>\n            <input type=\"file\" id=\"file\" className=\"form-file mt-4\" multiple accept=\"image/*\"  required/>\n            <br />\n            <button type=\"submit\" id='submit'  className=\"btn btn-success btn-submit mt-4\" onClick={setImage} >\n            Register\n            </button>\n        </form>\n        </>\n    );\n}\nexport default Register ;"]},"metadata":{},"sourceType":"module"}