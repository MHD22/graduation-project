{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/graduation-project/graduation-project/src/components/MyClasses.js\";\nimport { Button } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport noImage from '../noImage.png';\nimport StudentsTable from './StudentsTable';\n\nclass MyClasses extends Component {\n  constructor() {\n    super();\n\n    this.checkLoggedIn = () => {\n      const data = sessionStorage.getItem('teacher');\n\n      if (!data) {\n        window.location.replace('http://localhost:3001/login');\n      } else {\n        this.setState({\n          hidePage: false\n        });\n      }\n    };\n\n    this.checkAttendence = e => {\n      this.setState({\n        load: true\n      }); //Create a reader to read an uploaded file .\n\n      var reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n\n      reader.onload = event => {\n        //Get the uploaded image and store it in var image .\n        var image = new Image();\n        image.src = event.target.result; //Create to variable to store image width and height .\n\n        var imgHeight, imgWidth;\n\n        image.onload = async function () {\n          imgHeight = this.height;\n          imgWidth = this.width; //The function will store width and height values in State . \n\n          setData();\n        };\n\n        let setData = () => {\n          this.setState({\n            width: imgWidth,\n            height: imgHeight\n          });\n        };\n      };\n\n      const img = e.target;\n\n      if (img) {\n        this.setState({\n          file: URL.createObjectURL(e.target.files[0])\n        });\n        this.faceRecognition(img.files[0]);\n      }\n\n      e.target.value = null;\n    };\n\n    this.setShowBtn = () => {\n      this.setState({\n        showUploadBtn: true\n      });\n    };\n\n    this.faceRecognition = img => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"token\", \"0ed0d51e90cc4f3ab510a564cfb94b60\");\n      var formdata = new FormData();\n      formdata.append(\"photo\", img, \"file\");\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: formdata,\n        redirect: 'follow'\n      };\n      fetch(\"https://api.luxand.cloud/photo/search\", requestOptions).then(response => response.json()).then(result => {\n        let faces = []; //Define canvas to draw rectangle .\n\n        let canvas = document.getElementById('canvas');\n        let ctx = canvas.getContext('2d'); //Canvas properties .\n\n        ctx.strokeStyle = 'yellow';\n        ctx.fillStyle = 'yellow';\n        ctx.lineWidth = '5'; //Change the background of context to the uploaded image .\n\n        var image = document.getElementById('person');\n        ctx.drawImage(image, 0, 0);\n\n        for (var i in result) {\n          if (result[i].probability * 100 < 90) {\n            continue;\n          }\n\n          faces.push(result[i].id); //Get the values of Rectangle .\n\n          let {\n            left\n          } = result[i].rectangle,\n              {\n            right\n          } = result[i].rectangle,\n              {\n            bottom\n          } = result[i].rectangle,\n              {\n            top\n          } = result[i].rectangle; //Determine the width and hight for rectangle .\n\n          let Dim = right - left; //Determine font size and the space between rectangle and text .\n\n          let space = parseInt(Dim / 3),\n              text = `${space}px Lobster`;\n          ctx.font = text; //Draw the rectangle .\n\n          ctx.strokeRect(left, top, Dim, Dim); //Type the name of person .\n\n          ctx.fillText(result[i].name, left, bottom + space);\n        }\n\n        this.setState({\n          faces: faces,\n          showImage: false\n        });\n        console.log('faces ids: ', this.state.faces);\n        var final_image = canvas.toDataURL(\"image/png\");\n        this.setState({\n          file: final_image\n        });\n        console.log(result);\n        this.colorTable(result);\n        this.setState({\n          load: false\n        });\n      }).catch(error => console.log('error', error));\n    };\n\n    this.colorTable = result => {\n      var {\n        students\n      } = this.state;\n\n      for (var student of students) {\n        document.getElementById(student.id).className = '';\n        var stName = student.name;\n\n        for (var res of result) {\n          var resName = res.name;\n\n          if (stName === resName && res.probability * 100 > 90) {\n            console.log(student.id);\n            document.getElementById(student.id + \"\").className = 'bg-success text-light';\n          }\n        }\n      }\n    };\n\n    this.clear = () => {\n      this.setState({\n        showImage: true,\n        showUploadBtn: false\n      });\n      var {\n        students\n      } = this.state;\n\n      for (var student of students) {\n        document.getElementById(student.id).className = '';\n      }\n    };\n\n    this.classClicked = e => {\n      const name = e.target.getAttribute('data-class');\n      var arr = [];\n      this.state.classes.forEach(element => {\n        if (element.className === name) {\n          element.students.forEach(std => {\n            arr.push({\n              id: std.id_number,\n              name: std.firstName + std.lastName\n            });\n          });\n        }\n      });\n      this.setState({\n        students: arr,\n        hidePage: true\n      });\n    };\n\n    this.state = {\n      file: null,\n      width: 0,\n      height: 0,\n      faces: [],\n      students: [],\n      showImage: true,\n      showUploadBtn: false,\n      load: false,\n      hidePage: false,\n      classes: []\n    };\n  }\n\n  componentDidMount() {\n    this.checkLoggedIn();\n    fetch('http://localhost:3000/teacherClasses?id=' + JSON.parse(sessionStorage.getItem('teacher')).id_number).then(res => res.json()).then(data => {\n      this.setState({\n        classes: data\n      });\n      console.log(data);\n      console.log('State', this.state.classes);\n    }).catch(e => console.log(e));\n  } //To Check if LoggedIn .\n\n\n  render() {\n    let bgColors = ['bg-dark', 'bg-primary', 'bg-info', 'bg-success', 'bg-secondary'];\n    let rows = this.state.classes.map(cs => {\n      const num = parseInt(Math.random() * bgColors.length);\n      const classNames = `${bgColors[num]} col-md-5 ml-1 class rounded mt-1 text-center text-light`;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: this.classClicked,\n        key: cs._id,\n        \"data-class\": cs.className,\n        \"data-student\": cs.students,\n        id: cs._id,\n        className: classNames,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        \"data-class\": cs.className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }\n      }, cs.className), /*#__PURE__*/React.createElement(\"p\", {\n        \"data-class\": cs.className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }\n      }, \"Students : \", cs.students.length));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      hidden: !this.state.hidePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      hidden: !this.state.load,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      hidden: this.state.load,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mt-2\",\n      style: {\n        fontFamily: 'Lobster',\n        color: '#343a40'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 29\n      }\n    }, \"Student of the course\"), /*#__PURE__*/React.createElement(StudentsTable, {\n      students: this.state.students,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 align-self-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      hidden: this.state.showUploadBtn,\n      onClick: this.setShowBtn,\n      style: {\n        width: '100%'\n      },\n      className: \"btn f3 grow btn-dark btn-submit mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 29\n      }\n    }, \"Check Attendence\"), /*#__PURE__*/React.createElement(\"div\", {\n      hidden: !this.state.showUploadBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"file2\",\n      style: {\n        width: '50%',\n        backgroundColor: 'darkcyan'\n      },\n      className: \"mt-3 grow f4 btn text-light btn-submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 33\n      }\n    }, \"Upload Image\"), /*#__PURE__*/React.createElement(\"input\", {\n      hidden: true,\n      onChange: this.checkAttendence,\n      type: \"file\",\n      accept: \"image/*\",\n      id: \"file2\",\n      className: \"form-file mt-4\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      hidden: !this.state.showImage,\n      className: \"mt-5\",\n      style: {\n        fontFamily: 'Acme'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 33\n      }\n    }, \"To Check Attendence Upload an image for class student , then the system will check it .\"), /*#__PURE__*/React.createElement(\"p\", {\n      hidden: !this.state.showImage,\n      style: {\n        fontFamily: 'Acme'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bg-success p-1 text-light rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 99\n      }\n    }, \"Green\"), \" rows on table represents the Attendees student , and the \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bg-dark p-1 text-light rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 221\n      }\n    }, \"white\"), \" rows for Absence students . \"), /*#__PURE__*/React.createElement(\"img\", {\n      hidden: true,\n      id: \"person\",\n      src: this.state.file,\n      alt: \"Person\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"canvas\",\n      width: this.state.width,\n      height: this.state.height,\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-thumbnail mt-5\",\n      src: this.state.file || noImage,\n      alt: \"Person\",\n      width: \"400\",\n      height: \"400\",\n      hidden: this.state.showImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      hidden: this.state.showImage,\n      onClick: this.clear,\n      style: {\n        width: '30%'\n      },\n      className: \"btn f3 grow btn-warning btn-submit mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 33\n      }\n    }, \"Clear\"), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btn f3 grow btn-info btn-submit mt-4\",\n      style: {\n        width: '30%'\n      },\n      hidden: this.state.showImage,\n      href: `${this.state.file}`,\n      download: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 33\n      }\n    }, \"Download\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container text-center\",\n      hidden: this.state.hidePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"main-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }\n    }, \"Select A Class\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }, rows)));\n  }\n\n}\n\nexport default MyClasses;","map":{"version":3,"sources":["/Users/mhd.sad22/graduation-project/graduation-project/src/components/MyClasses.js"],"names":["Button","React","Component","noImage","StudentsTable","MyClasses","constructor","checkLoggedIn","data","sessionStorage","getItem","window","location","replace","setState","hidePage","checkAttendence","e","load","reader","FileReader","readAsDataURL","target","files","onload","event","image","Image","src","result","imgHeight","imgWidth","height","width","setData","img","file","URL","createObjectURL","faceRecognition","value","setShowBtn","showUploadBtn","myHeaders","Headers","append","formdata","FormData","requestOptions","method","headers","body","redirect","fetch","then","response","json","faces","canvas","document","getElementById","ctx","getContext","strokeStyle","fillStyle","lineWidth","drawImage","i","probability","push","id","left","rectangle","right","bottom","top","Dim","space","parseInt","text","font","strokeRect","fillText","name","showImage","console","log","state","final_image","toDataURL","colorTable","catch","error","students","student","className","stName","res","resName","clear","classClicked","getAttribute","arr","classes","forEach","element","std","id_number","firstName","lastName","componentDidMount","JSON","parse","render","bgColors","rows","map","cs","num","Math","random","length","classNames","_id","fontFamily","color","backgroundColor"],"mappings":"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","sourcesContent":["import { Button } from 'react-bootstrap';\nimport React, { Component } from 'react' ;\nimport noImage from '../noImage.png' ;\nimport StudentsTable from './StudentsTable';\n\nclass MyClasses extends Component{\n    constructor(){\n        super() ;\n        this.state = {\n            file: null , \n            width : 0 ,\n            height : 0,\n            faces:[],\n            students:[] ,\n            showImage : true ,\n            showUploadBtn : false ,\n            load : false ,\n            hidePage : false ,\n            classes : [] \n        }\n    }\n\n    componentDidMount(){\n        this.checkLoggedIn() ;\n        fetch('http://localhost:3000/teacherClasses?id=' + JSON.parse(sessionStorage.getItem('teacher')).id_number)\n        .then(res=> res.json()).then(data=>{\n            this.setState({\n                classes : data\n            })\n            console.log(data);\n            console.log('State' , this.state.classes) ;\n        })\n        .catch(e=>console.log(e));\n    }\n\n    //To Check if LoggedIn .\n    checkLoggedIn = () => {\n        const data = sessionStorage.getItem('teacher') ;\n        if(!data){\n            window.location.replace('http://localhost:3001/login') ;\n        }\n        else {\n            this.setState({\n                hidePage : false\n            })\n        }\n    }\n\n    \n\n    checkAttendence = (e) => {\n        this.setState({\n            load : true\n        });\n        //Create a reader to read an uploaded file .\n        var reader = new FileReader();\n        reader.readAsDataURL(e.target.files[0]);\n        \n        reader.onload = (event) => {\n        //Get the uploaded image and store it in var image .\n        var image = new Image();\n        image.src = event.target.result;\n\n        //Create to variable to store image width and height .\n        var imgHeight , imgWidth ;\n        image.onload = async function () {\n            imgHeight = this.height ;\n            imgWidth = this.width ;\n\n            //The function will store width and height values in State . \n            setData() ;\n        }\n        let setData = () => {\n            this.setState({\n                width : imgWidth ,\n                height : imgHeight\n            }) ;\n        }\n    };\n\n        const img = e.target ;\n        if(img){\n            this.setState({\n                file: URL.createObjectURL(e.target.files[0])\n            })\n            this.faceRecognition(img.files[0]) ;\n        }\n        e.target.value = null;\n    }\n\n    setShowBtn = () => {\n        this.setState({\n            showUploadBtn : true \n        });\n    }\n\n\n    faceRecognition = (img) => {\n        var myHeaders = new Headers();\n        myHeaders.append(\"token\", \"0ed0d51e90cc4f3ab510a564cfb94b60\");\n\n        var formdata = new FormData();\n        formdata.append(\"photo\", img, \"file\");\n\n        var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: formdata,\n        redirect: 'follow'\n    };\n\n        fetch(\"https://api.luxand.cloud/photo/search\", requestOptions)\n        .then(response => response.json())\n        .then(result => {\n            let faces=[];\n            //Define canvas to draw rectangle .\n            let canvas = document.getElementById('canvas') ;\n            let ctx = canvas.getContext('2d') ;\n\n            //Canvas properties .\n            ctx.strokeStyle = 'yellow' ;\n            ctx.fillStyle = 'yellow' ;\n            ctx.lineWidth = '5' ;\n\n            //Change the background of context to the uploaded image .\n            var image = document.getElementById('person') ;\n            ctx.drawImage(image , 0 , 0) ;\n            \n            for(var i in result){\n            if(result[i].probability*100 < 90){\n                continue;\n            }\n            faces.push(result[i].id);\n            //Get the values of Rectangle .\n            let {left} = result[i].rectangle ,\n            {right} = result[i].rectangle ,\n            {bottom} = result[i].rectangle ,\n            {top} = result[i].rectangle ;\n\n            //Determine the width and hight for rectangle .\n            let Dim = (right - left) ;\n\n            //Determine font size and the space between rectangle and text .\n            let space = parseInt(Dim / 3) ,\n            text = `${space}px Lobster`  ;\n            ctx.font = text ;\n\n            //Draw the rectangle .\n            ctx.strokeRect(left,top,Dim,Dim) ;\n\n            //Type the name of person .\n            ctx.fillText(result[i].name , left, bottom + space) ;\n            }\n            this.setState({faces:faces , showImage : false});\n            console.log('faces ids: ', this.state.faces);\n\n\n            var final_image = canvas.toDataURL(\"image/png\");\n            this.setState({\n                file : final_image\n            });\n            \n            console.log(result) ;\n            this.colorTable(result) ;\n            this.setState({\n                load : false\n            });\n            \n        })\n        .catch(error => console.log('error', error));\n    };\n\n    colorTable = (result) => {\n        var {students} = this.state ;\n        for(var student of students){\n            document.getElementById(student.id).className = '' ;\n            var stName = student.name ;\n            for(var res of result){\n                var resName = res.name ;\n                if(stName === resName && res.probability * 100 > 90){\n                    console.log(student.id) ;\n                    document.getElementById(student.id + \"\").className = 'bg-success text-light' ;\n                }\n            }\n        }\n    }\n\n    clear = () => {\n        this.setState({\n            showImage : true ,\n            showUploadBtn : false \n        }) ;\n        var {students} = this.state ;\n        for(var student of students){\n            document.getElementById(student.id).className = '' ;\n        }\n    }\n\n    classClicked = (e) => {\n        const name = e.target.getAttribute('data-class') ;\n        var arr = []\n        this.state.classes.forEach(element => {\n            if(element.className === name){\n                element.students.forEach((std)=>{\n                    arr.push({id:std.id_number , name:std.firstName + std.lastName})\n                })\n            }\n        });\n        this.setState({\n            students:arr ,\n            hidePage : true \n        })       \n    }\n\n    render() {\n        let bgColors = ['bg-dark' , 'bg-primary' , 'bg-info' , 'bg-success' , 'bg-secondary'] ;\n        let rows = this.state.classes.map((cs)=>{\n            const num = parseInt(Math.random() * bgColors.length) ;\n            const classNames = `${bgColors[num]} col-md-5 ml-1 class rounded mt-1 text-center text-light` ;\n            return( \n                <div onClick={this.classClicked} key={cs._id} data-class={cs.className} data-student={cs.students} id={cs._id} className={classNames}>\n                    <h1 data-class={cs.className}>{cs.className}</h1>\n                    <p data-class={cs.className}>Students : {cs.students.length}</p>\n                </div>\n            )\n         });\n\n        return (\n            <>  \n                <div className=\"container\" hidden={!this.state.hidePage}>\n                    {/* Spinner when get the result */}\n                    <div className=\"loading\" hidden={!this.state.load}>\n                        <div className=\"circle\"></div>\n                        <div className=\"circle\"></div>\n                        <div className=\"circle\"></div>\n                        <div className=\"circle\"></div>\n                    </div>\n\n                    <div className=\"row\" hidden={this.state.load}>\n\n                        {/* Student table */}\n                        <div className=\"col-md-6\">\n                            <h3 className=\"mt-2\" style={{ fontFamily : 'Lobster' , color : '#343a40' }}>Student of the course</h3>\n                            <StudentsTable students={this.state.students}/>\n                        </div>\n                        \n                        {/* Face recognition */}\n                        <div className=\"col-md-6 align-self-center\">\n                            <Button hidden = {this.state.showUploadBtn} onClick={this.setShowBtn} style={{ width : '100%' }} className=\"btn f3 grow btn-dark btn-submit mt-4\">Check Attendence</Button>\n                            <div hidden = {!this.state.showUploadBtn}>\n                                <label htmlFor=\"file2\" style={{ width : '50%' , backgroundColor : 'darkcyan' }} className=\"mt-3 grow f4 btn text-light btn-submit\">Upload Image</label>\n                                <input hidden onChange={this.checkAttendence} type=\"file\" accept=\"image/*\" id=\"file2\" className=\"form-file mt-4\" required />\n                                <br />\n                                <p hidden={!this.state.showImage} className=\"mt-5\" style={{ fontFamily : 'Acme' }}>To Check Attendence Upload an image for class student , then the system will check it .</p>\n                                <p hidden={!this.state.showImage} style={{ fontFamily : 'Acme' }}><span className=\"bg-success p-1 text-light rounded\">Green</span> rows on table represents the Attendees student , and the <span className=\"bg-dark p-1 text-light rounded\">white</span> rows for Absence students . </p>\n\n                                {/* Image will display the uploaded image , we use it to draw it on canvas . */}\n                                <img hidden id=\"person\" src={this.state.file} alt=\"Person\" />\n\n                                {/* Canvas will draw the image , rectangles and names . */}\n                                <canvas id=\"canvas\" width={this.state.width} height={this.state.height} hidden></canvas>\n\n                                {/* The final result will be shown on the img below , that we can edit it's width and height . */}\n                                <img className=\"img-thumbnail mt-5\" src={this.state.file || noImage} alt=\"Person\" width=\"400\" height='400' hidden = {this.state.showImage} />\n                                <br />\n                                <Button hidden = {this.state.showImage} onClick={this.clear} style={{ width : '30%' }} className=\"btn f3 grow btn-warning btn-submit mt-4\">Clear</Button>\n                                <a className=\"btn f3 grow btn-info btn-submit mt-4\" style={{ width : '30%' }} hidden = {this.state.showImage} href={`${this.state.file}`} download>Download</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"container text-center\" hidden={this.state.hidePage}>\n                    <h1 className=\"main-title\">Select A Class</h1>\n                    <div className=\"row d-flex justify-content-center\">\n                        {rows}\n                    </div>\n                </div>\n            </>);\n    }\n}\nexport default MyClasses ;\n"]},"metadata":{},"sourceType":"module"}