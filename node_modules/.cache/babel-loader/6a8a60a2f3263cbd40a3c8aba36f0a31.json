{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/graduation-project/graduation-project/src/components/Login.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport Swal from 'sweetalert2';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.checkId = event => {\n      event.preventDefault();\n      const form = document.getElementById('signInForm');\n      let user = {\n        id: form.teacherId.value,\n        password: form.teacherPassword.value\n      };\n\n      if (user.id && user.password) {\n        checkTheUserData(user).then(userData => {\n          if (isUserLoggedIn(userData)) {\n            storedUserInSession(userData);\n            goToHomePage();\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops ...',\n              html: '<h5 class=\"text-danger font-lobster mt-2\">Email OR Password Is Wrong<br>Try again.</h5>'\n            });\n          }\n        }).catch(e => {\n          console.log(\"error during send user data to backend within the sign in page.\");\n        });\n      } else {\n        Swal.fire({\n          icon: 'warning',\n          title: 'Hmmm ..',\n          html: '<h5 class=\"text-warning font-lobster mt-2\">All fields are required</h5>'\n        });\n      }\n    };\n\n    this.resetPassHandler = e => {\n      let token = document.getElementById('resetToken').value;\n      let {\n        email,\n        newPass,\n        hashedToken\n      } = this.state;\n      let bodyData = {\n        email,\n        newPass,\n        token,\n        hashedToken\n      };\n      let baseUrl = document.getElementById('baseUrl').defaultValue;\n      let url = `${baseUrl}/resetPass`;\n      let requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyData)\n      };\n      fetch(url, requestOptions).then(res => res.json()).then(response => {\n        if (response === 'done') {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success',\n            html: '<h5 class=\"text-success font-lobster mt-2\">Password Is Changed Successfully</h5>'\n          });\n          this.setState({\n            isForgotClicked: false\n          });\n          this.clearForms();\n        } else if (response === 'Token is wrong.') {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops ...',\n            html: '<h5 class=\"text-danger font-lobster mt-2\">Token is wrong! <br> Try again..</h5>'\n          });\n        }\n\n        console.log(response);\n      });\n    };\n\n    this.showResetForm = () => {\n      this.setState({\n        isForgotClicked: true\n      });\n    };\n\n    this.showLoginForm = () => {\n      this.setState({\n        isForgotClicked: false\n      });\n    };\n\n    this.getAccessToken = e => {\n      e.preventDefault();\n      let resetForm = document.getElementById('resetPassForm');\n      let email = resetForm.email.value;\n      let newPass = resetForm.newPass.value;\n\n      if (email && newPass) {\n        this.setState({\n          email,\n          newPass\n        });\n        let baseUrl = document.getElementById('baseUrl').defaultValue;\n        let url = `${baseUrl}/sendToken`;\n        let requestOptions = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email\n          })\n        };\n        fetch(url, requestOptions).then(result => result.json()).then(response => {\n          if (response === 'This email is not registered yet.') {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops ...',\n              html: `<h5 class=\"text-danger font-lobster mt-2\">${response}</h5>`\n            });\n          } else if (response === 'error within checking the teacher existance') {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops ...',\n              html: `<h5 class=\"text-danger font-lobster mt-2\">Something wrong, try again later, please.</h5>`\n            });\n          } else {\n            this.setState({\n              hashedToken: response,\n              showSentToken: true\n            });\n            Swal.fire({\n              title: '<h3 class=\"font-acme\">Enter the verification code sent to your email :</3>',\n              icon: 'question',\n              iconHtml: '?',\n              html: '<input type=\"text\" id=\"resetToken\" class=\"form-control text-center\" placeholder=\"Verification Code\" name=\"token\"/>'\n            }).then(() => {\n              this.resetPassHandler();\n            });\n          }\n        }).catch(e => {\n          console.log(\"error when getting the hashed token..\");\n        });\n      } else {\n        Swal.fire({\n          icon: 'warning',\n          title: 'Hmmm ..',\n          html: '<h5 class=\"text-warning font-lobster mt-2\">All fields are required</h5>'\n        });\n      }\n    };\n\n    this.clearForms = () => {\n      let form = document.getElementById('signInForm');\n      let form2 = document.getElementById('resetPassForm');\n      form.teacherId.value = '';\n      form.teacherPassword.value = '';\n      form2.email.value = '';\n      form2.newPass.value = '';\n    };\n\n    this.state = {\n      isForgotClicked: false,\n      // showSentToken: false,\n      email: '',\n      newPass: '',\n      hashedToken: '',\n      token: '',\n      route: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      hidden: this.state.isForgotClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"mt-3\",\n      id: \"signInForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }, \"ID Number\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"teacherId\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }, \"PASSWORD\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"teacherPassword\",\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.checkId,\n      className: \"mt4 my-button \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, \"Sign In\")), /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.showResetForm,\n      className: \"mt4 pointer grow \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"forget\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 83\n      }\n    }, \"Forgot Password?\"))), /*#__PURE__*/React.createElement(\"div\", {\n      hidden: !this.state.isForgotClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"mt-3\",\n      id: \"resetPassForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 29\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }, \"New Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"newPass\",\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.getAccessToken,\n      className: \"mt4 my-button \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }\n    }, \"Send Token\"))), /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.showLoginForm,\n      className: \"mt4 pointer grow \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"forget\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 83\n      }\n    }, \"login?\"))));\n  }\n\n}\n\nexport default Login; //helper functions:\n\nfunction isUserLoggedIn(userData) {\n  if (userData.length === 1) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction storedUserInSession(userData) {\n  const {\n    firstName,\n    lastName,\n    id_number\n  } = userData[0];\n  const storedData = {\n    firstName,\n    lastName,\n    id_number\n  };\n  sessionStorage.setItem('teacher', JSON.stringify(storedData));\n}\n\nfunction goToHomePage() {\n  window.location.replace(\"http://localhost:3000\");\n}\n\nfunction checkTheUserData(user) {\n  let baseUrl = document.getElementById('baseUrl').defaultValue;\n  return fetch(`${baseUrl}/loginTeacher`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(res => res.json());\n}","map":{"version":3,"sources":["/Users/mhd.sad22/graduation-project/graduation-project/src/components/Login.js"],"names":["React","Component","Swal","Login","constructor","checkId","event","preventDefault","form","document","getElementById","user","id","teacherId","value","password","teacherPassword","checkTheUserData","then","userData","isUserLoggedIn","storedUserInSession","goToHomePage","fire","icon","title","html","catch","e","console","log","resetPassHandler","token","email","newPass","hashedToken","state","bodyData","baseUrl","defaultValue","url","requestOptions","method","headers","body","JSON","stringify","fetch","res","json","response","setState","isForgotClicked","clearForms","showResetForm","showLoginForm","getAccessToken","resetForm","result","showSentToken","iconHtml","form2","route","render","length","firstName","lastName","id_number","storedData","sessionStorage","setItem","window","location","replace"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport Swal from 'sweetalert2';\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            isForgotClicked: false,\n            // showSentToken: false,\n            email: '',\n            newPass: '',\n            hashedToken: '',\n            token: '',\n            route: null\n        }\n    }\n\n    checkId = (event) => {\n\n        event.preventDefault();\n        const form = document.getElementById('signInForm');\n        let user = { id: form.teacherId.value, password: form.teacherPassword.value };\n\n        if (user.id && user.password) {\n            checkTheUserData(user)\n                .then(userData => {\n\n                    if (isUserLoggedIn(userData)) {\n                        storedUserInSession(userData);\n                        goToHomePage();\n                    }\n                    else {\n                        Swal.fire({\n                            icon: 'error',\n                            title: 'Oops ...',\n                            html: '<h5 class=\"text-danger font-lobster mt-2\">Email OR Password Is Wrong<br>Try again.</h5>',\n                        })\n                    }\n\n                })\n                .catch(e => { console.log(\"error during send user data to backend within the sign in page.\") });\n        }\n        else {\n            Swal.fire({\n                icon: 'warning',\n                title: 'Hmmm ..',\n                html: '<h5 class=\"text-warning font-lobster mt-2\">All fields are required</h5>',\n            })\n        }\n\n    }\n\n    resetPassHandler = (e) => {\n        let token = document.getElementById('resetToken').value;\n        let { email, newPass, hashedToken } = this.state;\n        let bodyData = { email, newPass, token, hashedToken };\n        let baseUrl = document.getElementById('baseUrl').defaultValue;\n        let url = `${baseUrl}/resetPass`;\n        let requestOptions =\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(bodyData),\n        };\n        fetch(url, requestOptions)\n            .then(res => res.json())\n            .then(response => {\n                if (response === 'done') {\n                    Swal.fire({\n                        icon: 'success',\n                        title: 'Success',\n                        html: '<h5 class=\"text-success font-lobster mt-2\">Password Is Changed Successfully</h5>',\n                    })\n                    this.setState({ isForgotClicked: false });\n                    this.clearForms();\n                }\n                else if (response === 'Token is wrong.') {\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Oops ...',\n                        html: '<h5 class=\"text-danger font-lobster mt-2\">Token is wrong! <br> Try again..</h5>',\n                    })\n                }\n\n                console.log(response);\n            })\n\n    }\n\n    showResetForm = () => {\n        this.setState({ isForgotClicked: true });\n    }\n    showLoginForm = () => {\n        this.setState({ isForgotClicked: false });\n    }\n\n    getAccessToken = (e) => {\n        e.preventDefault();\n        let resetForm = document.getElementById('resetPassForm');\n        let email = resetForm.email.value;\n        let newPass = resetForm.newPass.value;\n        if (email && newPass) {\n            this.setState({ email, newPass });\n            let baseUrl = document.getElementById('baseUrl').defaultValue;\n            let url = `${baseUrl}/sendToken`;\n            let requestOptions =\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ email }),\n            };\n            fetch(url, requestOptions)\n                .then(result => result.json())\n                .then(response => {\n                    if (response === 'This email is not registered yet.') {\n                        Swal.fire({\n                            icon: 'error',\n                            title: 'Oops ...',\n                            html: `<h5 class=\"text-danger font-lobster mt-2\">${response}</h5>`,\n                        })\n                    }\n                    else if (response === 'error within checking the teacher existance') {\n                        Swal.fire({\n                            icon: 'error',\n                            title: 'Oops ...',\n                            html: `<h5 class=\"text-danger font-lobster mt-2\">Something wrong, try again later, please.</h5>`,\n                        })\n                    }\n                    else {\n                        this.setState({ hashedToken: response, showSentToken: true });\n                        Swal.fire({\n                            title: '<h3 class=\"font-acme\">Enter the verification code sent to your email :</3>',\n                            icon: 'question',\n                            iconHtml: '?',\n                            html: '<input type=\"text\" id=\"resetToken\" class=\"form-control text-center\" placeholder=\"Verification Code\" name=\"token\"/>',\n                        }).then(() => {\n                            this.resetPassHandler();\n                        });\n\n                    }\n                })\n                .catch(e => { console.log(\"error when getting the hashed token..\") });\n        }\n        else {\n            Swal.fire({\n                icon: 'warning',\n                title: 'Hmmm ..',\n                html: '<h5 class=\"text-warning font-lobster mt-2\">All fields are required</h5>',\n            })\n        }\n\n    }\n\n    clearForms = () => {\n        let form = document.getElementById('signInForm');\n        let form2 = document.getElementById('resetPassForm');\n        form.teacherId.value = '';\n        form.teacherPassword.value = '';\n        form2.email.value = '';\n        form2.newPass.value = '';\n\n    }\n\n    render() {\n        return (\n            <>\n                <div hidden={this.state.isForgotClicked}>\n                    <form className=\"mt-3\" id='signInForm' >\n                        {/* <input name='teacherId' type=\"text\" placeholder=\"Teacher ID ..\" className=\"form-input mt-4\" required />\n                        <br />\n                        <input name='teacherPassword' type=\"password\" placeholder=\"Password..\" className=\"form-input mt-4\" required />\n                        <br />\n                        <input type=\"submit\" id='submit' onClick={this.checkId} value=\"Login\" className=\"btn btn-success btn-submit mt-4\" /> */}\n                        <label>ID Number</label>\n                        <input name='teacherId' type=\"text\" />\n\n                        <label>PASSWORD</label>\n                        <input name='teacherPassword' type=\"password\" />\n                        <button onClick={this.checkId} className=\"mt4 my-button \">Sign In</button>\n\n                    </form>\n                    <p onClick={this.showResetForm} className=\"mt4 pointer grow \"><span className=\"forget\">Forgot Password?</span></p>\n                </div>\n                <div hidden={!this.state.isForgotClicked}>\n                    {/* <h2 className=\"main-title ma3\" >Reset Password</h2> */}\n                    <form className=\"mt-3\" id='resetPassForm' >\n                        <div>\n                            <label>Email</label>\n                            <input name='email' type=\"email\" />\n                            <label>New Password</label>\n                            <input name='newPass' type=\"password\" />\n                            <button onClick={this.getAccessToken} className=\"mt4 my-button \">Send Token</button>\n                        </div>\n                    </form>\n                    <p onClick={this.showLoginForm} className=\"mt4 pointer grow \"><span className=\"forget\">login?</span></p>\n                </div>\n\n               \n            </>\n\n\n\n\n\n        );\n    }\n}\nexport default Login\n\n\n\n//helper functions:\n\n\nfunction isUserLoggedIn(userData) {\n    if (userData.length === 1) {\n        return true;\n    }\n    return false;\n}\n\nfunction storedUserInSession(userData) {\n    const { firstName, lastName, id_number } = userData[0];\n    const storedData = { firstName, lastName, id_number };\n    sessionStorage.setItem('teacher', JSON.stringify(storedData));\n}\n\nfunction goToHomePage() {\n    window.location.replace(\"http://localhost:3000\");\n}\n\nfunction checkTheUserData(user) {\n    let baseUrl = document.getElementById('baseUrl').defaultValue;\n    return fetch(`${baseUrl}/loginTeacher`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(user),\n    })\n        .then(res => res.json())\n\n}"]},"metadata":{},"sourceType":"module"}