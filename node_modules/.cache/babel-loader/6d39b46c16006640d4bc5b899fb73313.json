{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/graduation-project/graduation-project/src/components/StudentRegister.js\";\nimport React, { Component } from 'react';\n\nclass StudentRegister extends Component {\n  constructor() {\n    super();\n\n    this.setImage = e => {\n      e.preventDefault();\n      let formStudent = document.getElementById('formStudent');\n      let firstName = formStudent.firstName.value;\n      let lastName = formStudent.lastName.value;\n      let password = formStudent.password.value;\n      let id_number = formStudent.id_number.value;\n      const file = document.getElementById(\"file\"); // var file_data = $(\"#Image\").prop(\"files\")[0];   \n      // let file_data = file.files[0];\n\n      var formdata = new FormData();\n      formdata.append(\"image\", file.files[0], \"image1\");\n      formdata.append(\"image\", file.files[1], \"image2\");\n      formdata.append(\"image\", file.files[2], \"image3\");\n      var requestOptions = {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n      };\n      fetch(\"localhost:3000/testForm\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error)); //const plainFormData = Object.fromEntries(fData.entries());\n      //const formDataJsonString = JSON.stringify(plainFormData);\n      // console.log(\"form data : \",JSON.stringify(formdata));\n      //console.log(\"form values : \",formdata.values);\n      //for( let x of formdata){\n      //    console.log(x);\n      //} \n      // fd.append(\"file\", file_data);\n      // fd.append(\"isFirst\", true);\n      // console.table(file_data);\n\n      fetch('http://localhost:3000/testForm', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        body: fData\n      }).then(res => res.json()).then(res => console.log(res));\n\n      if (firstName && lastName && password && id_number && this.checkThreeImages(file)) {\n        this.setState({\n          firstName,\n          lastName,\n          password,\n          id_number\n        }, () => {\n          console.log(this.state);\n        });\n\n        if (this.checkThreeImages(file)) {\n          this.createPerson(file); //create the first image and add to it the 2 other images \n        }\n      } else {\n        alert(\"you should entere all the fields and three images ..\");\n      }\n    };\n\n    this.createPerson = file => {\n      // check if the name is exist or not ?\n      let id_number = document.getElementById('id_number').value; // for check if the student is already registered.\n\n      let stName = document.getElementById('firstName').value;\n      let studentData = {\n        id_number,\n        stName,\n        file: file.files\n      };\n      console.log(`student data :  `, studentData);\n      fetch('http://localhost:3000/createPerson', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(studentData)\n      }).then(res => res.json()).then(images => {\n        this.setState({\n          images: images\n        });\n        console.log(this.state);\n      }).catch(e => {\n        console.log(\"error while create the person..\");\n      }); //fffff\n    };\n\n    this.sendData = () => {\n      fetch('http://localhost:3000/students', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      }).then(res => res.json()).then(console.log).catch(\"error during send student data to backend\");\n    };\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      id_number: '',\n      faceID: '',\n      password: '',\n      images: []\n    };\n  } //file.files.length === 3\n\n\n  checkThreeImages(file) {\n    if (file.files.length === 3) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"formStudent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"firstName\",\n      placeholder: \"First Name ..\",\n      className: \"form-input mt-4\",\n      name: \"firstName\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Last Name ..\",\n      className: \"form-input mt-4\",\n      name: \"lastName\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"id_number\",\n      placeholder: \"Student ID ..\",\n      className: \"form-input mt-4\",\n      name: \"id_number\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password ..\",\n      className: \"form-input mt-4\",\n      name: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"file\",\n      className: \"form-input mt-4 pointer dim\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, \"Upload your Image\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      className: \"form-file mt-4\",\n      multiple: true,\n      accept: \"image/*\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"submit\",\n      className: \"btn btn-success btn-submit mt-4\",\n      onClick: this.setImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, \"Register\")));\n  }\n\n}\n\nexport default StudentRegister;","map":{"version":3,"sources":["/Users/mhd.sad22/graduation-project/graduation-project/src/components/StudentRegister.js"],"names":["React","Component","StudentRegister","constructor","setImage","e","preventDefault","formStudent","document","getElementById","firstName","value","lastName","password","id_number","file","formdata","FormData","append","files","requestOptions","method","body","redirect","fetch","then","response","text","result","console","log","catch","error","headers","fData","res","json","checkThreeImages","setState","state","createPerson","alert","stName","studentData","JSON","stringify","images","sendData","faceID","length","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,eAAN,SAA8BD,SAA9B,CAAuC;AACnCE,EAAAA,WAAW,GAAE;AACT;;AADS,SAoBbC,QApBa,GAoBHC,CAAD,IAAM;AACXA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAlB;AAEA,UAAIC,SAAS,GAAEH,WAAW,CAACG,SAAZ,CAAsBC,KAArC;AACA,UAAIC,QAAQ,GAAEL,WAAW,CAACK,QAAZ,CAAqBD,KAAnC;AACA,UAAIE,QAAQ,GAAEN,WAAW,CAACM,QAAZ,CAAqBF,KAAnC;AACA,UAAIG,SAAS,GAAEP,WAAW,CAACO,SAAZ,CAAsBH,KAArC;AACA,YAAMI,IAAI,GAACP,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAX,CARW,CAUX;AACA;;AAIA,UAAIO,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,IAAI,CAACI,KAAL,CAAW,CAAX,CAAzB,EAAwC,QAAxC;AACAH,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,IAAI,CAACI,KAAL,CAAW,CAAX,CAAzB,EAAwC,QAAxC;AACAH,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,IAAI,CAACI,KAAL,CAAW,CAAX,CAAzB,EAAwC,QAAxC;AAEA,UAAIC,cAAc,GAAG;AACrBC,QAAAA,MAAM,EAAE,MADa;AAErBC,QAAAA,IAAI,EAAEN,QAFe;AAGrBO,QAAAA,QAAQ,EAAE;AAHW,OAArB;AAMAC,MAAAA,KAAK,CAAC,yBAAD,EAA4BJ,cAA5B,CAAL,CACCK,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAFhB,EAGCG,KAHD,CAGOC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB,CAHhB,EA1BW,CA+BX;AACH;AAEE;AACC;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAGAR,MAAAA,KAAK,CAAC,gCAAD,EAAkC;AACnCH,QAAAA,MAAM,EAAE,MAD2B;AAEnCY,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF0B;AAMnCX,QAAAA,IAAI,EAAEY;AAN6B,OAAlC,CAAL,CAOGT,IAPH,CAOQU,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPf,EAQGX,IARH,CAQQU,GAAG,IAAEN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CARb;;AAWA,UAAGzB,SAAS,IAAIE,QAAb,IAAyBC,QAAzB,IAAqCC,SAArC,IAAiD,KAAKuB,gBAAL,CAAsBtB,IAAtB,CAApD,EAAiF;AAC7E,aAAKuB,QAAL,CAAc;AAAC5B,UAAAA,SAAD;AAAYE,UAAAA,QAAZ;AAAqBC,UAAAA,QAArB;AAA8BC,UAAAA;AAA9B,SAAd,EAAwD,MAAI;AAACe,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKS,KAAjB;AAAwB,SAArF;;AAEJ,YAAI,KAAKF,gBAAL,CAAsBtB,IAAtB,CAAJ,EAAiC;AAC7B,eAAKyB,YAAL,CAAkBzB,IAAlB,EAD6B,CACJ;AACxB;AACJ,OAND,MAOI;AACA0B,QAAAA,KAAK,CAAC,sDAAD,CAAL;AACH;AACJ,KAvFY;;AAAA,SA0FbD,YA1Fa,GA0FCzB,IAAD,IAAQ;AACjB;AAGA,UAAID,SAAS,GAACN,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCE,KAAnD,CAJiB,CAIyC;;AAC1D,UAAI+B,MAAM,GAAGlC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCE,KAAlD;AACA,UAAIgC,WAAW,GAAG;AAAC7B,QAAAA,SAAD;AAAW4B,QAAAA,MAAX;AAAkB3B,QAAAA,IAAI,EAAEA,IAAI,CAACI;AAA7B,OAAlB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAa,kBAAb,EAA+Ba,WAA/B;AACAnB,MAAAA,KAAK,CAAC,oCAAD,EAAsC;AACvCH,QAAAA,MAAM,EAAE,MAD+B;AAEvCY,QAAAA,OAAO,EAAE;AACT,0BAAgB;AADP,SAF8B;AAKvCX,QAAAA,IAAI,EAAEsB,IAAI,CAACC,SAAL,CAAeF,WAAf;AALiC,OAAtC,CAAL,CAMGlB,IANH,CAMQU,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANf,EAOCX,IAPD,CAOMqB,MAAM,IAAE;AACV,aAAKR,QAAL,CAAc;AAACQ,UAAAA,MAAM,EAACA;AAAR,SAAd;AACAjB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKS,KAAjB;AACH,OAVD,EAWCR,KAXD,CAWO1B,CAAC,IAAE;AAACwB,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AAA+C,OAX1D,EARiB,CAmB8C;AAClE,KA9GY;;AAAA,SAmLbiB,QAnLa,GAmLJ,MAAM;AAGXvB,MAAAA,KAAK,CAAC,gCAAD,EAAkC;AACnCH,QAAAA,MAAM,EAAE,MAD2B;AAEnCY,QAAAA,OAAO,EAAE;AACT,0BAAgB;AADP,SAF0B;AAKnCX,QAAAA,IAAI,EAAEsB,IAAI,CAACC,SAAL,CAAe,KAAKN,KAApB;AAL6B,OAAlC,CAAL,CAMGd,IANH,CAMQU,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANf,EAM2BX,IAN3B,CAMgCI,OAAO,CAACC,GANxC,EAM6CC,KAN7C,CAMmD,2CANnD;AASH,KA/LY;;AAET,SAAKQ,KAAL,GAAW;AACP7B,MAAAA,SAAS,EAAG,EADL;AAEPE,MAAAA,QAAQ,EAAG,EAFJ;AAGPE,MAAAA,SAAS,EAAE,EAHJ;AAIPkC,MAAAA,MAAM,EAAC,EAJA;AAKPnC,MAAAA,QAAQ,EAAC,EALF;AAMPiC,MAAAA,MAAM,EAAC;AANA,KAAX;AASH,GAZkC,CAanC;;;AACAT,EAAAA,gBAAgB,CAACtB,IAAD,EAAO;AACnB,QAAIA,IAAI,CAACI,KAAL,CAAW8B,MAAX,KAAsB,CAA1B,EAA4B;AACxB,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AAEH;;AA6KDC,EAAAA,MAAM,GAAE;AACJ,wBACI,uDACA;AAAM,MAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAkC,MAAA,WAAW,EAAC,eAA9C;AAA8D,MAAA,SAAS,EAAC,iBAAxE;AAA0F,MAAA,IAAI,EAAC,WAA/F;AAA2G,MAAA,QAAQ,MAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,cAA/B;AAA8C,MAAA,SAAS,EAAC,iBAAxD;AAA0E,MAAA,IAAI,EAAC,UAA/E;AAA0F,MAAA,QAAQ,MAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAkC,MAAA,WAAW,EAAC,eAA9C;AAA8D,MAAA,SAAS,EAAC,iBAAxE;AAA0F,MAAA,IAAI,EAAC,WAA/F;AAA2G,MAAA,QAAQ,MAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAQI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,WAAW,EAAC,aAAnC;AAAiD,MAAA,SAAS,EAAC,iBAA3D;AAA6E,MAAA,IAAI,EAAC,UAAlF;AAA6F,MAAA,QAAQ,MAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,eAUI;AAAO,MAAA,OAAO,EAAC,MAAf;AAAsB,MAAA,SAAS,EAAC,6BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVJ,eAWI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,MAAtB;AAA6B,MAAA,SAAS,EAAC,gBAAvC;AAAwD,MAAA,QAAQ,MAAhE;AAAiE,MAAA,MAAM,EAAC,SAAxE;AAAmF,MAAA,QAAQ,MAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,eAaI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,EAAE,EAAC,QAAzB;AAAmC,MAAA,SAAS,EAAC,iCAA7C;AAA+E,MAAA,OAAO,EAAE,KAAK9C,QAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,CADA,CADJ;AAoBG;;AAtN4B;;AAwNvC,eAAeF,eAAf","sourcesContent":["import React, { Component } from 'react' ;\n\nclass StudentRegister extends Component{\n    constructor(){\n        super();\n        this.state={\n            firstName : '',\n            lastName : '',\n            id_number: '',\n            faceID:'',\n            password:'',\n            images:[]\n\n        }\n    }\n    //file.files.length === 3\n    checkThreeImages(file) {\n        if (file.files.length === 3){\n            return true ;\n        }\n        return false;\n        \n    }\n    setImage=(e)=> { \n        e.preventDefault();\n        let formStudent = document.getElementById('formStudent');\n\n        let firstName= formStudent.firstName.value;\n        let lastName= formStudent.lastName.value;\n        let password= formStudent.password.value;\n        let id_number= formStudent.id_number.value;\n        const file=document.getElementById(\"file\");\n\n        // var file_data = $(\"#Image\").prop(\"files\")[0];   \n        // let file_data = file.files[0];\n        \n\n\n        var formdata = new FormData();\n        formdata.append(\"image\", file.files[0], \"image1\");\n        formdata.append(\"image\", file.files[1], \"image2\");\n        formdata.append(\"image\", file.files[2], \"image3\");\n\n        var requestOptions = {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n        };\n\n        fetch(\"localhost:3000/testForm\", requestOptions)\n        .then(response => response.text())\n        .then(result => console.log(result))\n        .catch(error => console.log('error', error));\n\n        //const plainFormData = Object.fromEntries(fData.entries());\n\t    //const formDataJsonString = JSON.stringify(plainFormData);\n\n       // console.log(\"form data : \",JSON.stringify(formdata));\n        //console.log(\"form values : \",formdata.values);\n        //for( let x of formdata){\n        //    console.log(x);\n        //} \n\n        // fd.append(\"file\", file_data);\n        // fd.append(\"isFirst\", true);\n        \n        // console.table(file_data);\n\n\n        fetch('http://localhost:3000/testForm',{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                },\n\n            body: fData,\n        }).then(res => res.json())\n          .then(res=>console.log(res));\n\n        \n        if(firstName && lastName && password && id_number&& this.checkThreeImages(file) ){\n            this.setState({firstName, lastName,password,id_number}, ()=>{console.log(this.state)});\n            \n        if (this.checkThreeImages(file)) {\n            this.createPerson(file); //create the first image and add to it the 2 other images \n            }\n        }\n        else{\n            alert(\"you should entere all the fields and three images ..\");\n        }\n    }\n\n\n    createPerson=(file)=>{\n        // check if the name is exist or not ?\n        \n\n        let id_number=document.getElementById('id_number').value; // for check if the student is already registered.\n        let stName = document.getElementById('firstName').value;\n        let studentData = {id_number,stName,file: file.files};\n        console.log(`student data :  `,studentData)\n        fetch('http://localhost:3000/createPerson',{\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(studentData),\n        }).then(res => res.json())\n        .then(images=>{\n            this.setState({images:images});\n            console.log(this.state);  \n        })\n        .catch(e=>{console.log(\"error while create the person..\")});   //fffff\n    }\n\n    //     if(id_number){ //check the id in database.\n\n\n        \n    //     var myHeaders = new Headers();\n    //     myHeaders.append(\"token\", '0ed0d51e90cc4f3ab510a564cfb94b60');\n\n    //     var formdata = new FormData();\n    //     formdata.append(\"name\", stName);\n    //     formdata.append(\"photo\", file.files[0], \"file\");\n    //     formdata.append(\"store\", \"1\");\n\n    //     var requestOptions = {\n    //         method: 'POST',\n    //         headers: myHeaders,\n    //         body: formdata,\n    //         redirect: 'follow'\n    //     };\n\n    //     fetch(\"https://api.luxand.cloud/subject/v2\", requestOptions)\n    //         .then(response => response.json())\n    //         .then(result => {\n    //             let id = result.id; // get the id for add faces to the same person.\n    //             this.setState({faceID:id , images: [result.url]});\n    //             this.addFace(file.files[1],id); //add second and third images to the same person\n    //             this.addFace(file.files[2],id);//add second and third images to the same person\n    //             console.log(result , id);\n    //             //alert .. added successfully\n    //         })\n    //         .catch(error => console.log('error fetching', error));\n    //     }\n    // }\n\n\n\n\n    // //add faces to exist person\n    // addFace=(file,id)=>{\n    //     var myHeaders = new Headers();\n    //     myHeaders.append(\"token\", \"0ed0d51e90cc4f3ab510a564cfb94b60\");\n\n    //     var formdata = new FormData();\n    //     formdata.append(\"photo\", file, \"file\");\n\n    //     var requestOptions = {\n    //         method: 'POST',\n    //         headers: myHeaders,\n    //         body: formdata,\n    //         redirect: 'follow'\n    //     };\n        \n    //     fetch(`https://api.luxand.cloud/subject/${id}`, requestOptions) // id of the person ..\n    //         .then(response => response.json())\n    //         .then(result => {\n    //             let arr = this.state.images;\n    //             arr.push(result.url);\n                \n    //             if(arr.length===3){\n    //                 this.sendData();\n    //             }  \n    //         })\n    //         .catch(error => console.log('error add face fetch', error));\n    // }\n\n    //create new person\n\n    //\n    sendData=() => {\n        \n\n        fetch('http://localhost:3000/students',{\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(this.state),\n        }).then(res => res.json()).then(console.log).catch(\"error during send student data to backend\");\n        \n        \n    }; \n    render(){\n        return(\n            <>\n            <form id=\"formStudent\">\n                <input type=\"text\" id=\"firstName\" placeholder=\"First Name ..\" className=\"form-input mt-4\" name=\"firstName\" required />\n                <br />\n                <input type=\"text\" placeholder=\"Last Name ..\" className=\"form-input mt-4\" name=\"lastName\" required/>\n                <br />\n                <input type=\"text\" id=\"id_number\" placeholder=\"Student ID ..\" className=\"form-input mt-4\" name=\"id_number\" required/>\n                <br />\n                {/* for now it's not used */}\n                <input type=\"password\" placeholder=\"Password ..\" className=\"form-input mt-4\" name=\"password\" required/>\n                <br /> \n                <label htmlFor=\"file\" className=\"form-input mt-4 pointer dim\">Upload your Image</label>\n                <input type=\"file\" id=\"file\" className=\"form-file mt-4\" multiple accept=\"image/*\"  required/>\n                <br />\n                <button type=\"submit\" id='submit'  className=\"btn btn-success btn-submit mt-4\" onClick={this.setImage} >\n                Register\n                </button>\n            </form>\n            </>\n        );}\n}\nexport default StudentRegister ;"]},"metadata":{},"sourceType":"module"}