{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/graduation-project/graduation-project/src/components/StudentRegister.js\";\nimport React, { Component } from 'react';\n\nclass StudentRegister extends Component {\n  constructor() {\n    super();\n\n    this.setImage = e => {\n      e.preventDefault();\n      let formStudent = document.getElementById('formStudent');\n      let firstName = formStudent.firstName.value;\n      let lastName = formStudent.lastName.value;\n      let password = formStudent.password.value;\n      let id_number = formStudent.id_number.value;\n      const file = document.getElementById(\"file\");\n      console.log(file.files);\n\n      if (firstName && lastName && password && id_number && this.checkThreeImages(file)) {\n        this.setState({\n          firstName,\n          lastName,\n          password,\n          id_number\n        }, () => {\n          console.log(this.state);\n        });\n\n        if (this.checkThreeImages(file)) {\n          this.createPerson(file); //create the first image and add to it the 2 other images \n        }\n      } else {\n        alert(\"you should entere all the fields and three images ..\");\n      }\n    };\n\n    this.createPerson = file => {\n      // check if the name is exist or not ?\n      let id_number = document.getElementById('id_number').value; // for check if the student is already registered.\n\n      let stName = document.getElementById('firstName').value;\n\n      if (id_number) {\n        //check the id in database.\n        var myHeaders = new Headers();\n        myHeaders.append(\"token\", '0ed0d51e90cc4f3ab510a564cfb94b60');\n        var formdata = new FormData();\n        formdata.append(\"name\", stName);\n        formdata.append(\"photo\", file.files[0], \"file\");\n        formdata.append(\"store\", \"1\");\n        var requestOptions = {\n          method: 'POST',\n          headers: myHeaders,\n          body: formdata,\n          redirect: 'follow'\n        };\n        fetch(\"https://api.luxand.cloud/subject/v2\", requestOptions).then(response => response.json()).then(result => {\n          let id = result.id; // get the id for add faces to the same person.\n\n          this.setState({\n            faceID: id,\n            images: [result.url]\n          });\n          this.addFace(file.files[1], id); //add second and third images to the same person\n\n          this.addFace(file.files[2], id); //add second and third images to the same person\n\n          console.log(result, id); //alert .. added successfully\n        }).catch(error => console.log('error fetching', error));\n      }\n    };\n\n    this.addFace = (file, id) => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"token\", \"0ed0d51e90cc4f3ab510a564cfb94b60\");\n      var formdata = new FormData();\n      formdata.append(\"photo\", file, \"file\");\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: formdata,\n        redirect: 'follow'\n      };\n      fetch(`https://api.luxand.cloud/subject/${id}`, requestOptions) // id of the person ..\n      .then(response => response.json()).then(result => {\n        let arr = this.state.images;\n        arr.push(result.url);\n        this.setState({\n          images: arr\n        });\n        console.log(this.state);\n\n        if (arr.length === 3) {\n          this.sendData();\n        }\n      }).catch(error => console.log('error add face fetch', error));\n    };\n\n    this.sendData = () => {\n      fetch('http://localhost:3000/students', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      }).then(res => res.json()).then(console.log).catch(\"error during send student data to backend\");\n    };\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      id_number: '',\n      faceID: '',\n      password: '',\n      images: []\n    };\n  } //file.files.length === 3\n\n\n  checkThreeImages(file) {\n    if (file.files.length === 3) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"formStudent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"firstName\",\n      placeholder: \"First Name ..\",\n      className: \"form-input mt-4\",\n      name: \"firstName\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Last Name ..\",\n      className: \"form-input mt-4\",\n      name: \"lastName\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"id_number\",\n      placeholder: \"Student ID ..\",\n      className: \"form-input mt-4\",\n      name: \"id_number\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password ..\",\n      className: \"form-input mt-4\",\n      name: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"file\",\n      className: \"form-input mt-4 pointer dim\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, \"Upload your Image\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      className: \"form-file mt-4\",\n      multiple: true,\n      accept: \"image/*\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"submit\",\n      className: \"btn btn-success btn-submit mt-4\",\n      onClick: this.setImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, \"Register\")));\n  }\n\n}\n\nexport default StudentRegister;","map":{"version":3,"sources":["/Users/mhd.sad22/graduation-project/graduation-project/src/components/StudentRegister.js"],"names":["React","Component","StudentRegister","constructor","setImage","e","preventDefault","formStudent","document","getElementById","firstName","value","lastName","password","id_number","file","console","log","files","checkThreeImages","setState","state","createPerson","alert","stName","myHeaders","Headers","append","formdata","FormData","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","id","faceID","images","url","addFace","catch","error","arr","push","length","sendData","JSON","stringify","res","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react' ;\n\nclass StudentRegister extends Component{\n    constructor(){\n        super();\n        this.state={\n            firstName : '',\n            lastName : '',\n            id_number: '',\n            faceID:'',\n            password:'',\n            images:[]\n\n        }\n    }\n    //file.files.length === 3\n    checkThreeImages(file) {\n        if (file.files.length === 3){\n            return true ;\n        }\n        return false;\n        \n    }\n    setImage=(e)=> { \n        e.preventDefault();\n        let formStudent = document.getElementById('formStudent');\n\n        let firstName= formStudent.firstName.value;\n        let lastName= formStudent.lastName.value;\n        let password= formStudent.password.value;\n        let id_number= formStudent.id_number.value;\n        const file=document.getElementById(\"file\");\n        console.log(file.files);\n        if(firstName && lastName && password && id_number&& this.checkThreeImages(file) ){\n            this.setState({firstName, lastName,password,id_number}, ()=>{console.log(this.state)});\n            \n        if (this.checkThreeImages(file)) {\n            this.createPerson(file); //create the first image and add to it the 2 other images \n            }\n        }\n        else{\n            alert(\"you should entere all the fields and three images ..\");\n        }\n    }\n\n\n    createPerson=(file)=>{\n        // check if the name is exist or not ?\n        let id_number=document.getElementById('id_number').value; // for check if the student is already registered.\n        let stName = document.getElementById('firstName').value;\n\n        if(id_number){ //check the id in database.\n\n\n        \n        var myHeaders = new Headers();\n        myHeaders.append(\"token\", '0ed0d51e90cc4f3ab510a564cfb94b60');\n\n        var formdata = new FormData();\n        formdata.append(\"name\", stName);\n        formdata.append(\"photo\", file.files[0], \"file\");\n        formdata.append(\"store\", \"1\");\n\n        var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: formdata,\n            redirect: 'follow'\n        };\n\n        fetch(\"https://api.luxand.cloud/subject/v2\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                let id = result.id; // get the id for add faces to the same person.\n                this.setState({faceID:id , images: [result.url]});\n                this.addFace(file.files[1],id); //add second and third images to the same person\n                this.addFace(file.files[2],id);//add second and third images to the same person\n                console.log(result , id);\n                //alert .. added successfully\n            })\n            .catch(error => console.log('error fetching', error));\n        }\n    }\n\n\n\n\n    //add faces to exist person\n    addFace=(file,id)=>{\n        var myHeaders = new Headers();\n        myHeaders.append(\"token\", \"0ed0d51e90cc4f3ab510a564cfb94b60\");\n\n        var formdata = new FormData();\n        formdata.append(\"photo\", file, \"file\");\n\n        var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: formdata,\n            redirect: 'follow'\n        };\n        \n        fetch(`https://api.luxand.cloud/subject/${id}`, requestOptions) // id of the person ..\n            .then(response => response.json())\n            .then(result => {\n                let arr = this.state.images;\n                arr.push(result.url);\n                this.setState({images:arr});\n                console.log(this.state);  \n                if(arr.length===3){\n                    this.sendData();\n                }  \n            })\n            .catch(error => console.log('error add face fetch', error));\n    }\n\n    //create new person\n\n    //\n    sendData=() => {\n        \n\n        fetch('http://localhost:3000/students',{\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(this.state),\n        }).then(res => res.json()).then(console.log).catch(\"error during send student data to backend\");\n        \n        \n    }; \n    render(){\n        return(\n            <>\n            <form id=\"formStudent\">\n                <input type=\"text\" id=\"firstName\" placeholder=\"First Name ..\" className=\"form-input mt-4\" name=\"firstName\" required />\n                <br />\n                <input type=\"text\" placeholder=\"Last Name ..\" className=\"form-input mt-4\" name=\"lastName\" required/>\n                <br />\n                <input type=\"text\" id=\"id_number\" placeholder=\"Student ID ..\" className=\"form-input mt-4\" name=\"id_number\" required/>\n                <br />\n                {/* for now it's not used */}\n                <input type=\"password\" placeholder=\"Password ..\" className=\"form-input mt-4\" name=\"password\" required/>\n                <br /> \n                <label htmlFor=\"file\" className=\"form-input mt-4 pointer dim\">Upload your Image</label>\n                <input type=\"file\" id=\"file\" className=\"form-file mt-4\" multiple accept=\"image/*\"  required/>\n                <br />\n                <button type=\"submit\" id='submit'  className=\"btn btn-success btn-submit mt-4\" onClick={this.setImage} >\n                Register\n                </button>\n            </form>\n            </>\n        );}\n}\nexport default StudentRegister ;"]},"metadata":{},"sourceType":"module"}