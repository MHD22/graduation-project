{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/graduation-project/graduation-project/src/components/AddStudents.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Swal from 'sweetalert2';\n\nclass AddStudents extends Component {\n  constructor() {\n    super();\n\n    this.opensweetalert = () => {\n      Swal.fire({\n        title: 'Success',\n        html: '<h5 class=\"text-success\">Class Created Successfully !</h5>',\n        type: 'success',\n        icon: 'success'\n      });\n      this.done();\n    };\n\n    this.addNewClass = e => {\n      let teacherID = JSON.parse(sessionStorage.getItem('teacher')).id_number;\n      let classData = {\n        teacherID,\n        className: this.props.courseName,\n        ids: this.state.addedStdID,\n        fnames: this.state.addedStdFName,\n        lnames: this.state.addedStdLName\n      };\n      let baseUrl = document.getElementById('baseUrl').value;\n      fetch(`${baseUrl}/classes`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(classData)\n      }).then(res => res.json()).then(console.log).then(this.opensweetalert()).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.addStudent = e => {\n      console.log(\"aaaa\");\n      let id = e.target.value;\n      let fname = e.target.getAttribute('data-fname');\n      let lname = e.target.getAttribute('data-lname');\n      let arrIDS = this.state.addedStdID;\n      let arrFN = this.state.addedStdFName;\n      let arrLN = this.state.addedStdLName;\n      let found = arrIDS.indexOf(id);\n\n      if (found === -1) {\n        arrIDS.push(id);\n        arrFN.push(fname);\n        arrLN.push(lname);\n        this.setState({\n          addedStdID: arrIDS,\n          addedStdFName: arrFN,\n          addedStdLName: arrLN\n        });\n      } else {\n        arrIDS.splice(found, 1);\n        arrFN.splice(found, 1);\n        arrLN.splice(found, 1);\n        this.setState({\n          addedStdID: arrIDS,\n          addedStdFName: arrFN,\n          addedStdLName: arrLN\n        });\n        document.getElementById(id + 'label').style.background = \"#343a40\";\n      }\n\n      console.log(this.state.addedStdID, this.state.addedStdFName, this.state.addedStdLName);\n    };\n\n    this.handleFilter = event => {\n      this.setState({\n        search: event.target.value\n      });\n    };\n\n    this.editStudents = () => {\n      console.log(\"added..\");\n      let {\n        addedStdID,\n        addedStdFName,\n        addedStdLName\n      } = this.state;\n      let editArray = addedStdID.map((std, ind) => {\n        return {\n          id: std,\n          name: `${addedStdFName[ind]} ${addedStdLName[ind]}`\n        };\n      });\n      this.props.onAddStd(editArray);\n    };\n\n    this.handleClose = e => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.done = e => {\n      this.setState({\n        route: '/show'\n      });\n    };\n\n    this.state = {\n      students: [],\n      addedStdID: [],\n      addedStdFName: [],\n      addedStdLName: [],\n      search: '',\n      show: false,\n      title: '',\n      body: '',\n      route: null,\n      courseName: ''\n    };\n  }\n\n  componentDidMount() {\n    let baseUrl = document.getElementById('baseUrl').def;\n    let url = `${baseUrl}/students`;\n    fetch(url).then(response => response.json()).then(data => {\n      this.setState({\n        students: data\n      });\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    let filteredArray = this.state.students.filter(std => {\n      return `${std.fname} ${std.lname} ${std.id}`.toLowerCase().includes(this.state.search.toLowerCase());\n    });\n\n    if (this.state.addedStdID.length !== 0) {\n      this.state.addedStdID.forEach(id => {\n        let name = document.getElementById(id + 'label');\n\n        if (name !== null) {\n          name.style.background = \"#004d1a\";\n        }\n      });\n    }\n\n    filteredArray = filteredArray.map((std, i) => {\n      return /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: std.id,\n        id: std.id + 'label',\n        key: std.id,\n        \"data-name\": std.fname,\n        className: \"student\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 20\n        }\n      }, std.fname + ' ' + std.lname + ' | ' + std.id, \" \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        \"data-fname\": std.fname,\n        \"data-lname\": std.lname,\n        value: std.id,\n        id: std.id,\n        onChange: this.addStudent,\n        className: \"check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 168\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.route ? /*#__PURE__*/React.createElement(Redirect, {\n      to: this.state.route,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"main-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, \"Add Student\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-students\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"search\",\n      onChange: this.handleFilter,\n      type: \"search\",\n      placeholder: \"search on students\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cont-cont\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"students p-3\",\n      id: \"students\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, filteredArray))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"submit\",\n      className: \"btn f3 grow btn-success btn-submit\",\n      onClick: this.props.createNew ? this.addNewClass : this.editStudents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, \"Done\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 36\n      }\n    }));\n  }\n\n}\n\nexport default AddStudents;","map":{"version":3,"sources":["/Users/mhd.sad22/graduation-project/graduation-project/src/components/AddStudents.js"],"names":["React","Component","Redirect","Swal","AddStudents","constructor","opensweetalert","fire","title","html","type","icon","done","addNewClass","e","teacherID","JSON","parse","sessionStorage","getItem","id_number","classData","className","props","courseName","ids","state","addedStdID","fnames","addedStdFName","lnames","addedStdLName","baseUrl","document","getElementById","value","fetch","method","headers","body","stringify","then","res","json","console","log","catch","addStudent","id","target","fname","getAttribute","lname","arrIDS","arrFN","arrLN","found","indexOf","push","setState","splice","style","background","handleFilter","event","search","editStudents","editArray","map","std","ind","name","onAddStd","handleClose","show","route","students","componentDidMount","def","url","response","data","render","filteredArray","filter","toLowerCase","includes","length","forEach","i","createNew"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Swal from 'sweetalert2' ;\n\nclass AddStudents extends Component {\n    constructor() {\n        super();\n        this.state = {\n            students: [],\n            addedStdID: [],\n            addedStdFName: [],\n            addedStdLName: [],\n            search: '',\n            show: false,\n            title: '',\n            body: '',\n            route: null,\n            courseName: ''\n        }\n    }\n    componentDidMount() {\n        let baseUrl= document.getElementById('baseUrl').def;\n        let url = `${baseUrl}/students`;\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({ students: data });\n            })\n\n        console.log(this.state)\n    }\n\n    opensweetalert = () => {\n        Swal.fire({\n        title: 'Success',\n        html: '<h5 class=\"text-success\">Class Created Successfully !</h5>',\n        type: 'success',\n        icon: 'success'\n        })\n        this.done() ;\n    }\n\n    addNewClass = (e) => {\n        let teacherID = JSON.parse(sessionStorage.getItem('teacher')).id_number;\n        let classData = {\n            teacherID,\n            className: this.props.courseName,\n            ids: this.state.addedStdID,\n            fnames: this.state.addedStdFName,\n            lnames: this.state.addedStdLName\n        };\n        let baseUrl= document.getElementById('baseUrl').value;\n        fetch(`${baseUrl}/classes`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(classData),\n        })\n            .then(res => res.json())\n            .then(console.log)\n            .then(\n                this.opensweetalert() \n            )\n            .catch(\n                e => { console.log(e) }\n            );\n    }\n\n    addStudent = (e) => {\n        console.log(\"aaaa\")\n        let id = e.target.value;\n        let fname = e.target.getAttribute('data-fname');\n        let lname = e.target.getAttribute('data-lname');\n        let arrIDS = this.state.addedStdID;\n        let arrFN = this.state.addedStdFName;\n        let arrLN = this.state.addedStdLName;\n        let found = arrIDS.indexOf(id);\n        if (found === -1) {\n            arrIDS.push(id);\n            arrFN.push(fname);\n            arrLN.push(lname);\n\n            this.setState({\n                addedStdID: arrIDS,\n                addedStdFName: arrFN,\n                addedStdLName: arrLN,\n            });\n        }\n        else {\n            arrIDS.splice(found, 1);\n            arrFN.splice(found, 1);\n            arrLN.splice(found, 1);\n            this.setState({\n                addedStdID: arrIDS,\n                addedStdFName: arrFN,\n                addedStdLName: arrLN\n            });\n\n            document.getElementById(id + 'label').style.background = \"#343a40\";\n        }\n        console.log(this.state.addedStdID, this.state.addedStdFName, this.state.addedStdLName);\n    }\n\n    handleFilter = (event) => {\n        this.setState({ search: event.target.value });\n    }\n    editStudents = () => {\n        console.log(\"added..\")\n        let { addedStdID, addedStdFName, addedStdLName } = this.state;\n        let editArray = addedStdID.map((std, ind) => {\n            return { id: std, name: `${addedStdFName[ind]} ${addedStdLName[ind]}` };\n        })\n        this.props.onAddStd(editArray);\n    }\n\n    handleClose = (e) => {\n        this.setState({\n            show: false\n        });\n    }\n\n    done = (e) => {\n        this.setState({\n            route: '/show'\n        });\n    }\n\n    render() {\n\n        let filteredArray = this.state.students.filter((std) => {\n            return (`${std.fname} ${std.lname} ${std.id}`).toLowerCase().includes(this.state.search.toLowerCase());\n        });\n        if (this.state.addedStdID.length !== 0) {\n\n            this.state.addedStdID.forEach((id) => {\n                let name = document.getElementById(id + 'label');\n                if (name !== null) {\n                    name.style.background = \"#004d1a\";\n                }\n\n            })\n        }\n        filteredArray = filteredArray.map((std, i) => {\n            return <label htmlFor={std.id} id={std.id + 'label'} key={std.id} data-name={std.fname} className=\"student\">{std.fname + ' ' + std.lname + ' | ' + std.id} <input type=\"checkbox\" data-fname={std.fname} data-lname={std.lname} value={std.id} id={std.id} onChange={this.addStudent} className=\"check\" /></label>\n        })\n\n\n\n        return (\n            <>\n                {this.state.route ? <Redirect to={this.state.route} /> : null}\n                <h1 className=\"main-title\">Add Student</h1>\n                <div className=\"container-students\">\n                    <input className=\"search\" onChange={this.handleFilter} type=\"search\" placeholder=\"search on students\" />\n                    <div className=\"cont-cont\">\n                        <div className=\"students p-3\" id=\"students\">\n                            {filteredArray}\n                        </div>\n                    </div>\n                </div>\n                <br />\n                <button id='submit' className=\"btn f3 grow btn-success btn-submit\"\n                    onClick={\n                        this.props.createNew ?\n                            this.addNewClass\n                            :\n                            this.editStudents\n                    }>Done</button><br />\n            </>\n        )\n    }\n}\nexport default AddStudents;"]},"metadata":{},"sourceType":"module"}