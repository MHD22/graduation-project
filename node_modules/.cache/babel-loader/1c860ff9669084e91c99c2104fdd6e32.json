{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/graduation-project/graduation-project/src/components/CreateClass.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport './CreateClass.css';\n\nclass CreateClass extends Component {\n  constructor() {\n    super();\n\n    this.next = e => {\n      this.setState({\n        isClickedNext: true\n      });\n    };\n\n    this.handleFilter = event => {\n      this.setState({\n        search: event.target.value\n      });\n      console.log(this.state.search);\n    };\n\n    this.addStudent = e => {\n      let id = e.target.value;\n      let fname = e.target.getAttribute('data-fname');\n      let lname = e.target.getAttribute('data-lname');\n      let arrIDS = this.state.addedStdID;\n      let arrFN = this.state.addedStdFName;\n      let arrLN = this.state.addedStdLName;\n      let found = arrIDS.indexOf(id);\n\n      if (found === -1) {\n        arrIDS.push(id);\n        arrFN.push(fname);\n        arrLN.push(lname); // document.getElementById(id + 'label').style.background = \"#004d1a\";\n\n        this.setState({\n          addedStdID: arrIDS,\n          addedStdFName: arrFN,\n          addedStdLName: arrLN\n        });\n      } else {\n        arrIDS.splice(found, 1);\n        arrFN.splice(found, 1);\n        arrLN.splice(found, 1);\n        this.setState({\n          addStudent: arrIDS,\n          addedStdFName: arrFN,\n          addedStdLName: arrLN\n        });\n        document.getElementById(id + 'label').style.background = \"#343a40\";\n      }\n\n      console.log(this.state.addedStdID, this.state.addedStdFName, this.state.addedStdLName);\n    };\n\n    this.courseName = e => {\n      let cName = e.target.value;\n      console.log(cName);\n      this.setState({\n        courseName: cName\n      });\n    };\n\n    this.addNewClass = e => {\n      console.log(this.state.students);\n      fetch('http://localhost:3000/classes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          className: this.state.courseName,\n          ids: this.state.addedStdID,\n          fnames: this.state.addedStdFName,\n          lnames: this.state.addedStdLName\n        })\n      }).then(res => res.json()).then(console.log).catch(e => {\n        console.log(\"error during send classes data to backend\");\n      });\n    };\n\n    this.state = {\n      isClickedNext: false,\n      image: null,\n      url: '',\n      students: [],\n      search: '',\n      addedStdID: [],\n      addedStdFName: [],\n      addedStdLName: [],\n      courseName: ''\n    };\n  } //for hide class name input and show the add new student and done \n\n\n  componentDidMount() {\n    fetch('http://localhost:3000/students').then(res => res.json()).then(data => {\n      this.setState({\n        students: data\n      }, () => {\n        console.log(this.state.students);\n      });\n    }).catch(e => console.log(e));\n  }\n\n  render() {\n    const {\n      isClickedNext\n    } = this.state;\n    let filteredArray = this.state.students.filter(std => {\n      return `${std.fname} ${std.lname} ${std.id}`.toLowerCase().includes(this.state.search.toLowerCase());\n    });\n\n    if (this.state.addedStdID.length !== 0) {\n      this.state.addedStdID.forEach(id => {\n        let name = document.getElementById(id + 'label');\n\n        if (name !== null) {\n          name.style.background = \"#004d1a\";\n        }\n      });\n    }\n\n    filteredArray = filteredArray.map((std, i) => {\n      return /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: std.id,\n        id: std.id + 'label',\n        key: std.id,\n        \"data-name\": std.fname,\n        className: \"student\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 16\n        }\n      }, std.fname + ' ' + std.lname + ' | ' + std.id, \" \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        \"data-fname\": std.fname,\n        \"data-lname\": std.lname,\n        value: std.id,\n        id: std.id,\n        onChange: this.addStudent,\n        className: \"check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 164\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3 bg-black-10 shadow-5 p-5 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, isClickedNext === false ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"main-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, \"Add Class\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Class Name\",\n      onChange: this.courseName,\n      className: \"form-input mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.next,\n      id: \"submit\",\n      className: \"btn f3 grow btn-success btn-submit mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, \"Next\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"main-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, \"Add Student\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-students\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"search\",\n      onChange: this.handleFilter,\n      type: \"search\",\n      placeholder: \"search on students\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cont-cont\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"students p-3\",\n      id: \"students\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }, filteredArray))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      id: \"submit\",\n      className: \"btn f3 grow btn-success btn-submit\",\n      onClick: this.addNewClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, \"Done\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 136\n      }\n    }))));\n  }\n\n}\n\nexport default CreateClass;","map":{"version":3,"sources":["/Users/mhd.sad22/graduation-project/graduation-project/src/components/CreateClass.js"],"names":["React","Component","Button","CreateClass","constructor","next","e","setState","isClickedNext","handleFilter","event","search","target","value","console","log","state","addStudent","id","fname","getAttribute","lname","arrIDS","addedStdID","arrFN","addedStdFName","arrLN","addedStdLName","found","indexOf","push","splice","document","getElementById","style","background","courseName","cName","addNewClass","students","fetch","method","headers","body","JSON","stringify","className","ids","fnames","lnames","then","res","json","catch","image","url","componentDidMount","data","render","filteredArray","filter","std","toLowerCase","includes","length","forEach","name","map","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport './CreateClass.css';\n\nclass CreateClass extends Component {\n    constructor() {\n        super();\n        this.state = {\n            isClickedNext: false,\n            image: null,\n            url: '',\n            students:[],\n            search:'' ,\n            addedStdID : [] ,\n            addedStdFName : [] ,\n            addedStdLName : [] ,\n            courseName : ''\n        }\n    }\n\n    //for hide class name input and show the add new student and done \n    next = (e) => {\n        this.setState({ isClickedNext: true});\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:3000/students')\n        .then(res=> res.json()).then(data=>{\n            this.setState({students:data} , ()=>{console.log(this.state.students)});\n        })\n        .catch(e=>console.log(e));\n    }\n\n    handleFilter=(event)=>{\n        this.setState({search:event.target.value});\n        console.log(this.state.search);\n    }\n\n    //Add the select student to the state .\n    addStudent = (e) => {\n        let id = e.target.value ;\n        let fname = e.target.getAttribute('data-fname') ;\n        let lname = e.target.getAttribute('data-lname') ;\n        let arrIDS= this.state.addedStdID;\n        let arrFN= this.state.addedStdFName ;\n        let arrLN = this.state.addedStdLName ;\n        let found = arrIDS.indexOf(id) ;\n        if(found === -1){\n            arrIDS.push(id) ;\n            arrFN.push(fname) ;\n            arrLN.push(lname) ;\n            // document.getElementById(id + 'label').style.background = \"#004d1a\";\n            this.setState({\n                addedStdID : arrIDS,\n                addedStdFName : arrFN,\n                addedStdLName : arrLN ,\n            }) ;\n        }\n        else {\n            arrIDS.splice(found, 1);\n            arrFN.splice(found, 1);\n            arrLN.splice(found, 1);\n            this.setState({addStudent: arrIDS, addedStdFName : arrFN, addedStdLName : arrLN});\n            \n            document.getElementById(id + 'label').style.background = \"#343a40\";\n        }\n        console.log(this.state.addedStdID , this.state.addedStdFName , this.state.addedStdLName) ;\n    }\n\n    courseName = (e) => {\n        let cName = e.target.value ;\n        console.log(cName) ;\n        this.setState({\n            courseName : cName\n        })\n    }\n\n    //Sende the students ids to the backend\n    addNewClass = (e) => {\n        console.log(this.state.students);\n        fetch('http://localhost:3000/classes',{\n           method: 'POST',\n           headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            className:this.state.courseName,\n            ids:this.state.addedStdID ,\n            fnames : this.state.addedStdFName ,\n            lnames : this.state.addedStdLName\n          }),\n       }).then(res => res.json()).then(console.log).catch(e=>{console.log(\"error during send classes data to backend\")});\n       \n    }\n\n    render() {\n        const { isClickedNext } = this.state;\n        let filteredArray = this.state.students.filter( (std)=>{\n            return (`${std.fname} ${std.lname} ${std.id}`).toLowerCase().includes(this.state.search.toLowerCase());\n        });\n        if (this.state.addedStdID.length !== 0){\n        \n        this.state.addedStdID.forEach((id) => {\n            let name = document.getElementById(id + 'label') ;\n            if(name !== null){\n            name.style.background = \"#004d1a\";\n            }\n            \n        })\n    }\n        filteredArray = filteredArray.map((std , i)=>{\n        return <label htmlFor={std.id} id={std.id + 'label'} key={std.id} data-name={std.fname} className=\"student\">{std.fname + ' ' + std.lname + ' | ' + std.id} <input type=\"checkbox\" data-fname={std.fname} data-lname={std.lname} value={std.id} id={std.id} onChange={this.addStudent} className=\"check\"/></label>\n    })\n      \n        return (\n            <>\n                <div className=\"mt-3 bg-black-10 shadow-5 p-5 \">\n                    {isClickedNext === false ? \n                    <>\n                        <h1 className=\"main-title\">Add Class</h1>\n                        <input type=\"text\" placeholder=\"Class Name\" onChange={this.courseName} className=\"form-input mt-4\" />\n                        <br />\n                        <Button onClick={this.next} id='submit' className=\"btn f3 grow btn-success btn-submit mt-4\">Next</Button>\n                    </>\n                        :\n                    <>\n                            <h1 className=\"main-title\">Add Student</h1>\n                            <div className= \"container-students\">\n                                <input className=\"search\" onChange={this.handleFilter} type=\"search\" placeholder=\"search on students\"/>\n                                <div className=\"cont-cont\">\n                                    <div className=\"students p-3\" id=\"students\">\n                                            {filteredArray}\n                                    </div>\n                                </div>\n                            </div>\n                            <br />\n                            <Button id='submit' className=\"btn f3 grow btn-success btn-submit\" onClick={this.addNewClass}>Done</Button><br />\n                    </>}\n                </div>\n            </>);\n    }\n}\n\nexport default CreateClass;\n\n\n\n"]},"metadata":{},"sourceType":"module"}