{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/graduation-project/graduation-project/src/components/TeacherRegister.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport Swal from 'sweetalert2';\n\nclass TeacherRegister extends Component {\n  constructor() {\n    super();\n\n    this.newTeacher = e => {\n      e.preventDefault();\n      let formTeacher = document.getElementById('formTeacher');\n      let teacherData = {\n        firstName: formTeacher.fname.value,\n        lastName: formTeacher.lname.value,\n        email: formTeacher.email.value,\n        password: formTeacher.tpassword.value,\n        id_number: formTeacher.t_id.value\n      };\n      this.setState({\n        teacherData\n      }); // this.clearForm() ;\n\n      let pattern = /^\\d*[A-Za-z]+\\w*@zu.edu.jo$/ig;\n      let regex = pattern.test(teacherData.email); // let regex = true;\n\n      if (regex) {\n        if (teacherData.firstName && teacherData.lastName && teacherData.password && teacherData.id_number && teacherData.email) {\n          this.storeTeacherDataInDB(teacherData);\n        } else {\n          Swal.fire({\n            icon: 'warning',\n            title: 'Hmmm ..',\n            html: '<h5 class=\"text-warning font-lobster mt-2\">All fields are required</h5>'\n          });\n        }\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops..',\n          html: '<h5 class=\"text-warning font-lobster mt-2\">Email is not valid!</h5>'\n        });\n      }\n    };\n\n    this.storeTeacherDataInDB = teacherData => {\n      let {\n        email,\n        id_number\n      } = teacherData;\n      let bodyData = {\n        email,\n        id_number\n      };\n      let baseUrl = document.getElementById('baseUrl').defaultValue;\n      fetch(`${baseUrl}/teachers`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyData)\n      }).then(res => res.json()).then(res => {\n        if (res === 'Teacher Is Already Exist.') {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops ...',\n            html: '<h5 class=\"text-danger font-lobster mt-2\">Teacher Email or ID is already exist</h5>'\n          });\n        } else {\n          let start = res.indexOf('token:'); //5\n\n          if (start !== -1) {\n            let hashedToken = res.slice(6);\n            this.setState({\n              hashedToken\n            });\n            Swal.fire({\n              title: '<h3 class=\"font-acme\">Enter the verification code sent to your email :</3>',\n              icon: 'question',\n              iconHtml: 'ØŸ',\n              html: '<input type=\"text\" id=\"token\" class=\"form-control text-center\" placeholder=\"Verification Code\" name=\"token\"/>'\n            }).then(() => {\n              this.saveTeacher();\n            });\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops ...',\n              html: '<h5 class=\"text-danger font-lobster mt-2\">Something wrong , pleaase try again later</h5>'\n            });\n          }\n        }\n      }).catch(\"error during send Teacher data to backend\");\n    };\n\n    this.clearForm = () => {\n      document.getElementById('fname').value = \"\";\n      document.getElementById('lname').value = \"\";\n      document.getElementById('t_id').value = \"\";\n      document.getElementById('tpassword').value = \"\";\n    };\n\n    this.handleClose = e => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.done = e => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.saveTeacher = () => {\n      console.log(\"Hello world!!\");\n      let token = document.getElementById('token').value;\n\n      if (token) {\n        let teacherData = Object.assign({}, this.state.teacherData);\n        let {\n          hashedToken\n        } = this.state;\n        teacherData.hashedToken = hashedToken;\n        teacherData.token = token;\n        console.log(teacherData, \" <= teacher data.  \");\n        let baseUrl = document.getElementById('baseUrl').defaultValue;\n        fetch(`${baseUrl}/teacherRegister`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(teacherData)\n        }).then(res => res.json()).then(res => {\n          if (res === 'Teacher Added Successfully') {\n            Swal.fire({\n              icon: 'success',\n              title: 'Success',\n              html: '<h5 class=\"text-success font-lobster mt-2\">Teacher Added Successfully</h5>'\n            });\n            this.storedUserInSession(this.state.teacherData);\n            setTimeout(() => {\n              this.goToHomePage();\n            }, 2000);\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops ..!',\n              html: '<h5 class=\"text-danger font-lobster mt-2\">Invalid Token</h5>'\n            });\n          }\n        }).catch(e => {\n          console.log(\"error when storing teacher data with the tokens.\", e);\n        });\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops ..!',\n          html: '<h5 class=\"text-danger font-lobster mt-2\">Invalid Token</h5>'\n        });\n      }\n    };\n\n    this.storedUserInSession = userData => {\n      const {\n        firstName,\n        lastName,\n        id_number\n      } = userData;\n      const storedData = {\n        firstName,\n        lastName,\n        id_number\n      };\n      sessionStorage.setItem('teacher', JSON.stringify(storedData));\n    };\n\n    this.goToHomePage = () => {\n      window.location.replace(\"http://localhost:3000\");\n    };\n\n    this.checkMail = e => {\n      let pattern = /^\\d*[A-Za-z]+\\w*@zu.edu.jo$/ig;\n      let regex = pattern.test(e.target.value);\n\n      if (regex) {\n        this.setState({\n          showTrueSignE: true,\n          showFalseSignE: false\n        });\n      } else {\n        this.setState({\n          showTrueSignE: false,\n          showFalseSignE: true\n        });\n      }\n    };\n\n    this.state = {\n      verified: false,\n      teacherData: {},\n      hashedToken: '',\n      route: null,\n      showTrueSignE: false,\n      showFalseSignE: false\n    };\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"formTeacher\",\n      hidden: this.state.verified,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"fname\",\n      id: \"fname\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"lname\",\n      id: \"lname\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, \"ID Number\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"t_id\",\n      id: \"t_id\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, \"E-MAIL\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      id: \"email\",\n      type: \"email\",\n      onChange: this.checkMail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"spanSign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      hidden: !this.state.showFalseSignE,\n      className: \" fas fa-exclamation errorSign \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      hidden: !this.state.showTrueSignE,\n      className: \"far fa-check-circle checkSign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 137\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, \"PASSWORD\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"tpassword\",\n      id: \"tpassword\",\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"mt4 my-button\",\n      onClick: this.newTeacher,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, \"Sign Up\")));\n  }\n\n}\n\nexport default TeacherRegister;","map":{"version":3,"sources":["/Users/mhd.sad22/graduation-project/graduation-project/src/components/TeacherRegister.js"],"names":["React","Component","Redirect","Swal","TeacherRegister","constructor","newTeacher","e","preventDefault","formTeacher","document","getElementById","teacherData","firstName","fname","value","lastName","lname","email","password","tpassword","id_number","t_id","setState","pattern","regex","test","storeTeacherDataInDB","fire","icon","title","html","bodyData","baseUrl","defaultValue","fetch","method","headers","body","JSON","stringify","then","res","json","start","indexOf","hashedToken","slice","iconHtml","saveTeacher","catch","clearForm","handleClose","show","done","redirect","console","log","token","Object","assign","state","storedUserInSession","setTimeout","goToHomePage","userData","storedData","sessionStorage","setItem","window","location","replace","checkMail","target","showTrueSignE","showFalseSignE","verified","route","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport Swal from 'sweetalert2';\n\nclass TeacherRegister extends Component {\n    constructor() {\n        super();\n        this.state = {\n            verified: false,\n            teacherData: {},\n            hashedToken: '',\n            route: null,\n            showTrueSignE:false,\n            showFalseSignE:false,\n\n        }\n    }\n    newTeacher = (e) => {\n        e.preventDefault();\n        let formTeacher = document.getElementById('formTeacher');\n        let teacherData = {\n            firstName: formTeacher.fname.value,\n            lastName: formTeacher.lname.value,\n            email: formTeacher.email.value,\n            password: formTeacher.tpassword.value,\n            id_number: formTeacher.t_id.value,\n        }\n        this.setState({ teacherData });\n\n        // this.clearForm() ;\n\n        let pattern = /^\\d*[A-Za-z]+\\w*@zu.edu.jo$/ig;\n        let regex = pattern.test(teacherData.email) ;\n        // let regex = true;\n        if(regex){\n            if (teacherData.firstName && teacherData.lastName && teacherData.password && teacherData.id_number && teacherData.email) {\n                this.storeTeacherDataInDB(teacherData);\n            }\n            else {\n                Swal.fire({\n                    icon: 'warning',\n                    title: 'Hmmm ..',\n                    html: '<h5 class=\"text-warning font-lobster mt-2\">All fields are required</h5>',\n                })\n            }\n        }\n        else {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops..',\n                html: '<h5 class=\"text-warning font-lobster mt-2\">Email is not valid!</h5>',\n            })\n        }\n    }\n\n    storeTeacherDataInDB = (teacherData) => {\n        let { email, id_number } = teacherData;\n        let bodyData = { email, id_number };\n        let baseUrl = document.getElementById('baseUrl').defaultValue;\n        fetch(`${baseUrl}/teachers`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(bodyData),\n        })\n            .then(res => res.json())\n            .then(res => {\n\n                if (res === 'Teacher Is Already Exist.') {\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Oops ...',\n                        html: '<h5 class=\"text-danger font-lobster mt-2\">Teacher Email or ID is already exist</h5>',\n                    })\n                }\n                else {\n                    let start = res.indexOf('token:'); //5\n                    if (start !== -1) {\n                        let hashedToken = res.slice(6);\n                        this.setState({ hashedToken });\n                        Swal.fire({\n                            title: '<h3 class=\"font-acme\">Enter the verification code sent to your email :</3>',\n                            icon: 'question',\n                            iconHtml: 'ØŸ',\n                            html: '<input type=\"text\" id=\"token\" class=\"form-control text-center\" placeholder=\"Verification Code\" name=\"token\"/>',\n                        }).then(() => {\n                            this.saveTeacher();\n                        });\n                    }\n                    else {\n                        Swal.fire({\n                            icon: 'error',\n                            title: 'Oops ...',\n                            html: '<h5 class=\"text-danger font-lobster mt-2\">Something wrong , pleaase try again later</h5>',\n                        })\n                    }\n                }\n            })\n            .catch(\"error during send Teacher data to backend\");\n    };\n\n    clearForm = () => {\n        document.getElementById('fname').value = \"\";\n        document.getElementById('lname').value = \"\";\n        document.getElementById('t_id').value = \"\";\n        document.getElementById('tpassword').value = \"\";\n    }\n\n    handleClose = (e) => {\n        this.setState({\n            show: false\n        });\n    }\n\n    done = (e) => {\n        this.setState({\n            redirect: true\n        });\n    }\n    saveTeacher = () => {\n        console.log(\"Hello world!!\");\n        let token = document.getElementById('token').value;\n        if (token) {\n            let teacherData = Object.assign({}, this.state.teacherData);\n            let { hashedToken } = this.state;\n            teacherData.hashedToken = hashedToken;\n            teacherData.token = token;\n            console.log(teacherData, \" <= teacher data.  \");\n            let baseUrl = document.getElementById('baseUrl').defaultValue;\n            fetch(`${baseUrl}/teacherRegister`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(teacherData),\n            })\n                .then(res => res.json())\n                .then(res => {\n                    if (res === 'Teacher Added Successfully') {\n                        Swal.fire({\n                            icon: 'success',\n                            title: 'Success',\n                            html: '<h5 class=\"text-success font-lobster mt-2\">Teacher Added Successfully</h5>',\n                        })\n                        this.storedUserInSession(this.state.teacherData);\n                        setTimeout(() => {\n                            this.goToHomePage();\n                        }, 2000);\n                    }\n                    else {\n                        Swal.fire({\n                            icon: 'error',\n                            title: 'Oops ..!',\n                            html: '<h5 class=\"text-danger font-lobster mt-2\">Invalid Token</h5>',\n                        })\n                    }\n                })\n                .catch(e => { console.log(\"error when storing teacher data with the tokens.\", e) });\n        }\n        else {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops ..!',\n                html: '<h5 class=\"text-danger font-lobster mt-2\">Invalid Token</h5>',\n            })\n        }\n    }\n    storedUserInSession = (userData) => {\n        const { firstName, lastName, id_number } = userData;\n        const storedData = { firstName, lastName, id_number };\n        sessionStorage.setItem('teacher', JSON.stringify(storedData));\n    }\n    goToHomePage = () => {\n        window.location.replace(\"http://localhost:3000\");\n    }\n\n    checkMail =(e)=>{\n\n        let pattern = /^\\d*[A-Za-z]+\\w*@zu.edu.jo$/ig;\n        let regex = pattern.test(e.target.value) ;\n        if(regex){this.setState({showTrueSignE:true , showFalseSignE:false});\n        }\n        else{\n        this.setState({showTrueSignE:false , showFalseSignE:true});\n        }\n        \n    }\n\n    render() {\n\n        if (this.state.redirect) {\n            return <Redirect to='/' />;\n        }\n\n        return (\n            <>\n                <form id=\"formTeacher\" hidden={this.state.verified}>\n\n                    <label>First Name</label>\n                    <input name=\"fname\" id=\"fname\" type=\"text\" />\n\n                    <label>Last Name</label>\n                    <input name=\"lname\" id=\"lname\" type=\"text\" />\n\n                    <label>ID Number</label>\n                    <input name=\"t_id\" id=\"t_id\" type=\"text\" />\n\n                    <label>E-MAIL</label>\n                    \n                    <input name=\"email\" id=\"email\" type=\"email\" onChange={this.checkMail} />\n                    <span className=\"spanSign\" ><i hidden={ ! this.state.showFalseSignE} className=\" fas fa-exclamation errorSign \"></i><i hidden={ ! this.state.showTrueSignE} className=\"far fa-check-circle checkSign\"></i></span>\n\n                    <label>PASSWORD</label>\n                    <input name=\"tpassword\" id=\"tpassword\" type=\"password\" />\n\n                    <button className=\"mt4 my-button\" onClick={this.newTeacher} >Sign Up</button>\n\n                </form>\n\n\n\n\n\n            </>\n        );\n    }\n}\nexport default TeacherRegister;"]},"metadata":{},"sourceType":"module"}