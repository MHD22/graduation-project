{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/graduation-project/graduation-project/src/components/EditClass.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport AddStudents from './AddStudents';\nimport Swal from 'sweetalert2';\n\nclass EditClass extends Component {\n  constructor() {\n    super();\n\n    this.renderTable = students => {\n      let rows = students.map(std => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          id: `r${std.id}`,\n          key: std.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }\n        }, std.id), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }\n        }, std.name), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.deleteStd(std.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }\n        }, \"X\")));\n      });\n      this.setState({\n        rows\n      });\n    };\n\n    this.deleteStd = id => {\n      Swal.fire({\n        title: 'Are you sure?',\n        text: 'User will have Admin Privileges',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes!'\n      }).then(result => {\n        if (result.value) {\n          let changedList = [].concat(this.state.lastStateOfStudents);\n          let lastStateOfStudents = changedList.length ? changedList : [].concat(this.state.students);\n          lastStateOfStudents = lastStateOfStudents.filter(std => {\n            return std.id !== id;\n          });\n          let rows = this.state.rows;\n          rows = rows.filter(std => std.key !== id);\n          this.setState({\n            rows,\n            isThereChanges: true,\n            lastStateOfStudents\n          });\n        }\n      });\n    };\n\n    this.addStd = arr => {\n      let changedList = [].concat(this.state.lastStateOfStudents);\n      let lastStateOfStudents = changedList.length ? changedList : [].concat(this.state.students);\n      let idsOfCurrentStudents = lastStateOfStudents.map(obj => obj.id).join(' ');\n      let isThereChanges = this.state.isThereChanges;\n      arr.forEach(std => {\n        if (!idsOfCurrentStudents.includes(std.id)) {\n          lastStateOfStudents.push(std);\n          this.renderTable(lastStateOfStudents);\n          isThereChanges = true;\n        }\n      });\n      this.setState({\n        clickedAdd: false,\n        isThereChanges,\n        lastStateOfStudents\n      });\n    };\n\n    this.onAddStd = () => {\n      this.setState({\n        clickedAdd: true\n      });\n    };\n\n    this.onDeleteClass = () => {\n      Swal.fire({\n        title: 'Are you sure?',\n        text: 'User will have Admin Privileges',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes!'\n      }).then(result => {\n        if (result.value) {\n          let classData = {\n            className: this.props.classInfo.className\n          };\n          let url = 'http://localhost:3000/deleteClass';\n          let requestOptions = {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(classData)\n          };\n          fetch(url, requestOptions).then(res => res.json()).then(console.log).catch(e => {\n            console.log(\"error on Delete class request..\", e);\n          });\n          this.setState({\n            route: '/'\n          });\n        }\n      });\n    };\n\n    this.onConfirm = () => {\n      Swal.fire({\n        title: 'Are you sure?',\n        text: 'User will have Admin Privileges',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes!'\n      }).then(result => {\n        if (result.value) {\n          let classData = {\n            className: this.props.classInfo.className,\n            students: this.state.lastStateOfStudents\n          };\n          let url = 'http://localhost:3000/editClass';\n          let requestOptions = {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(classData)\n          };\n          fetch(url, requestOptions).then(res => res.json()).then(console.log).catch(e => {\n            console.log(\"error on edit class request..\", e);\n          });\n          this.setState({\n            isThereChanges: false,\n            lastStateOfStudents: [],\n            route: '/'\n          });\n        }\n      });\n    };\n\n    this.onCancel = () => {\n      this.renderTable(this.state.students);\n      this.setState({\n        isThereChanges: false,\n        lastStateOfStudents: []\n      });\n    };\n\n    this.back = () => {\n      this.setState({\n        route: '/show'\n      });\n    };\n\n    this.state = {\n      rows: [],\n      clickedAdd: false,\n      isThereChanges: false,\n      students: [],\n      lastStateOfStudents: [],\n      route: null\n    };\n  }\n\n  componentDidMount() {\n    let students = [].concat(this.props.classInfo.students);\n    this.renderTable(students);\n    this.setState({\n      students\n    });\n  }\n\n  render() {\n    let {\n      rows\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.route ? /*#__PURE__*/React.createElement(Redirect, {\n      to: this.state.route,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 36\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"mt-2 grow pointer\",\n      onClick: this.back,\n      src: \"https://img.icons8.com/fluent/48/000000/circled-left.png\",\n      alt: \"go back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"f2 mt4 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, this.props.classInfo.className), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered mt5\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"text-dark\",\n      style: {\n        fontFamily: 'Lobster',\n        letterSpacing: '2px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }, \"Student ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }\n    }, \"Student Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 33\n      }\n    }, \"Delete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      id: \"body\",\n      style: {\n        fontFamily: 'Acme',\n        color: 'gray'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }, rows))), !this.state.clickedAdd && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn f3 grow btn-warning br4 shadow\",\n      onClick: this.onAddStd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 47\n      }\n    }, \"Add Students\"), this.state.clickedAdd && /*#__PURE__*/React.createElement(AddStudents, {\n      createNew: false,\n      onAddStd: this.addStd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 47\n      }\n    }), this.state.isThereChanges && /*#__PURE__*/React.createElement(Row, {\n      className: \"mv5 justify-content-center\",\n      xs: 1,\n      md: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ma2 btn f3 grow btn-success br4 shadow\",\n      onClick: this.onConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 46\n      }\n    }, \"Confirm Changes\")), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ma2 btn f3 grow btn-danger  br4 shadow \",\n      onClick: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 46\n      }\n    }, \"Cancel \"))), /*#__PURE__*/React.createElement(Row, {\n      className: \"ma3 justify-content-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"pa0 justify-start flex\",\n      xs: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onDeleteClass,\n      className: \"ma2 btn f5 grow btn-danger  br4 shadow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 77\n      }\n    }, \"Delete Class !\"))));\n  }\n\n}\n\nexport default EditClass;","map":{"version":3,"sources":["/Users/mhd.sad22/graduation-project/graduation-project/src/components/EditClass.js"],"names":["React","Component","Col","Row","Redirect","AddStudents","Swal","EditClass","constructor","renderTable","students","rows","map","std","id","name","deleteStd","setState","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","changedList","concat","state","lastStateOfStudents","length","filter","key","isThereChanges","addStd","arr","idsOfCurrentStudents","obj","join","forEach","includes","push","clickedAdd","onAddStd","onDeleteClass","classData","className","props","classInfo","url","requestOptions","method","headers","body","JSON","stringify","fetch","res","json","console","log","catch","e","route","onConfirm","onCancel","back","componentDidMount","render","width","fontFamily","letterSpacing","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport AddStudents from './AddStudents';\nimport Swal from 'sweetalert2'\n\nclass EditClass extends Component {\n    constructor(){\n        super();\n        this.state={\n            rows:[],\n            clickedAdd:false,\n            isThereChanges:false,\n            students:[],\n            lastStateOfStudents:[],\n            route:null\n        }\n    }\n\n    componentDidMount(){\n        let students =[].concat(this.props.classInfo.students);\n        this.renderTable(students);\n        this.setState({students});\n    }\n    \n    renderTable=(students)=>{\n        let rows = students.map((std) => {\n            return (\n                <tr id={`r${std.id}`} key={std.id}>\n                    <td>{std.id}</td>\n                    <td>{std.name}</td>\n                    <td><button onClick={() => this.deleteStd(std.id)}>X</button></td>\n                </tr>\n            )\n        });\n        this.setState({rows});\n    }\n\n    deleteStd=(id)=> {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: 'User will have Admin Privileges',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33', \n            confirmButtonText: 'Yes!'\n        })\n        .then((result) => {\n            if (result.value) {\n                let changedList =[].concat(this.state.lastStateOfStudents);\n                let lastStateOfStudents = changedList.length? changedList : [].concat(this.state.students); \n                lastStateOfStudents = lastStateOfStudents.filter(std => {\n                    return std.id !== id;\n                })\n                let rows = this.state.rows;\n                rows = rows.filter(std => std.key !== id);\n                this.setState({\n                    rows,\n                    isThereChanges:true,\n                    lastStateOfStudents\n                });\n            }\n        })\n    }\n\n    addStd=(arr)=>{\n        let changedList =[].concat(this.state.lastStateOfStudents);\n        let lastStateOfStudents = changedList.length? changedList : [].concat(this.state.students); \n        let idsOfCurrentStudents = lastStateOfStudents.map(obj=>obj.id).join(' ');\n        let isThereChanges = this.state.isThereChanges;\n        arr.forEach(std => {\n            if( ! idsOfCurrentStudents.includes(std.id)){\n                lastStateOfStudents.push(std);\n                this.renderTable(lastStateOfStudents);\n                isThereChanges=true;\n            }\n        });\n        this.setState({\n            clickedAdd:false,\n            isThereChanges,\n            lastStateOfStudents\n        });\n    }\n\n    onAddStd=()=>{\n        this.setState({clickedAdd:true});\n    }\n\n    onDeleteClass=()=>{\n        Swal.fire({\n            title: 'Are you sure?',\n            text: 'User will have Admin Privileges',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33', \n            confirmButtonText: 'Yes!'\n        })\n        .then((result) => {\n            if(result.value){\n                let classData={\n                    className:this.props.classInfo.className\n                }\n                let url='http://localhost:3000/deleteClass';\n                let requestOptions={\n                    method: 'DELETE',\n                    headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(classData),\n                }\n                fetch(url, requestOptions)\n                .then(res=>res.json())\n                .then(console.log)\n                .catch(e=>{console.log(\"error on Delete class request..\",e)});\n                this.setState({route:'/'});\n            }\n        })\n    }\n\n    onConfirm=()=>{\n        Swal.fire({\n            title: 'Are you sure?',\n            text: 'User will have Admin Privileges',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33', \n            confirmButtonText: 'Yes!'\n        })\n        .then((result) => {\n            if(result.value){\n                let classData={\n                    className:this.props.classInfo.className,\n                    students : this.state.lastStateOfStudents\n                }\n                let url='http://localhost:3000/editClass';\n                let requestOptions={\n                    method: 'PUT',\n                    headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(classData),\n                }\n                fetch(url, requestOptions)\n                .then(res=>res.json())\n                .then(console.log)\n                .catch(e=>{console.log(\"error on edit class request..\",e)});\n\n                this.setState({\n                    isThereChanges:false,\n                    lastStateOfStudents:[],\n                    route:'/'\n                });\n            }\n        })\n    }\n\n    onCancel=()=>{\n        this.renderTable(this.state.students);\n        this.setState({\n        isThereChanges:false,\n        lastStateOfStudents:[]\n    });\n    }\n\n    back = () => {\n        this.setState({\n            route:'/show'\n        });\n    }\n\n    render(){\n        let {rows} = this.state;\n        return (\n            <>\n                {this.state.route? <Redirect to={this.state.route}/> : null}\n                <img className=\"mt-2 grow pointer\" onClick={this.back} src=\"https://img.icons8.com/fluent/48/000000/circled-left.png\" alt=\"go back\" />\n                <h2 className=\"f2 mt4 \">{this.props.classInfo.className}</h2>\n                <>\n                    <table className=\"table table-bordered mt5\" style={{ width: '100%' }}>\n                        <thead className=\"text-dark\" style={{ fontFamily: 'Lobster', letterSpacing: '2px' }}>\n                            <tr>\n                                <th>Student ID</th>\n                                <th>Student Name</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody id='body' style={{ fontFamily: 'Acme', color: 'gray' }}>\n                            {rows}\n                        </tbody>\n                    </table>\n                </>\n\n                { ! this.state.clickedAdd && (<button className=\"btn f3 grow btn-warning br4 shadow\" onClick={this.onAddStd}>Add Students</button>)}\n                {   this.state.clickedAdd && (<AddStudents createNew={false} onAddStd={this.addStd} />)}\n               \n                { this.state.isThereChanges && (\n                    <Row className=\"mv5 justify-content-center\"  xs={1} md={2}>\n                        <Col xs={12}  md={3}><button className=\"ma2 btn f3 grow btn-success br4 shadow\" onClick={this.onConfirm}>Confirm Changes</button></Col>\n                        <Col xs={12}  md={3}><button className=\"ma2 btn f3 grow btn-danger  br4 shadow \" onClick={this.onCancel}>Cancel </button></Col>\n                    </Row>\n                )}\n                <Row className=\"ma3 justify-content-start\"  >\n                    <Col className=\"pa0 justify-start flex\" xs={12} md={12}><button onClick={this.onDeleteClass} className=\"ma2 btn f5 grow btn-danger  br4 shadow\">Delete Class !</button></Col>\n                </Row>\n            </>\n        )\n    }\n\n}\nexport default EditClass;"]},"metadata":{},"sourceType":"module"}