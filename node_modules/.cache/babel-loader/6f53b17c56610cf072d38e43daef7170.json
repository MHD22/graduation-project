{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/graduation-project/graduation-project/src/components/StudentRegister.js\";\nimport React, { Component } from 'react';\n\nclass StudentRegister extends Component {\n  constructor() {\n    super();\n\n    this.setImage = e => {\n      e.preventDefault();\n      let formStudent = document.getElementById('formStudent');\n      let firstName = formStudent.firstName.value;\n      let lastName = formStudent.lastName.value;\n      let password = formStudent.password.value;\n      let id_number = formStudent.id_number.value;\n      let studentData = {\n        firstName,\n        lastName,\n        password,\n        id_number\n      };\n      const file = document.getElementById(\"file\");\n      var formdata = new FormData();\n      formdata.append(\"image\", file.files[0], \"file\");\n      formdata.append(\"image\", file.files[1], \"file\");\n      formdata.append(\"image\", file.files[2], \"file\");\n      console.log(\"formdata : \", formdata.values());\n\n      if (firstName && lastName && password && id_number && this.checkThreeImages(file)) {\n        this.setState({\n          firstName,\n          lastName,\n          password,\n          id_number\n        }, () => {\n          console.log(this.state);\n        });\n\n        if (this.checkThreeImages(file)) {\n          this.createPerson(formdata, studentData); //create the first image and add to it the 2 other images \n        }\n      } else {\n        alert(\"you should entere all the fields and three images ..\");\n      }\n    };\n\n    this.createPerson = (file, studentData) => {\n      // check if the name is exist or not ?\n      studentData = JSON.stringify(studentData);\n      file.append(\"studentData\", studentData);\n      console.log(`file data :  `, file);\n      var requestOptions = {\n        method: 'POST',\n        body: file,\n        redirect: 'follow'\n      };\n      fetch('http://localhost:3000/createPerson', requestOptions).then(response => response.json()).then(responseStudentData => {\n        // response if added: Student Is Added Successfuly\n        // if exist : The Student Is Already Exist\n        console.log(\"the state after the request done : \", responseStudentData);\n      }).catch(e => {\n        console.log(\"error while create the person..\", e);\n      }); //fffff\n    };\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      id_number: '',\n      faceID: '',\n      password: '',\n      images: []\n    };\n  } //file.files.length === 3\n\n\n  checkThreeImages(file) {\n    if (file.files.length === 3) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"formStudent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"firstName\",\n      placeholder: \"First Name ..\",\n      className: \"form-input mt-4\",\n      name: \"firstName\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Last Name ..\",\n      className: \"form-input mt-4\",\n      name: \"lastName\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"id_number\",\n      placeholder: \"Student ID ..\",\n      className: \"form-input mt-4\",\n      name: \"id_number\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password ..\",\n      className: \"form-input mt-4\",\n      name: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"file\",\n      className: \"form-input mt-4 pointer dim\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Upload your Image\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      className: \"form-file mt-4\",\n      multiple: true,\n      accept: \"image/*\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"submit\",\n      className: \"btn btn-success btn-submit mt-4\",\n      onClick: this.setImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \"Register\")));\n  }\n\n}\n\nexport default StudentRegister;","map":{"version":3,"sources":["/Users/mhd.sad22/graduation-project/graduation-project/src/components/StudentRegister.js"],"names":["React","Component","StudentRegister","constructor","setImage","e","preventDefault","formStudent","document","getElementById","firstName","value","lastName","password","id_number","studentData","file","formdata","FormData","append","files","console","log","values","checkThreeImages","setState","state","createPerson","alert","JSON","stringify","requestOptions","method","body","redirect","fetch","then","response","json","responseStudentData","catch","faceID","images","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react' ;\n\nclass StudentRegister extends Component{\n    constructor(){\n        super();\n        this.state={\n            firstName : '',\n            lastName : '',\n            id_number: '',\n            faceID:'',\n            password:'',\n            images:[]\n\n        }\n    }\n    //file.files.length === 3\n    checkThreeImages(file) {\n        if (file.files.length === 3){\n            return true ;\n        }\n        return false;\n        \n    }\n    setImage=(e)=> { \n        e.preventDefault();\n        let formStudent = document.getElementById('formStudent');\n\n        let firstName= formStudent.firstName.value;\n        let lastName= formStudent.lastName.value;\n        let password= formStudent.password.value;\n        let id_number= formStudent.id_number.value;\n\n        let studentData={firstName,lastName,password,id_number}\n\n        const file=document.getElementById(\"file\");\n        var formdata = new FormData();\n        formdata.append(\"image\", file.files[0], \"file\");\n        formdata.append(\"image\", file.files[1], \"file\");\n        formdata.append(\"image\", file.files[2], \"file\");\n        console.log(\"formdata : \", formdata.values());\n        \n        if(firstName && lastName && password && id_number&& this.checkThreeImages(file) ){\n            this.setState({firstName, lastName,password,id_number}, ()=>{console.log(this.state)});\n            \n        if (this.checkThreeImages(file)) {\n            this.createPerson(formdata,studentData); //create the first image and add to it the 2 other images \n            }\n        }\n        else{\n            alert(\"you should entere all the fields and three images ..\");\n        }\n    }\n\n\n    createPerson=(file,studentData)=>{\n        // check if the name is exist or not ?\n\n        studentData=JSON.stringify(studentData);\n        \n        file.append(\"studentData\",studentData);\n\n        console.log(`file data :  `,file);\n        var requestOptions = {\n            method: 'POST',\n            body: file,\n            redirect: 'follow'\n            };\n\n        fetch('http://localhost:3000/createPerson', requestOptions)\n        .then(response => response.json())\n        .then(responseStudentData=>{\n            // response if added: Student Is Added Successfuly\n            // if exist : The Student Is Already Exist\n            console.log(\"the state after the request done : \",responseStudentData);  \n        })\n        .catch(e=>{console.log(\"error while create the person..\",e)});   //fffff\n    }\n\n    render(){\n        return(\n            <>\n            <form id=\"formStudent\">\n                <input type=\"text\" id=\"firstName\" placeholder=\"First Name ..\" className=\"form-input mt-4\" name=\"firstName\" required />\n                <br />\n                <input type=\"text\" placeholder=\"Last Name ..\" className=\"form-input mt-4\" name=\"lastName\" required/>\n                <br />\n                <input type=\"text\" id=\"id_number\" placeholder=\"Student ID ..\" className=\"form-input mt-4\" name=\"id_number\" required/>\n                <br />\n                {/* for now it's not used */}\n                <input type=\"password\" placeholder=\"Password ..\" className=\"form-input mt-4\" name=\"password\" required/>\n                <br /> \n                <label htmlFor=\"file\" className=\"form-input mt-4 pointer dim\">Upload your Image</label>\n                <input type=\"file\" id=\"file\" className=\"form-file mt-4\" multiple accept=\"image/*\"  required/>\n                <br />\n                <button type=\"submit\" id='submit'  className=\"btn btn-success btn-submit mt-4\" onClick={this.setImage} >\n                Register\n                </button>\n            </form>\n            </>\n        );}\n}\nexport default StudentRegister ;"]},"metadata":{},"sourceType":"module"}