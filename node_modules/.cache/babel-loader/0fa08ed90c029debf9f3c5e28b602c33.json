{"ast":null,"code":"var _jsxFileName = \"/Users/mhd.sad22/graduation-project/graduation-project/src/components/StudentRegister.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport Swal from 'sweetalert2';\n\nclass StudentRegister extends Component {\n  constructor() {\n    super();\n\n    this.checkInputData = e => {\n      e.preventDefault();\n      let formStudent = document.getElementById('formStudent');\n      let firstName = formStudent.firstName.value;\n      let lastName = formStudent.lastName.value;\n      let id_number = formStudent.id_number.value;\n      let studentData = {\n        firstName,\n        lastName,\n        id_number\n      };\n      const file = document.getElementById(\"file\");\n\n      if (firstName && lastName && id_number && this.checkThreeImages(file)) {\n        var formdata = new FormData();\n        formdata.append(\"image\", file.files[0], \"file\");\n        formdata.append(\"image\", file.files[1], \"file\");\n        formdata.append(\"image\", file.files[2], \"file\");\n        this.sendToken(id_number).then(response => {\n          if (response === 'This ID Is Already Exist') {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops ...',\n              html: `<h5 class=\"text-danger font-lobster mt-2\">${response}</h5>`\n            });\n          } else {\n            let hashedToken = response;\n            Swal.fire({\n              title: '<h3 class=\"font-acme\">Enter the verification code sent to your email :</3>',\n              icon: 'question',\n              iconHtml: '?',\n              html: '<input type=\"text\" id=\"studentToken\" class=\"form-control text-center\" placeholder=\"Verification Code\" name=\"token\"/>'\n            }).then(() => {\n              this.createPerson(formdata, studentData, hashedToken);\n            });\n          }\n        });\n      } else {\n        Swal.fire({\n          icon: 'warning',\n          title: 'Hmmm ..',\n          html: '<h5 class=\"text-warning font-lobster mt-2\">All fields are required<br>And you should enter three images.</h5>'\n        });\n      }\n    };\n\n    this.sendToken = id => {\n      let baseUrl = document.getElementById('baseUrl').defaultValue;\n      let url = `${baseUrl}/sendTokenStd`;\n      let requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id\n        })\n      };\n      return fetch(url, requestOptions).then(response => response.json());\n    };\n\n    this.createPerson = (file, studentData, hashedToken) => {\n      // check if the name is exist or not ?\n      let token = document.getElementById('studentToken').value;\n      studentData.token = token;\n      studentData.hashedToken = hashedToken;\n      studentData = JSON.stringify(studentData);\n      file.append(\"studentData\", studentData);\n      var requestOptions = {\n        method: 'POST',\n        body: file,\n        redirect: 'follow'\n      };\n      let baseUrl = document.getElementById('baseUrl').defaultValue;\n      fetch(`${baseUrl}/createPerson`, requestOptions).then(response => response.json()).then(responseStudentData => {\n        if (responseStudentData === 'Student Is Added Successfuly') {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success',\n            html: '<h5 class=\"text-success font-lobster mt-2\">Student Added Successfully</h5>'\n          }).then(() => {\n            this.setState({\n              route: '/'\n            });\n          });\n        } else if (responseStudentData === \"Token is wrong.\") {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops ...',\n            html: '<h5 class=\"text-danger font-lobster mt-2\">Token is wrong! <br> Try again..</h5>'\n          });\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops ...',\n            html: `<h5 class=\"text-danger font-lobster mt-2\">Something wrong, try again later, please.</h5>`\n          });\n          console.log(responseStudentData);\n        }\n      }).catch(e => {\n        console.log(\"error while create the person..\", e);\n      });\n    };\n\n    this.handleClose = e => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.done = e => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.checkFiles = e => {\n      if (e.files.length === 3) {\n        this.setState;\n      }\n    };\n\n    this.state = {\n      show: false,\n      title: '',\n      body: '',\n      redirect: false,\n      route: null\n    };\n  }\n\n  checkThreeImages(file) {\n    return file.files.length === 3;\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.route ? /*#__PURE__*/React.createElement(Redirect, {\n      to: this.state.route,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 37\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"formStudent\",\n      hidden: this.state.hideform,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"firstName\",\n      id: \"firstName\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"lastName\",\n      id: \"lastName\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, \"ID Number\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"id_number\",\n      id: \"id_number\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"uploadFile mt4 grow dim pointer\",\n      htmlFor: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, \"Upload Your Images \", /*#__PURE__*/React.createElement(\"i\", {\n      class: \" fas fa-cloud-upload-alt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 106\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"spanSign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      hidden: true,\n      className: \" fas fa-exclamation errorSign \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"far fa-check-circle checkSign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 106\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      className: \"form-file mt-4\",\n      multiple: true,\n      accept: \"image/*\",\n      required: true,\n      onChange: this.checkFiles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"mt4 my-button\",\n      onClick: this.checkInputData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, \"Sign Up\")));\n  }\n\n}\n\nexport default StudentRegister;","map":{"version":3,"sources":["/Users/mhd.sad22/graduation-project/graduation-project/src/components/StudentRegister.js"],"names":["React","Component","Redirect","Swal","StudentRegister","constructor","checkInputData","e","preventDefault","formStudent","document","getElementById","firstName","value","lastName","id_number","studentData","file","checkThreeImages","formdata","FormData","append","files","sendToken","then","response","fire","icon","title","html","hashedToken","iconHtml","createPerson","id","baseUrl","defaultValue","url","requestOptions","method","headers","body","JSON","stringify","fetch","json","token","redirect","responseStudentData","setState","route","console","log","catch","handleClose","show","done","checkFiles","length","state","render","hideform"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport Swal from 'sweetalert2';\n\nclass StudentRegister extends Component {\n    constructor() {\n        super();\n        this.state = {\n            show: false,\n            title: '',\n            body: '',\n            redirect: false,\n            route: null\n        }\n    }\n    checkThreeImages(file) {\n        return file.files.length === 3;\n    };\n\n    checkInputData = (e) => {\n        e.preventDefault();\n        let formStudent = document.getElementById('formStudent');\n        let firstName = formStudent.firstName.value;\n        let lastName = formStudent.lastName.value;\n        let id_number = formStudent.id_number.value;\n\n        let studentData = { firstName, lastName, id_number }\n\n        const file = document.getElementById(\"file\");\n\n\n        if (firstName && lastName && id_number && this.checkThreeImages(file)) {\n\n            var formdata = new FormData();\n            formdata.append(\"image\", file.files[0], \"file\");\n            formdata.append(\"image\", file.files[1], \"file\");\n            formdata.append(\"image\", file.files[2], \"file\");\n            this.sendToken(id_number)\n                .then(response => {\n                    if (response === 'This ID Is Already Exist') {\n                        Swal.fire({\n                            icon: 'error',\n                            title: 'Oops ...',\n                            html: `<h5 class=\"text-danger font-lobster mt-2\">${response}</h5>`,\n                        })\n                    }\n                    else {\n                        let hashedToken = response;\n                        Swal.fire({\n                            title: '<h3 class=\"font-acme\">Enter the verification code sent to your email :</3>',\n                            icon: 'question',\n                            iconHtml: '?',\n                            html: '<input type=\"text\" id=\"studentToken\" class=\"form-control text-center\" placeholder=\"Verification Code\" name=\"token\"/>',\n                        }).then(() => {\n                            this.createPerson(formdata, studentData, hashedToken);\n                        });\n                    }\n\n                })\n\n        }\n        else {\n            Swal.fire({\n                icon: 'warning',\n                title: 'Hmmm ..',\n                html: '<h5 class=\"text-warning font-lobster mt-2\">All fields are required<br>And you should enter three images.</h5>',\n            })\n        }\n    }\n\n    sendToken = (id) => {\n        let baseUrl = document.getElementById('baseUrl').defaultValue;\n        let url = `${baseUrl}/sendTokenStd`;\n        let requestOptions =\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ id }),\n        };\n        return fetch(url, requestOptions)\n            .then(response => response.json())\n\n    }\n\n    createPerson = (file, studentData, hashedToken) => {\n        // check if the name is exist or not ?\n        let token = document.getElementById('studentToken').value;\n        studentData.token = token;\n        studentData.hashedToken = hashedToken;\n        studentData = JSON.stringify(studentData);\n        file.append(\"studentData\", studentData);\n        var requestOptions = {\n            method: 'POST',\n            body: file,\n            redirect: 'follow'\n        };\n        let baseUrl = document.getElementById('baseUrl').defaultValue;\n        fetch(`${baseUrl}/createPerson`, requestOptions)\n            .then(response => response.json())\n            .then(responseStudentData => {\n\n                if (responseStudentData === 'Student Is Added Successfuly') {\n\n                    Swal.fire({\n                        icon: 'success',\n                        title: 'Success',\n                        html: '<h5 class=\"text-success font-lobster mt-2\">Student Added Successfully</h5>',\n                    }).then(() => {\n                        this.setState({ route: '/' });\n                    })\n                }\n                else if (responseStudentData === \"Token is wrong.\") {\n\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Oops ...',\n                        html: '<h5 class=\"text-danger font-lobster mt-2\">Token is wrong! <br> Try again..</h5>',\n                    })\n                }\n                else {\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Oops ...',\n                        html: `<h5 class=\"text-danger font-lobster mt-2\">Something wrong, try again later, please.</h5>`,\n                    })\n                    console.log(responseStudentData);\n                }\n            })\n            .catch(e => { console.log(\"error while create the person..\", e) });\n    }\n\n    handleClose = (e) => {\n        this.setState({\n            show: false\n        });\n    }\n\n    done = (e) => {\n        this.setState({\n            redirect: true\n        });\n    }\n\n    checkFiles=(e)=>{\n       if(e.files.length===3){\n           this.setState\n       }\n    }\n\n    render() {\n\n        if (this.state.redirect) {\n            return <Redirect to='/' />;\n        }\n\n        return (\n            <>\n                {this.state.route ? <Redirect to={this.state.route} /> : null}\n                <form id=\"formStudent\" hidden={this.state.hideform}>\n                    {/* <input type=\"text\" id=\"firstName\" placeholder=\"First Name ..\" className=\"form-input mt-4\" name=\"firstName\" required />\n                <br />\n                <input type=\"text\" placeholder=\"Last Name ..\" className=\"form-input mt-4\" name=\"lastName\" required/>\n                <br />\n                <input type=\"text\" id=\"id_number\" placeholder=\"Student ID ..\" className=\"form-input mt-4\" name=\"id_number\" required/>\n                <br />\n                <label htmlFor=\"file\" className=\"form-input mt-4 pointer dim\">Upload your Image</label>\n                <input type=\"file\" id=\"file\" className=\"form-file mt-4\" multiple accept=\"image/*\"  required/>\n                <br />\n                <button type=\"submit\" id='submit'  className=\"btn btn-success btn-submit mt-4\" onClick={this.checkInputData} >\n                Register\n                </button> */}\n                    <label>First Name</label>\n                    <input name=\"firstName\" id=\"firstName\" type=\"text\" />\n\n                    <label>Last Name</label>\n                    <input name=\"lastName\" id=\"lastName\" type=\"text\" />\n\n                    <label>ID Number</label>\n                    <input name=\"id_number\" id=\"id_number\" type=\"text\" />\n\n                    <label className=\"uploadFile mt4 grow dim pointer\" htmlFor='file'>Upload Your Images <i class=\" fas fa-cloud-upload-alt\"></i></label>\n                    <span className=\"spanSign\" ><i hidden className=\" fas fa-exclamation errorSign \"></i><i className=\"far fa-check-circle checkSign\"></i></span>\n                    <input type=\"file\" id=\"file\" className=\"form-file mt-4\" multiple accept=\"image/*\" required onChange={this.checkFiles} />\n\n                    <button className=\"mt4 my-button\" onClick={this.checkInputData} >Sign Up</button>\n\n\n\n                </form>\n\n\n\n\n\n\n\n            </>\n        );\n    }\n}\nexport default StudentRegister;"]},"metadata":{},"sourceType":"module"}